============================================================================================
ELF Header:

Magic:  7F-45-4C-46-01-01-01-00-00-00-00-00-00-00-00-00
Class:                             ELFCLASS32
Data:                              ELFDATA2LSB
Version:                           EV_CURRENT
OS/ABI:                            ELFOSABI_NONE
ABI Version:                       0
Type:                              ET_REL
Machine:                           EM_ARM
Version:                           0x00000001
Entry point address:               0x0
Start of program headers:          0 (bytes into file)
Start of section headers:          776576 (bytes into file)
Flags:                             0x5000000
Size of this header:               52 (bytes)
Size of program headers:           0 (bytes)
Number of program headers:         0
Size of section hdeaders:          40 (bytes)
Number of section headers:         39
Section header string table index: 1


============================================================================================
Section Headers:

[Nr] Name                  Type            Addr     Off    Size   ES Flg Lk Inf Al
[00]                       SHT_NULL        00000000 000000 000000 00     00  00  0
[01] .strtab               SHT_STRTAB      00000000 09DB64 01FE1A 00     00  00  1
[02] .text                 SHT_PROGBITS    00000000 000034 000000 00  AX 00  00  4
[03] .text.llilum          SHT_PROGBITS    00000000 000034 00CE5C 00  AX 00  00  4
[04] .rel.text.llilum      SHT_REL         00000000 07723C 005E20 08     38  03  4
[05] .ARM.exidx.text.llilum1879048193      00000000 00CE90 0016E0 00  AL 03  00  4
[06] .rel.ARM.exidx.text.llilumSHT_REL         00000000 07D05C 002DC0 08     38  05  4
[07] .ARM.extab.text.llilumSHT_PROGBITS    00000000 00E570 000D14 00   A 00  00  4
[08] .rel.ARM.extab.text.llilumSHT_REL         00000000 07FE1C 000180 08     38  07  4
[09] .data.llilum          SHT_PROGBITS    00000000 00F290 000AB1 00  WA 00  00 10
[10] .rel.data.llilum      SHT_REL         00000000 07FF9C 0001B8 08     38  09  4
[11] .rodata.llilum        SHT_PROGBITS    00000000 00FD50 007E5C 00  WA 00  00 10
[12] .rel.rodata.llilum    SHT_REL         00000000 080154 007AB0 08     38  11  4
[13] .rodata.llilum.llilum.VTableSHT_PROGBITS    00000000 017BB0 002CF8 00  WA 00  00 10
[14] .rel.rodata.llilum.llilum.VTableSHT_REL         00000000 087C04 0029D8 08     38  13  4
[15] .rodata.llilum.llilum.StringSHT_PROGBITS    00000000 01A8B0 004D44 00  WA 00  00 10
[16] .rel.rodata.llilum.llilum.StringSHT_REL         00000000 08A5DC 000AD0 08     38  15  4
[17] .rodata..Lswitch.tableSHT_PROGBITS    00000000 01F600 000034 00   A 00  00 10
[18] .rodata..Lswitch.table.1SHT_PROGBITS    00000000 01F640 000040 00   A 00  00 10
[19] .debug_str            SHT_PROGBITS    00000000 01F680 01F306 01  MS 00  00  1
[20] .debug_loc            SHT_PROGBITS    00000000 03E986 002767 00     00  00  1
[21] .rel.debug_loc        SHT_REL         00000000 08B0AC 002910 08     38  20  4
[22] .debug_abbrev         SHT_PROGBITS    00000000 0410ED 00027F 00     00  00  1
[23] .debug_info           SHT_PROGBITS    00000000 04136C 00DFF4 00     00  00  1
[24] .rel.debug_info       SHT_REL         00000000 08D9BC 00D000 08     38  23  4
[25] .debug_ranges         SHT_PROGBITS    00000000 04F360 0001F0 00     00  00  1
[26] .rel.debug_ranges     SHT_REL         00000000 09A9BC 0003D0 08     38  25  4
[27] .debug_macinfo        SHT_PROGBITS    00000000 04F550 000001 00     00  00  1
[28] .debug_pubnames       SHT_PROGBITS    00000000 04F551 003DEA 00     00  00  1
[29] .rel.debug_pubnames   SHT_REL         00000000 09AD8C 000008 08     38  28  4
[30] .debug_pubtypes       SHT_PROGBITS    00000000 05333B 00402F 00     00  00  1
[31] .rel.debug_pubtypes   SHT_REL         00000000 09AD94 000008 08     38  30  4
[32] .note.GNU-stack       SHT_PROGBITS    00000000 05736A 000000 00     00  00  1
[33] .ARM.attributes       1879048195      00000000 05736A 000041 00     00  00  1
[34] .debug_frame          SHT_PROGBITS    00000000 0573AC 0047D4 00     00  00  4
[35] .rel.debug_frame      SHT_REL         00000000 09AD9C 002DC0 08     38  34  4
[36] .debug_line           SHT_PROGBITS    00000000 05BB80 00272C 00     00  00  1
[37] .rel.debug_line       SHT_REL         00000000 09DB5C 000008 08     38  36  4
[38] .symtab               SHT_SYMTAB      00000000 05E2AC 018F90 10     01 6214  4
Key to Flags:
W (write), A (alloc), X (execute), M (merge), S (strings)
I (info), L (link order), G (group), x (unknown)
0 (extra OS processing required), o (OS specific), p (processor specific)


============================================================================================
Object Sizes

-- All Code     : ==> 53872 bytes
-- Zelig Methods: ==> 53872 bytes
-- Objects      : ==> 58094 bytes


============================================================================================
Total size: 112082




============================================================================================
Types size (types with methods)

types count: 164

Microsoft.Zelig.Runtime.MarkAndSweepCollector => 7276 bytes
System.Number => 5960 bytes
System.Text.StringBuilder => 2722 bytes
Microsoft.Zelig.Runtime.SyncBlockTable => 1602 bytes
System.Threading.Thread => 1578 bytes
Microsoft.Zelig.Runtime.ThreadManager => 1496 bytes
System.String => 1444 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M => 1272 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation => 1184 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager => 1110 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation => 1070 bytes
Microsoft.Zelig.Runtime.Unwind => 1056 bytes
System.Globalization.NumberFormatInfo => 896 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable => 804 bytes
Microsoft.Zelig.Runtime.MemorySegment => 748 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord => 746 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer => 744 bytes
Microsoft.Zelig.ArrayUtility => 704 bytes
Microsoft.Zelig.Runtime.Synchronization.CriticalSection => 676 bytes
Microsoft.Zelig.Runtime.TypeSystemManager => 650 bytes
System.Number.ToStringFormatState => 650 bytes
System.Buffer => 618 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context => 610 bytes
System.DateTime => 606 bytes
System.Globalization.GregorianCalendar => 598 bytes
System.Array => 588 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData> => 516 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation => 514 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation => 508 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler => 500 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack => 496 bytes
Microsoft.Zelig.Runtime.MemoryManager => 492 bytes
Microsoft.Zelig.Runtime.BrickTable => 484 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager => 460 bytes
System.Threading.EventWaitHandle.EventWaitableObject => 452 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin => 422 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context => 422 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context => 422 bytes
System.Collections.BitArray => 400 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer => 374 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock => 372 bytes
Microsoft.Zelig.Runtime.HardwareProvider => 368 bytes
System.Globalization.CultureInfo => 312 bytes
Windows.Devices.Gpio.DefaultPinProvider => 302 bytes
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors => 300 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController => 298 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder => 286 bytes
System.Int16 => 284 bytes
System.MulticastDelegate => 284 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation => 282 bytes
Windows.Devices.Gpio.GpioController => 272 bytes
Microsoft.Zelig.Runtime.Bootstrap => 260 bytes
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation => 260 bytes
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation => 260 bytes
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet.EquivalenceDelegation => 256 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals => 254 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback => 248 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback => 248 bytes
Microsoft.Zelig.Runtime.Synchronization.YieldLock => 248 bytes
Microsoft.Zelig.Runtime.SyncBlock => 240 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M => 238 bytes
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation => 238 bytes
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation> => 236 bytes
System.Type => 234 bytes
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation => 232 bytes
Windows.Devices.Gpio.GpioPin => 228 bytes
Microsoft.Zelig.Runtime.Finalizer => 224 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager => 222 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext => 220 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord> => 218 bytes
Microsoft.Llilum.Devices.Gpio.ValueChangedHandler => 212 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread> => 210 bytes
Microsoft.Zelig.Runtime.ObjectHeader => 210 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker => 208 bytes
Microsoft.Zelig.Runtime.TypeSystem.AbstractReferenceTypeRepresentation => 208 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation => 208 bytes
Microsoft.Zelig.Runtime.TypeSystem.ScalarTypeRepresentation => 208 bytes
Microsoft.Zelig.Runtime.TypeSystem.ValueTypeRepresentation => 208 bytes
System.Int32 => 206 bytes
System.UInt32 => 206 bytes
Microsoft.CortexM3OnMBED.ThreadManager => 204 bytes
System.Reflection.MemberInfo => 204 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject => 198 bytes
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet => 192 bytes
System.Byte => 188 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject> => 186 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioProvider => 184 bytes
System.Char => 184 bytes
Microsoft.Zelig.Runtime.BugCheck => 180 bytes
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation => 180 bytes
Microsoft.Zelig.Runtime.TypeSystem.ConcreteReferenceTypeRepresentation => 176 bytes
Microsoft.Zelig.Runtime.TypeSystem.InterfaceTypeRepresentation => 176 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer> => 168 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker> => 166 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer => 162 bytes
System.Threading.Monitor => 162 bytes
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation => 160 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext => 160 bytes
System.Threading.ThreadStart => 160 bytes
Microsoft.CortexM0OnMBED.MemoryManager => 158 bytes
Microsoft.Zelig.Runtime.SchedulerTime => 156 bytes
System.Object => 156 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler => 154 bytes
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer => 152 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler> => 144 bytes
Microsoft.Zelig.Runtime.SmartHandles.InterruptState => 144 bytes
System.Delegate => 140 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays => 136 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper => 136 bytes
System.UIntPtr => 136 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager => 130 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler => 128 bytes
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread> => 124 bytes
System.Diagnostics.Stopwatch => 124 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData => 120 bytes
Microsoft.Zelig.CHECKS => 120 bytes
Microsoft.Zelig.Runtime.Helpers.FloatImplementation => 120 bytes
System.Threading.EventWaitHandle => 120 bytes
Microsoft.CortexM0OnMBED.Device => 112 bytes
Microsoft.Llilum.Devices.Gpio.GpioPin => 106 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension => 104 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer> => 102 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker> => 102 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject> => 102 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord> => 102 bytes
Microsoft.Zelig.Runtime.TypeSystem.CodeMap => 102 bytes
System.Exception => 98 bytes
System.Threading.WaitHandle => 98 bytes
Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt => 96 bytes
System.ObjectDisposedException => 96 bytes
Managed.Program => 92 bytes
System.Activator => 92 bytes
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager => 88 bytes
Microsoft.Llilum.STM32F401.Processor => 86 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker => 80 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector => 78 bytes
Microsoft.DeviceModels.Chipset.CortexM.SysTick => 72 bytes
Microsoft.Zelig.AssertionViolationException => 72 bytes
System.RuntimeType => 70 bytes
Microsoft.Zelig.Runtime.SchedulerTimeSpan => 64 bytes
Microsoft.Zelig.Runtime.Device => 58 bytes
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio => 56 bytes
System.ArgumentException => 56 bytes
System.Globalization.DateTimeFormatInfo => 52 bytes
Microsoft.Zelig.Runtime.KernelPerformanceCounter => 48 bytes
Microsoft.CortexM0OnMBED.Peripherals => 44 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP => 44 bytes
System.Enum => 44 bytes
Microsoft.CortexM4OnMBED.Processor => 40 bytes
Microsoft.Llilum.STM32F401.HardwareModel.HardwareProviders.GpioProvider => 40 bytes
Microsoft.CortexM4OnCMSISCore.Processor => 36 bytes
Microsoft.Llilum.STM32F401.ThreadManager => 32 bytes
Microsoft.Llilum.STM32F401.Processor.Context => 28 bytes
Microsoft.Zelig.Runtime.Processor => 28 bytes
System.Globalization.Calendar => 28 bytes
Microsoft.DeviceModels.Chipset.CortexM4.Processor => 24 bytes
Microsoft.Llilum.STM32F401.Device => 24 bytes
Microsoft.Llilum.STM32F401.Drivers.ContextSwitchTimer => 24 bytes
Microsoft.Llilum.STM32F401.Board => 18 bytes
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider => 14 bytes
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler => 6 bytes
Microsoft.CortexM0OnCMSISCore.Storage => 4 bytes
Microsoft.CortexM0OnMBED.Memory => 4 bytes
System.GC => 4 bytes


============================================================================================
Methods sizes (alphabetical order)

Methods count: 732

Managed.Program::Main (Managed.Program::Main#151) ==> 46 bytes
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::Collect (Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::Collect#20549) ==> 18 bytes
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::WalkStackFrames (Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::WalkStackFrames#20550) ==> 52 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::Activate (Microsoft.CortexM0OnCMSISCore.Peripherals::Activate#20520) ==> 12 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::CauseInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::CauseInterrupt#20523) ==> 8 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::GetPerformanceCounterFrequency (Microsoft.CortexM0OnCMSISCore.Peripherals::GetPerformanceCounterFrequency#20528) ==> 8 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::Initialize (Microsoft.CortexM0OnCMSISCore.Peripherals::Initialize#20519) ==> 38 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessFastInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessFastInterrupt#20527) ==> 80 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessInterrupt#20526) ==> 80 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::ReadPerformanceCounter (Microsoft.CortexM0OnCMSISCore.Peripherals::ReadPerformanceCounter#20529) ==> 8 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::WaitForInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::WaitForInterrupt#20525) ==> 8 bytes
Microsoft.CortexM0OnCMSISCore.Storage::InitializeStorage (Microsoft.CortexM0OnCMSISCore.Storage::InitializeStorage#20536) ==> 2 bytes
Microsoft.CortexM0OnMBED.Device::ProcessBugCheck (Microsoft.CortexM0OnMBED.Device::ProcessBugCheck#20235) ==> 20 bytes
Microsoft.CortexM0OnMBED.Device::ProcessLog (Microsoft.CortexM0OnMBED.Device::ProcessLog#20236) ==> 24 bytes
Microsoft.CortexM0OnMBED.Device::ProcessLog (Microsoft.CortexM0OnMBED.Device::ProcessLog#20237) ==> 24 bytes
Microsoft.CortexM0OnMBED.Device::ProcessLog (Microsoft.CortexM0OnMBED.Device::ProcessLog#20238) ==> 24 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback::Invoke (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback::Invoke#20499) ==> 124 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::.ctor (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::.ctor#20507) ==> 52 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Cancel (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Cancel#20508) ==> 18 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Invoke (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Invoke#20509) ==> 18 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::set_Timeout (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::set_Timeout#20512) ==> 22 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::CreateTimer (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::CreateTimer#20327) ==> 40 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Deregister (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Deregister#20336) ==> 32 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::get_CurrentTime (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::get_CurrentTime#20328) ==> 72 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::HandleSystemTimer (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::HandleSystemTimer#20338) ==> 44 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Initialize (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Initialize#20326) ==> 120 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::ProcessTimeout (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::ProcessTimeout#20332) ==> 148 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Refresh (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Refresh#20333) ==> 92 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Register (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Register#20335) ==> 98 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Reload (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Reload#20334) ==> 44 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::TimeSinceAccumulatorUpdate (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::TimeSinceAccumulatorUpdate#20337) ==> 14 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::.ctor (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::.ctor#20356) ==> 100 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::DisableInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::DisableInterrupt#20365) ==> 18 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::EnableInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::EnableInterrupt#20364) ==> 76 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::HandleGpioInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::HandleGpioInterrupt#20369) ==> 52 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::ProcessGpioInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::ProcessGpioInterrupt#20368) ==> 8 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetActivePinEdge (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetActivePinEdge#20363) ==> 30 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinDirection (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinDirection#20362) ==> 16 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinMode (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinMode#20361) ==> 12 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::Write (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::Write#20360) ==> 10 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioProvider::CreateGpioPin (Microsoft.CortexM0OnMBED.HardwareModel.GpioProvider::CreateGpioPin#20458) ==> 92 bytes
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::get_InvalidPin (Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::get_InvalidPin#20452) ==> 6 bytes
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::PinToIndex (Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::PinToIndex#20451) ==> 4 bytes
Microsoft.CortexM0OnMBED.Memory::InitializeMemory (Microsoft.CortexM0OnMBED.Memory::InitializeMemory#20243) ==> 2 bytes
Microsoft.CortexM0OnMBED.MemoryManager::InitializeMemoryManager (Microsoft.CortexM0OnMBED.MemoryManager::InitializeMemoryManager#20266) ==> 66 bytes
Microsoft.CortexM0OnMBED.MemoryManager::RefersToMemory (Microsoft.CortexM0OnMBED.MemoryManager::RefersToMemory#20267) ==> 26 bytes
Microsoft.CortexM0OnMBED.Peripherals::Activate (Microsoft.CortexM0OnMBED.Peripherals::Activate#20245) ==> 12 bytes
Microsoft.CortexM0OnMBED.Peripherals::ReadPerformanceCounter (Microsoft.CortexM0OnMBED.Peripherals::ReadPerformanceCounter#20246) ==> 20 bytes
Microsoft.CortexM3OnMBED.ThreadManager::Activate (Microsoft.CortexM3OnMBED.ThreadManager::Activate#20178) ==> 64 bytes
Microsoft.CortexM3OnMBED.ThreadManager::SetNextWaitTimer (Microsoft.CortexM3OnMBED.ThreadManager::SetNextWaitTimer#20179) ==> 52 bytes
Microsoft.CortexM3OnMBED.ThreadManager::WaitExpired (Microsoft.CortexM3OnMBED.ThreadManager::WaitExpired#20180) ==> 24 bytes
Microsoft.CortexM4OnCMSISCore.Processor::InitializeProcessor (Microsoft.CortexM4OnCMSISCore.Processor::InitializeProcessor#21081) ==> 18 bytes
Microsoft.CortexM4OnMBED.Processor::.cctor (Microsoft.CortexM4OnMBED.Processor::.cctor#20138) ==> 20 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Cancel (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Cancel#20674) ==> 30 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::ContextSwitchTimer_Handler_Zelig (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::ContextSwitchTimer_Handler_Zelig#20682) ==> 76 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::GetTicksForQuantumValue (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::GetTicksForQuantumValue#20676) ==> 116 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Initialize (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Initialize#20672) ==> 44 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Reset (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Reset#20675) ==> 78 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback::Invoke (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback::Invoke#20690) ==> 124 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::.ctor (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::.ctor#20704) ==> 48 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Create (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Create#20705) ==> 44 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Invoke (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Invoke#20708) ==> 14 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData::Equals (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData::Equals#59822) ==> 60 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Activate (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Activate#20650) ==> 24 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ClearInterrupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ClearInterrupt#20659) ==> 2 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::DispatchInterrupts (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::DispatchInterrupts#20663) ==> 42 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::GetNextActiveInterupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::GetNextActiveInterupt#20658) ==> 12 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Initialize (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Initialize#20649) ==> 152 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::PostInterrupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::PostInterrupt#20662) ==> 40 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ProcessInterrupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ProcessInterrupt#20657) ==> 2 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::Activate (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::Activate#20631) ==> 28 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::CancelQuantumTimer (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::CancelQuantumTimer#20632) ==> 16 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeAfterStaticConstructors (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeAfterStaticConstructors#20630) ==> 8 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeBeforeStaticConstructors (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeBeforeStaticConstructors#20629) ==> 8 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::SetNextQuantumTimer (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::SetNextQuantumTimer#20633) ==> 16 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::TimeQuantumExpired (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::TimeQuantumExpired#20635) ==> 26 bytes
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_HasRef (Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_HasRef#20617) ==> 20 bytes
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_IsPrecise (Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_IsPrecise#20618) ==> 20 bytes
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_TenMillisecondsCalibrationValue (Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_TenMillisecondsCalibrationValue#20616) ==> 12 bytes
Microsoft.DeviceModels.Chipset.CortexM4.Processor::InitializeProcessor (Microsoft.DeviceModels.Chipset.CortexM4.Processor::InitializeProcessor#21098) ==> 12 bytes
Microsoft.Llilum.Devices.Gpio.GpioPin::SendEventInternal (Microsoft.Llilum.Devices.Gpio.GpioPin::SendEventInternal#19353) ==> 24 bytes
Microsoft.Llilum.Devices.Gpio.GpioPin::TryAcquireGpioPin (Microsoft.Llilum.Devices.Gpio.GpioPin::TryAcquireGpioPin#4859) ==> 20 bytes
Microsoft.Llilum.Devices.Gpio.GpioPin::TryCreateGpioPin (Microsoft.Llilum.Devices.Gpio.GpioPin::TryCreateGpioPin#19352) ==> 38 bytes
Microsoft.Llilum.Devices.Gpio.ValueChangedHandler::Invoke (Microsoft.Llilum.Devices.Gpio.ValueChangedHandler::Invoke#19329) ==> 106 bytes
Microsoft.Llilum.STM32F401.Board::get_NCPin (Microsoft.Llilum.STM32F401.Board::get_NCPin#21108) ==> 6 bytes
Microsoft.Llilum.STM32F401.Board::GetSystemTimerIRQNumber (Microsoft.Llilum.STM32F401.Board::GetSystemTimerIRQNumber#21112) ==> 4 bytes
Microsoft.Llilum.STM32F401.Board::PinToIndex (Microsoft.Llilum.STM32F401.Board::PinToIndex#21109) ==> 4 bytes
Microsoft.Llilum.STM32F401.Device::get_BootstrapStack (Microsoft.Llilum.STM32F401.Device::get_BootstrapStack#21117) ==> 12 bytes
Microsoft.Llilum.STM32F401.Drivers.ContextSwitchTimer::GetTicksForQuantumValue (Microsoft.Llilum.STM32F401.Drivers.ContextSwitchTimer::GetTicksForQuantumValue#21169) ==> 12 bytes
Microsoft.Llilum.STM32F401.HardwareModel.HardwareProviders.GpioProvider::GetGpioPinIRQNumber (Microsoft.Llilum.STM32F401.HardwareModel.HardwareProviders.GpioProvider::GetGpioPinIRQNumber#21167) ==> 20 bytes
Microsoft.Llilum.STM32F401.Processor.Context::SwitchTo (Microsoft.Llilum.STM32F401.Processor.Context::SwitchTo#21174) ==> 14 bytes
Microsoft.Llilum.STM32F401.Processor::AllocateProcessorContext (Microsoft.Llilum.STM32F401.Processor::AllocateProcessorContext#21160) ==> 32 bytes
Microsoft.Llilum.STM32F401.Processor::InitializeProcessor (Microsoft.Llilum.STM32F401.Processor::InitializeProcessor#21159) ==> 22 bytes
Microsoft.Llilum.STM32F401.ThreadManager::get_DefaultStackSize (Microsoft.Llilum.STM32F401.ThreadManager::get_DefaultStackSize#21165) ==> 16 bytes
Microsoft.Zelig.ArrayUtility::AppendToArray (Microsoft.Zelig.ArrayUtility::AppendToArray#38112) ==> 44 bytes
Microsoft.Zelig.ArrayUtility::AppendToNotNullArray (Microsoft.Zelig.ArrayUtility::AppendToNotNullArray#43485) ==> 84 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#38124) ==> 108 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#39123) ==> 108 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#39126) ==> 108 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#39260) ==> 208 bytes
Microsoft.Zelig.AssertionViolationException::Create (Microsoft.Zelig.AssertionViolationException::Create#13160) ==> 36 bytes
Microsoft.Zelig.CHECKS::ASSERT (Microsoft.Zelig.CHECKS::ASSERT#13375) ==> 60 bytes
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::Contains (Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::Contains#23419) ==> 20 bytes
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::FindEntry (Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::FindEntry#23431) ==> 196 bytes
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_EnablePin (Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_EnablePin#20770) ==> 28 bytes
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_AllocateTimer (Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_AllocateTimer#20936) ==> 76 bytes
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::LLOS_Die (Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::LLOS_Die#20722) ==> 8 bytes
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::ThrowOnError (Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::ThrowOnError#20721) ==> 284 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_FastInterruptThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_FastInterruptThread#5988) ==> 4 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_InterruptThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_InterruptThread#5987) ==> 4 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::IdleThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::IdleThread#5990) ==> 22 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::InitializeAfterStaticConstructors (Microsoft.Zelig.Runtime.ARMv7ThreadManager::InitializeAfterStaticConstructors#5984) ==> 136 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::RemoveThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::RemoveThread#5986) ==> 18 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::StartThreads (Microsoft.Zelig.Runtime.ARMv7ThreadManager::StartThreads#5985) ==> 16 bytes
Microsoft.Zelig.Runtime.Bootstrap::HardwareActivation (Microsoft.Zelig.Runtime.Bootstrap::HardwareActivation#4409) ==> 20 bytes
Microsoft.Zelig.Runtime.Bootstrap::HardwareInitialization (Microsoft.Zelig.Runtime.Bootstrap::HardwareInitialization#4405) ==> 68 bytes
Microsoft.Zelig.Runtime.Bootstrap::HeapInitialization (Microsoft.Zelig.Runtime.Bootstrap::HeapInitialization#4406) ==> 28 bytes
Microsoft.Zelig.Runtime.Bootstrap::Initialization (Microsoft.Zelig.Runtime.Bootstrap::Initialization#4403) ==> 52 bytes
Microsoft.Zelig.Runtime.Bootstrap::SoftwareActivation (Microsoft.Zelig.Runtime.Bootstrap::SoftwareActivation#4410) ==> 20 bytes
Microsoft.Zelig.Runtime.Bootstrap::SoftwareInitialization (Microsoft.Zelig.Runtime.Bootstrap::SoftwareInitialization#4408) ==> 52 bytes
Microsoft.Zelig.Runtime.BrickTable::FindLowerBoundForObjectPointer (Microsoft.Zelig.Runtime.BrickTable::FindLowerBoundForObjectPointer#5545) ==> 136 bytes
Microsoft.Zelig.Runtime.BrickTable::Initialize (Microsoft.Zelig.Runtime.BrickTable::Initialize#5542) ==> 64 bytes
Microsoft.Zelig.Runtime.BrickTable::MarkObject (Microsoft.Zelig.Runtime.BrickTable::MarkObject#5544) ==> 104 bytes
Microsoft.Zelig.Runtime.BrickTable::Reset (Microsoft.Zelig.Runtime.BrickTable::Reset#5543) ==> 44 bytes
Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOff (Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOff#5718) ==> 26 bytes
Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOn (Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOn#5719) ==> 32 bytes
Microsoft.Zelig.Runtime.BugCheck::Log (Microsoft.Zelig.Runtime.BugCheck::Log#5712) ==> 20 bytes
Microsoft.Zelig.Runtime.BugCheck::Log (Microsoft.Zelig.Runtime.BugCheck::Log#5713) ==> 24 bytes
Microsoft.Zelig.Runtime.BugCheck::Log (Microsoft.Zelig.Runtime.BugCheck::Log#5714) ==> 32 bytes
Microsoft.Zelig.Runtime.BugCheck::Raise (Microsoft.Zelig.Runtime.BugCheck::Raise#5711) ==> 20 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker::Process (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker::Process#6581) ==> 40 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::CreateStackWalker (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::CreateStackWalker#5196) ==> 32 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForArraysSize (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForArraysSize#5195) ==> 4 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForObjectsSize (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForObjectsSize#5194) ==> 6 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld#5197) ==> 4 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateArray (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateArray#6041) ==> 200 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateInner (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateInner#6048) ==> 112 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObject (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObject#6038) ==> 188 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObjectWithExtensions (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObjectWithExtensions#6040) ==> 188 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateString (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateString#6044) ==> 200 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeArraySize (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeArraySize#6047) ==> 10 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeObjectSize (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeObjectSize#6046) ==> 12 bytes
Microsoft.Zelig.Runtime.Device::get_BootstrapStack (Microsoft.Zelig.Runtime.Device::get_BootstrapStack#5491) ==> 12 bytes
Microsoft.Zelig.Runtime.Device::ProcessBugCheck (Microsoft.Zelig.Runtime.Device::ProcessBugCheck#5483) ==> 20 bytes
Microsoft.Zelig.Runtime.Device::ProcessLog (Microsoft.Zelig.Runtime.Device::ProcessLog#5484) ==> 2 bytes
Microsoft.Zelig.Runtime.Device::ProcessLog (Microsoft.Zelig.Runtime.Device::ProcessLog#5485) ==> 2 bytes
Microsoft.Zelig.Runtime.Device::ProcessLog (Microsoft.Zelig.Runtime.Device::ProcessLog#5486) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfMarkPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfMarkPhase#7021) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfSweepPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfSweepPhase#7024) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Initialize (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Initialize#7018) ==> 108 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Mark (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Mark#7020) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::RestartExecution (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::RestartExecution#7025) ==> 68 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfMarkPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfMarkPhase#7019) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfSweepPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfSweepPhase#7022) ==> 128 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Sweep (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Sweep#7023) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Worker (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Worker#7026) ==> 184 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker::.ctor (Microsoft.Zelig.Runtime.Finalizer.Tracker::.ctor#6597) ==> 40 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker::Allocate (Microsoft.Zelig.Runtime.Finalizer.Tracker::Allocate#6598) ==> 128 bytes
Microsoft.Zelig.Runtime.Finalizer::.cctor (Microsoft.Zelig.Runtime.Finalizer::.cctor#5285) ==> 112 bytes
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::Initialize (Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::Initialize#5286) ==> 2 bytes
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::RestartExecution (Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::RestartExecution#5293) ==> 2 bytes
Microsoft.Zelig.Runtime.HardwareProvider::.cctor (Microsoft.Zelig.Runtime.HardwareProvider::.cctor#5269) ==> 72 bytes
Microsoft.Zelig.Runtime.HardwareProvider::TryReservePins (Microsoft.Zelig.Runtime.HardwareProvider::TryReservePins#5265) ==> 224 bytes
Microsoft.Zelig.Runtime.Helpers.FloatImplementation::Equals (Microsoft.Zelig.Runtime.Helpers.FloatImplementation::Equals#59751) ==> 60 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::.ctor (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::.ctor#27574) ==> 108 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueBlocking (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueBlocking#27581) ==> 104 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueNonblocking (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueNonblocking#27579) ==> 100 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::EnqueueNonblocking (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::EnqueueNonblocking#27578) ==> 96 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::.ctor#27523) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::FirstTarget#27526) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_StartOfForwardWalk#27530) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::.ctor#27555) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::.ctor#21916) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_StartOfForwardWalk#21923) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertAtTail#21917) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::.ctor#21735) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::FirstTarget#21738) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertAtTail#21736) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::.ctor#21747) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::ExtractFirstNode (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::ExtractFirstNode#21753) ==> 30 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::FirstTarget#21750) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_StartOfForwardWalk#21754) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertAtTail#21748) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::.ctor#21581) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::FirstTarget#21584) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::get_StartOfForwardWalk#21588) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::InsertAtTail#21582) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::LastTarget (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::LastTarget#21586) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::InsertBefore#27537) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::RemoveFromList#27538) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertBefore#22159) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::RemoveFromList#22160) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertBefore#22053) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::RemoveFromList#22054) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertBefore#21761) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::RemoveFromList#21762) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::InsertBefore#21612) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::RemoveFromList#21613) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::VerifyUnlinked (Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::VerifyUnlinked#21618) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelPerformanceCounter::Merge (Microsoft.Zelig.Runtime.KernelPerformanceCounter::Merge#5729) ==> 24 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::Allocate (Microsoft.Zelig.Runtime.LinearMemoryManager::Allocate#5702) ==> 128 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::InitializationComplete (Microsoft.Zelig.Runtime.LinearMemoryManager::InitializationComplete#5701) ==> 8 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::InitializeMemoryManager (Microsoft.Zelig.Runtime.LinearMemoryManager::InitializeMemoryManager#5700) ==> 8 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::RefersToMemory (Microsoft.Zelig.Runtime.LinearMemoryManager::RefersToMemory#5704) ==> 4 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::Release (Microsoft.Zelig.Runtime.LinearMemoryManager::Release#5703) ==> 184 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays::Equals (Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays::Equals#59755) ==> 68 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::Collect (Microsoft.Zelig.Runtime.MarkAndSweepCollector::Collect#5230) ==> 244 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::DumpFreeBlockTracking (Microsoft.Zelig.Runtime.MarkAndSweepCollector::DumpFreeBlockTracking#5243) ==> 2 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ExtendMarking (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ExtendMarking#5235) ==> 18 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::FindObject (Microsoft.Zelig.Runtime.MarkAndSweepCollector::FindObject#5229) ==> 116 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForArraysSize (Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForArraysSize#5225) ==> 4 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForObjectsSize (Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForObjectsSize#5224) ==> 6 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::InitializeGarbageCollectionManager (Microsoft.Zelig.Runtime.MarkAndSweepCollector::InitializeGarbageCollectionManager#5227) ==> 244 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsMarked (Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsMarked#5234) ==> 50 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld (Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld#5236) ==> 88 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::NotifyNewObject (Microsoft.Zelig.Runtime.MarkAndSweepCollector::NotifyNewObject#5228) ==> 12 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ProcessMarkStack (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ProcessMarkStack#5254) ==> 1332 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::PushObjectReference (Microsoft.Zelig.Runtime.MarkAndSweepCollector::PushObjectReference#5252) ==> 704 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::RebuildBrickTable (Microsoft.Zelig.Runtime.MarkAndSweepCollector::RebuildBrickTable#5255) ==> 116 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ResetFreeBlockTracking (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ResetFreeBlockTracking#5241) ==> 2 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::StartCollection (Microsoft.Zelig.Runtime.MarkAndSweepCollector::StartCollection#5237) ==> 256 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::Sweep (Microsoft.Zelig.Runtime.MarkAndSweepCollector::Sweep#5240) ==> 364 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ThrowOutOfMemory (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ThrowOutOfMemory#5233) ==> 20 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::TrackFreeBlock (Microsoft.Zelig.Runtime.MarkAndSweepCollector::TrackFreeBlock#5242) ==> 2 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObject (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObject#5245) ==> 544 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectField (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectField#5250) ==> 596 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectFields (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectFields#5248) ==> 1184 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectInline (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectInline#5247) ==> 952 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitInternalPointer (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitInternalPointer#5244) ==> 36 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::WalkStackFrames (Microsoft.Zelig.Runtime.MarkAndSweepCollector::WalkStackFrames#5238) ==> 140 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::Allocate (Microsoft.Zelig.Runtime.MemoryFreeBlock::Allocate#5603) ==> 108 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::DirtyFreeMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::DirtyFreeMemory#5601) ==> 30 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::get_AvailableMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::get_AvailableMemory#5618) ==> 16 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::InitializeFromRawMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::InitializeFromRawMemory#5612) ==> 64 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::ToObjectHeader (Microsoft.Zelig.Runtime.MemoryFreeBlock::ToObjectHeader#5595) ==> 4 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::Unpack (Microsoft.Zelig.Runtime.MemoryFreeBlock::Unpack#5589) ==> 14 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::ZeroFreeMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::ZeroFreeMemory#5599) ==> 28 bytes
Microsoft.Zelig.Runtime.MemoryManager::AddLinearSection (Microsoft.Zelig.Runtime.MemoryManager::AddLinearSection#5957) ==> 58 bytes
Microsoft.Zelig.Runtime.MemoryManager::AllocateFromManagedHeap (Microsoft.Zelig.Runtime.MemoryManager::AllocateFromManagedHeap#5955) ==> 240 bytes
Microsoft.Zelig.Runtime.MemoryManager::DirtyFreeMemory (Microsoft.Zelig.Runtime.MemoryManager::DirtyFreeMemory#5948) ==> 20 bytes
Microsoft.Zelig.Runtime.MemoryManager::FreeFromManagedHeap (Microsoft.Zelig.Runtime.MemoryManager::FreeFromManagedHeap#5956) ==> 48 bytes
Microsoft.Zelig.Runtime.MemoryManager::get_AvailableMemory (Microsoft.Zelig.Runtime.MemoryManager::get_AvailableMemory#5961) ==> 36 bytes
Microsoft.Zelig.Runtime.MemoryManager::InitializationComplete (Microsoft.Zelig.Runtime.MemoryManager::InitializationComplete#5946) ==> 2 bytes
Microsoft.Zelig.Runtime.MemoryManager::InitializeMemoryManager (Microsoft.Zelig.Runtime.MemoryManager::InitializeMemoryManager#5945) ==> 10 bytes
Microsoft.Zelig.Runtime.MemoryManager::ZeroFreeMemory (Microsoft.Zelig.Runtime.MemoryManager::ZeroFreeMemory#5947) ==> 20 bytes
Microsoft.Zelig.Runtime.MemorySegment::Allocate (Microsoft.Zelig.Runtime.MemorySegment::Allocate#5636) ==> 60 bytes
Microsoft.Zelig.Runtime.MemorySegment::DirtyFreeMemory (Microsoft.Zelig.Runtime.MemorySegment::DirtyFreeMemory#5634) ==> 20 bytes
Microsoft.Zelig.Runtime.MemorySegment::get_AvailableMemory (Microsoft.Zelig.Runtime.MemorySegment::get_AvailableMemory#5666) ==> 26 bytes
Microsoft.Zelig.Runtime.MemorySegment::get_FirstBlock (Microsoft.Zelig.Runtime.MemorySegment::get_FirstBlock#5664) ==> 8 bytes
Microsoft.Zelig.Runtime.MemorySegment::Initialize (Microsoft.Zelig.Runtime.MemorySegment::Initialize#5630) ==> 28 bytes
Microsoft.Zelig.Runtime.MemorySegment::InsertFreeBlock (Microsoft.Zelig.Runtime.MemorySegment::InsertFreeBlock#5644) ==> 34 bytes
Microsoft.Zelig.Runtime.MemorySegment::LinkNewFreeBlock (Microsoft.Zelig.Runtime.MemorySegment::LinkNewFreeBlock#5638) ==> 64 bytes
Microsoft.Zelig.Runtime.MemorySegment::Release (Microsoft.Zelig.Runtime.MemorySegment::Release#5640) ==> 386 bytes
Microsoft.Zelig.Runtime.MemorySegment::RemoveFreeBlock (Microsoft.Zelig.Runtime.MemorySegment::RemoveFreeBlock#5642) ==> 42 bytes
Microsoft.Zelig.Runtime.MemorySegment::ZeroFreeMemory (Microsoft.Zelig.Runtime.MemorySegment::ZeroFreeMemory#5632) ==> 20 bytes
Microsoft.Zelig.Runtime.ObjectHeader::ComputeObjectSize (Microsoft.Zelig.Runtime.ObjectHeader::ComputeObjectSize#3704) ==> 30 bytes
Microsoft.Zelig.Runtime.ObjectHeader::get_ObjectSize (Microsoft.Zelig.Runtime.ObjectHeader::get_ObjectSize#3702) ==> 24 bytes
Microsoft.Zelig.Runtime.ObjectHeader::get_TotalSize (Microsoft.Zelig.Runtime.ObjectHeader::get_TotalSize#3703) ==> 24 bytes
Microsoft.Zelig.Runtime.ObjectHeader::InsertPlug (Microsoft.Zelig.Runtime.ObjectHeader::InsertPlug#3705) ==> 18 bytes
Microsoft.Zelig.Runtime.ObjectHeader::UpdateExtension (Microsoft.Zelig.Runtime.ObjectHeader::UpdateExtension#3707) ==> 84 bytes
Microsoft.Zelig.Runtime.Processor::AreFaultsDisabled (Microsoft.Zelig.Runtime.Processor::AreFaultsDisabled#5529) ==> 4 bytes
Microsoft.Zelig.Runtime.Processor::AreInterruptsEnabled (Microsoft.Zelig.Runtime.Processor::AreInterruptsEnabled#5527) ==> 20 bytes
Microsoft.Zelig.Runtime.SchedulerTime::.cctor (Microsoft.Zelig.Runtime.SchedulerTime::.cctor#5938) ==> 24 bytes
Microsoft.Zelig.Runtime.SchedulerTime::ConvertFromMillisecondsToUnits (Microsoft.Zelig.Runtime.SchedulerTime::ConvertFromMillisecondsToUnits#20269) ==> 36 bytes
Microsoft.Zelig.Runtime.SchedulerTime::FromUnits (Microsoft.Zelig.Runtime.SchedulerTime::FromUnits#5922) ==> 2 bytes
Microsoft.Zelig.Runtime.SchedulerTime::GetCurrentTime (Microsoft.Zelig.Runtime.SchedulerTime::GetCurrentTime#20277) ==> 20 bytes
Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit (Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit#5892) ==> 8 bytes
Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit (Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit#5896) ==> 36 bytes
Microsoft.Zelig.Runtime.SchedulerTime::op_Subtraction (Microsoft.Zelig.Runtime.SchedulerTime::op_Subtraction#5908) ==> 6 bytes
Microsoft.Zelig.Runtime.SchedulerTimeSpan::.cctor (Microsoft.Zelig.Runtime.SchedulerTimeSpan::.cctor#5864) ==> 32 bytes
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetCurrentExceptionMode (Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetCurrentExceptionMode#6392) ==> 66 bytes
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetMode (Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetMode#6394) ==> 12 bytes
Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt::.ctor (Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt::.ctor#6140) ==> 48 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfMarkPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfMarkPhase#6761) ==> 2 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfSweepPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfSweepPhase#6764) ==> 2 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::Mark (Microsoft.Zelig.Runtime.SyncBlock.Handler::Mark#6760) ==> 60 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfMarkPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfMarkPhase#6759) ==> 6 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfSweepPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfSweepPhase#6762) ==> 54 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::Sweep (Microsoft.Zelig.Runtime.SyncBlock.Handler::Sweep#6763) ==> 2 bytes
Microsoft.Zelig.Runtime.SyncBlock::AddToFreeList (Microsoft.Zelig.Runtime.SyncBlock::AddToFreeList#5577) ==> 68 bytes
Microsoft.Zelig.Runtime.SyncBlock::ExtractFromFreeList (Microsoft.Zelig.Runtime.SyncBlock::ExtractFromFreeList#5578) ==> 72 bytes
Microsoft.Zelig.Runtime.SyncBlock::get_Lock (Microsoft.Zelig.Runtime.SyncBlock::get_Lock#5579) ==> 26 bytes
Microsoft.Zelig.Runtime.SyncBlock::Prepare (Microsoft.Zelig.Runtime.SyncBlock::Prepare#5576) ==> 6 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::AssignSyncBlockSlow (Microsoft.Zelig.Runtime.SyncBlockTable::AssignSyncBlockSlow#5560) ==> 424 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::ExpandClusters (Microsoft.Zelig.Runtime.SyncBlockTable::ExpandClusters#5564) ==> 144 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::get_Lock (Microsoft.Zelig.Runtime.SyncBlockTable::get_Lock#5566) ==> 28 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode (Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode#5557) ==> 316 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode (Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode#5561) ==> 64 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetLock (Microsoft.Zelig.Runtime.SyncBlockTable::GetLock#5558) ==> 74 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetLock (Microsoft.Zelig.Runtime.SyncBlockTable::GetLock#5563) ==> 64 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::SetHashCode (Microsoft.Zelig.Runtime.SyncBlockTable::SetHashCode#5562) ==> 64 bytes
Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Acquire (Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Acquire#6059) ==> 248 bytes
Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Release (Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Release#6060) ==> 180 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::.ctor (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::.ctor#6064) ==> 68 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::Acquire (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::Acquire#6067) ==> 40 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::RegisterWait (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::RegisterWait#6069) ==> 8 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::UnregisterWait (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::UnregisterWait#6070) ==> 14 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Dispose (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Dispose#6836) ==> 68 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Get (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Get#6837) ==> 28 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestFulfilled (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestFulfilled#6840) ==> 14 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestProcessed (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestProcessed#6839) ==> 88 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_ShouldTryToAcquire (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_ShouldTryToAcquire#6838) ==> 20 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.cctor (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.cctor#6081) ==> 136 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.ctor (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.ctor#6082) ==> 56 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Connect (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Connect#6084) ==> 38 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Disconnect (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Disconnect#6087) ==> 48 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::GetInstance (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::GetInstance#6083) ==> 180 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Recycle (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Recycle#6086) ==> 68 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::set_RequestFulfilled (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::set_RequestFulfilled#6093) ==> 64 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Wait (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Wait#6085) ==> 20 bytes
Microsoft.Zelig.Runtime.Synchronization.YieldLock::Acquire (Microsoft.Zelig.Runtime.Synchronization.YieldLock::Acquire#6053) ==> 62 bytes
Microsoft.Zelig.Runtime.Synchronization.YieldLock::IsHeldByCurrentThread (Microsoft.Zelig.Runtime.Synchronization.YieldLock::IsHeldByCurrentThread#6055) ==> 48 bytes
Microsoft.Zelig.Runtime.Synchronization.YieldLock::Release (Microsoft.Zelig.Runtime.Synchronization.YieldLock::Release#6054) ==> 76 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::GetRegisterValue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::GetRegisterValue#7176) ==> 248 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_BaseStackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_BaseStackPointer#6983) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ExcReturn (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ExcReturn#6984) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ProgramCounter (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ProgramCounter#6986) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_StackPointer#6981) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate#6970) ==> 64 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate#6971) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::PopulateFromDelegate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::PopulateFromDelegate#6972) ==> 112 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::set_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::set_StackPointer#6982) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SetupForExceptionHandling (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SetupForExceptionHandling#6973) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SwitchTo (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SwitchTo#6969) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Unwind (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Unwind#6974) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreAllInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreAllInterruptsDisabled#3975) ==> 18 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreInterruptsDisabled#3974) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::Breakpoint (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::Breakpoint#3976) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::InitializeProcessor (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::InitializeProcessor#3959) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSupervisorCall (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSupervisorCall#3962) ==> 92 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSystemHandler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSystemHandler#3961) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::VerifyHandlerMode (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::VerifyHandlerMode#3979) ==> 20 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_BaseStackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_BaseStackPointer#6886) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ExcReturn (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ExcReturn#6887) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ProgramCounter (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ProgramCounter#6889) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_StackPointer#6884) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate#6873) ==> 64 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate#6874) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::PopulateFromDelegate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::PopulateFromDelegate#6875) ==> 112 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::set_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::set_StackPointer#6885) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SetupForExceptionHandling (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SetupForExceptionHandling#6876) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SwitchTo (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SwitchTo#6872) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Unwind (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Unwind#6877) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue#3955) ==> 44 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue#3956) ==> 2 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue#3953) ==> 44 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue#3954) ==> 2 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreAllInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreAllInterruptsDisabled#3862) ==> 24 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreFaultsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreFaultsDisabled#3861) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreInterruptsDisabled#3860) ==> 18 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::Breakpoint (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::Breakpoint#3863) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler#3899) ==> 196 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler_Zelig#3903) ==> 8 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_NotifySoftwareFrameSnapshot (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_NotifySoftwareFrameSnapshot#3949) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::DebuggerConnected (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::DebuggerConnected#3893) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::EnableSystemHandler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::EnableSystemHandler#3855) ==> 104 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::HardFault_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::HardFault_Handler_Zelig#3896) ==> 40 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::InitializeProcessor (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::InitializeProcessor#3844) ==> 84 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressPrecise (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressPrecise#3891) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressValid (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressValid#3890) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsMemFaultAddressValid (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsMemFaultAddressValid#3889) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler#3897) ==> 204 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler_Zelig#3901) ==> 8 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSupervisorCall (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSupervisorCall#3847) ==> 92 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSystemHandler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSystemHandler#3846) ==> 32 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UpdateFrame (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UpdateFrame#3950) ==> 120 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler#3900) ==> 168 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler_Zelig#3902) ==> 8 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::VerifyHandlerMode (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::VerifyHandlerMode#3871) ==> 20 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::WasHardFaultOnVectorTableRead (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::WasHardFaultOnVectorTableRead#3888) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::AnyInterrupt (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::AnyInterrupt#6945) ==> 2 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::ContextSwitch (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::ContextSwitch#6917) ==> 84 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_BaseStackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_BaseStackPointer#6923) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ExcReturn (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ExcReturn#6924) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ProgramCounter (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ProgramCounter#6928) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_StackPointer#6921) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::LongJump (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::LongJump#6919) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PendSV_Handler_Zelig_VFP (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PendSV_Handler_Zelig_VFP#6944) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate#6910) ==> 64 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate#6911) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PopulateFromDelegate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PopulateFromDelegate#6912) ==> 114 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::set_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::set_StackPointer#6922) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SetupForExceptionHandling (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SetupForExceptionHandling#6913) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SVC_Handler_Zelig_VFP_NoFPContext (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SVC_Handler_Zelig_VFP_NoFPContext#6943) ==> 50 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SwitchTo (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SwitchTo#6909) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Unwind (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Unwind#6914) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::DisableLazyStacking (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::DisableLazyStacking#6369) ==> 16 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::InitializeProcessor (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::InitializeProcessor#6364) ==> 12 bytes
Microsoft.Zelig.Runtime.ThreadManager::Activate (Microsoft.Zelig.Runtime.ThreadManager::Activate#3764) ==> 2 bytes
Microsoft.Zelig.Runtime.ThreadManager::AddThread (Microsoft.Zelig.Runtime.ThreadManager::AddThread#3767) ==> 104 bytes
Microsoft.Zelig.Runtime.ThreadManager::CleanupBootstrapThreadIfNeeded (Microsoft.Zelig.Runtime.ThreadManager::CleanupBootstrapThreadIfNeeded#3759) ==> 2 bytes
Microsoft.Zelig.Runtime.ThreadManager::ComputeNextTimeout (Microsoft.Zelig.Runtime.ThreadManager::ComputeNextTimeout#3787) ==> 104 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_CurrentThread (Microsoft.Zelig.Runtime.ThreadManager::get_CurrentThread#3796) ==> 4 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_DefaultStackSize (Microsoft.Zelig.Runtime.ThreadManager::get_DefaultStackSize#3756) ==> 6 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_ShouldContextSwitch (Microsoft.Zelig.Runtime.ThreadManager::get_ShouldContextSwitch#3799) ==> 14 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_StartOfForwardWalkThroughAllThreads (Microsoft.Zelig.Runtime.ThreadManager::get_StartOfForwardWalkThroughAllThreads#3800) ==> 28 bytes
Microsoft.Zelig.Runtime.ThreadManager::InitializeAfterStaticConstructors (Microsoft.Zelig.Runtime.ThreadManager::InitializeAfterStaticConstructors#3761) ==> 208 bytes
Microsoft.Zelig.Runtime.ThreadManager::InitializeBeforeStaticConstructors (Microsoft.Zelig.Runtime.ThreadManager::InitializeBeforeStaticConstructors#3760) ==> 100 bytes
Microsoft.Zelig.Runtime.ThreadManager::InsertInPriorityOrder (Microsoft.Zelig.Runtime.ThreadManager::InsertInPriorityOrder#3792) ==> 66 bytes
Microsoft.Zelig.Runtime.ThreadManager::MainThread (Microsoft.Zelig.Runtime.ThreadManager::MainThread#3794) ==> 22 bytes
Microsoft.Zelig.Runtime.ThreadManager::RegisterThread (Microsoft.Zelig.Runtime.ThreadManager::RegisterThread#3766) ==> 34 bytes
Microsoft.Zelig.Runtime.ThreadManager::RemoveThread (Microsoft.Zelig.Runtime.ThreadManager::RemoveThread#3768) ==> 84 bytes
Microsoft.Zelig.Runtime.ThreadManager::Reschedule (Microsoft.Zelig.Runtime.ThreadManager::Reschedule#3776) ==> 8 bytes
Microsoft.Zelig.Runtime.ThreadManager::RescheduleAndRequestContextSwitchIfNeeded (Microsoft.Zelig.Runtime.ThreadManager::RescheduleAndRequestContextSwitchIfNeeded#3775) ==> 34 bytes
Microsoft.Zelig.Runtime.ThreadManager::RetireThread (Microsoft.Zelig.Runtime.ThreadManager::RetireThread#3769) ==> 24 bytes
Microsoft.Zelig.Runtime.ThreadManager::SelectNextThreadToRun (Microsoft.Zelig.Runtime.ThreadManager::SelectNextThreadToRun#3777) ==> 72 bytes
Microsoft.Zelig.Runtime.ThreadManager::set_CurrentThread (Microsoft.Zelig.Runtime.ThreadManager::set_CurrentThread#3797) ==> 22 bytes
Microsoft.Zelig.Runtime.ThreadManager::SetNextQuantumTimerIfNeeded (Microsoft.Zelig.Runtime.ThreadManager::SetNextQuantumTimerIfNeeded#3774) ==> 66 bytes
Microsoft.Zelig.Runtime.ThreadManager::Sleep (Microsoft.Zelig.Runtime.ThreadManager::Sleep#3788) ==> 32 bytes
Microsoft.Zelig.Runtime.ThreadManager::StartThreads (Microsoft.Zelig.Runtime.ThreadManager::StartThreads#3765) ==> 40 bytes
Microsoft.Zelig.Runtime.ThreadManager::SwitchToWait (Microsoft.Zelig.Runtime.ThreadManager::SwitchToWait#3771) ==> 140 bytes
Microsoft.Zelig.Runtime.ThreadManager::TimeQuantumExpired (Microsoft.Zelig.Runtime.ThreadManager::TimeQuantumExpired#3773) ==> 18 bytes
Microsoft.Zelig.Runtime.ThreadManager::WaitExpired (Microsoft.Zelig.Runtime.ThreadManager::WaitExpired#3786) ==> 68 bytes
Microsoft.Zelig.Runtime.ThreadManager::Wakeup (Microsoft.Zelig.Runtime.ThreadManager::Wakeup#3772) ==> 88 bytes
Microsoft.Zelig.Runtime.ThreadManager::Yield (Microsoft.Zelig.Runtime.ThreadManager::Yield#3770) ==> 104 bytes
Microsoft.Zelig.Runtime.TypeSystem.AbstractReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.AbstractReferenceTypeRepresentation::ToString#16758) ==> 104 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::Equals#16762) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::EqualsThroughEquivalence#16761) ==> 72 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_ContainedType (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_ContainedType#16767) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsDelayedType#16769) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsOpenType#16768) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::GetHashCode#16763) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence#39140) ==> 106 bytes
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::EqualsThroughEquivalence#15896) ==> 48 bytes
Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap (Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap#15932) ==> 20 bytes
Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap (Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap#15933) ==> 62 bytes
Microsoft.Zelig.Runtime.TypeSystem.ConcreteReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ConcreteReferenceTypeRepresentation::ToString#16790) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::Equals#16046) ==> 116 bytes
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::GetHashCode#16047) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::Equals#16795) ==> 10 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::EqualsThroughEquivalence#16794) ==> 108 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsDelayedType#16804) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsOpenType#16803) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::GetHashCode#16796) ==> 34 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::PrettyToString#16810) ==> 228 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::ToString#16809) ==> 116 bytes
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::get_UnderlyingType (Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::get_UnderlyingType#16840) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::ToString#16844) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet.EquivalenceDelegation::Invoke (Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet.EquivalenceDelegation::Invoke#17334) ==> 128 bytes
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet::AreEquivalent (Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet::AreEquivalent#15987) ==> 96 bytes
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::Equals#16083) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::EqualsThroughEquivalence#16082) ==> 148 bytes
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::GetHashCode#16084) ==> 42 bytes
Microsoft.Zelig.Runtime.TypeSystem.InterfaceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.InterfaceTypeRepresentation::ToString#16850) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::PrettyToString#16856) ==> 36 bytes
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::ToString#16855) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext::get_IsOpenMethod (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext::get_IsOpenMethod#17412) ==> 80 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::Equals#16188) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::EqualsThroughEquivalence#16187) ==> 216 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParameters (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParameters#16220) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParametersDefinition (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParametersDefinition#16221) ==> 10 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_IsOpenMethod (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_IsOpenMethod#16224) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::GetHashCode#16189) ==> 46 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::PrettyToString#16244) ==> 764 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::ToShortString (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::ToShortString#16241) ==> 52 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension::Equals (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension::Equals#59816) ==> 52 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::Equals#16861) ==> 10 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::EqualsThroughEquivalence#16860) ==> 96 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::GetHashCode#16862) ==> 8 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::PrettyToString#16870) ==> 220 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::SameShape (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::SameShape#16866) ==> 76 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::ToString#16869) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::Equals#16877) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::EqualsThroughEquivalence#16876) ==> 108 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_ContainedType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_ContainedType#16884) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsDelayedType#16887) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsOpenType#16886) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_UnderlyingType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_UnderlyingType#16885) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::GetHashCode#16878) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::PrettyToString#16892) ==> 34 bytes
Microsoft.Zelig.Runtime.TypeSystem.ScalarTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ScalarTypeRepresentation::ToString#16912) ==> 104 bytes
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::PrettyToString#16918) ==> 56 bytes
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::SameShape (Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::SameShape#16916) ==> 32 bytes
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::ToString#16917) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsDelayedType#17625) ==> 70 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsOpenType#17624) ==> 80 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::Equals#16941) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::EqualsThroughEquivalence#16940) ==> 208 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_ContainedType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_ContainedType#17037) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_FullName (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_FullName#17035) ==> 72 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_GenericParameters (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_GenericParameters#17025) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsDelayedType#17041) ==> 20 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsOpenType#17040) ==> 18 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_UnderlyingType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_UnderlyingType#17038) ==> 2 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetAbbreviation (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetAbbreviation#17055) ==> 196 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetHashCode#16942) ==> 22 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::PrettyToString#17056) ==> 456 bytes
Microsoft.Zelig.Runtime.TypeSystem.ValueTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ValueTypeRepresentation::ToString#17072) ==> 104 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::CanBeAssignedFrom_Slow (Microsoft.Zelig.Runtime.TypeSystem.VTable::CanBeAssignedFrom_Slow#4394) ==> 276 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::GetInterface (Microsoft.Zelig.Runtime.TypeSystem.VTable::GetInterface#4390) ==> 68 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::ImplementsInterface (Microsoft.Zelig.Runtime.TypeSystem.VTable::ImplementsInterface#4396) ==> 48 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::IsSubclassOf (Microsoft.Zelig.Runtime.TypeSystem.VTable::IsSubclassOf#4395) ==> 44 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::SameType (Microsoft.Zelig.Runtime.TypeSystem.VTable::SameType#4387) ==> 40 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::ToString (Microsoft.Zelig.Runtime.TypeSystem.VTable::ToString#4400) ==> 52 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow (Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow#43488) ==> 56 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow (Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow#43490) ==> 40 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterface (Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterface#6017) ==> 60 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterfaceNoThrow (Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterfaceNoThrow#6018) ==> 56 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedType (Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedType#6015) ==> 60 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedTypeNoThrow (Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedTypeNoThrow#6016) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToType (Microsoft.Zelig.Runtime.TypeSystemManager::CastToType#6013) ==> 60 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToTypeNoThrow (Microsoft.Zelig.Runtime.TypeSystemManager::CastToTypeNoThrow#6014) ==> 50 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::InitializeTypeSystemManager (Microsoft.Zelig.Runtime.TypeSystemManager::InitializeTypeSystemManager#5992) ==> 8 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::InvokeStaticConstructors (Microsoft.Zelig.Runtime.TypeSystemManager::InvokeStaticConstructors#6012) ==> 72 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::Rethrow (Microsoft.Zelig.Runtime.TypeSystemManager::Rethrow#6020) ==> 44 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::Throw (Microsoft.Zelig.Runtime.TypeSystemManager::Throw#6019) ==> 60 bytes
Microsoft.Zelig.Runtime.Unwind::GetEncodingSize (Microsoft.Zelig.Runtime.Unwind::GetEncodingSize#6029) ==> 56 bytes
Microsoft.Zelig.Runtime.Unwind::GetEntryVTable (Microsoft.Zelig.Runtime.Unwind::GetEntryVTable#6024) ==> 64 bytes
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_Personality (Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_Personality#6023) ==> 564 bytes
Microsoft.Zelig.Runtime.Unwind::ReadEncodedPointer (Microsoft.Zelig.Runtime.Unwind::ReadEncodedPointer#6028) ==> 150 bytes
Microsoft.Zelig.Runtime.Unwind::ReadSLEB128 (Microsoft.Zelig.Runtime.Unwind::ReadSLEB128#6027) ==> 110 bytes
Microsoft.Zelig.Runtime.Unwind::ReadULEB128 (Microsoft.Zelig.Runtime.Unwind::ReadULEB128#6025) ==> 56 bytes
System.Activator::CreateInstance (System.Activator::CreateInstance#44998) ==> 28 bytes
System.Activator::CreateInstance (System.Activator::CreateInstance#45001) ==> 36 bytes
System.ArgumentException::get_Message (System.ArgumentException::get_Message#7407) ==> 28 bytes
System.Array::Copy (System.Array::Copy#1928) ==> 112 bytes
System.Array::Copy (System.Array::Copy#4416) ==> 248 bytes
System.Array::GetLowerBound (System.Array::GetLowerBound#4414) ==> 88 bytes
System.Array::GetPointerToElement (System.Array::GetPointerToElement#4420) ==> 28 bytes
System.Buffer::InternalBackwardMemoryCopy (System.Buffer::InternalBackwardMemoryCopy#4451) ==> 158 bytes
System.Buffer::InternalBackwardMemoryCopy (System.Buffer::InternalBackwardMemoryCopy#4453) ==> 132 bytes
System.Buffer::InternalBackwardMemoryCopy (System.Buffer::InternalBackwardMemoryCopy#4456) ==> 104 bytes
System.Buffer::InternalMemoryCopy (System.Buffer::InternalMemoryCopy#4443) ==> 16 bytes
System.Buffer::InternalMemoryMove (System.Buffer::InternalMemoryMove#4458) ==> 50 bytes
System.Byte::Equals (System.Byte::Equals#2174) ==> 72 bytes
System.Byte::GetHashCode (System.Byte::GetHashCode#2178) ==> 4 bytes
System.Byte::ToString (System.Byte::ToString#2197) ==> 18 bytes
System.Byte::ToString (System.Byte::ToString#2203) ==> 22 bytes
System.Char::Equals (System.Char::Equals#2246) ==> 72 bytes
System.Char::GetHashCode (System.Char::GetHashCode#2244) ==> 8 bytes
System.Char::ToString (System.Char::ToString#2254) ==> 10 bytes
System.Char::ToString (System.Char::ToString#2258) ==> 22 bytes
System.Collections.BitArray::.ctor (System.Collections.BitArray::.ctor#11691) ==> 80 bytes
System.Collections.BitArray::Get (System.Collections.BitArray::Get#11698) ==> 100 bytes
System.Collections.BitArray::Set (System.Collections.BitArray::Set#11699) ==> 140 bytes
System.DateTime::.cctor (System.DateTime::.cctor#4528) ==> 188 bytes
System.DateTime::.ctor (System.DateTime::.ctor#7912) ==> 100 bytes
System.DateTime::DateToTicks (System.DateTime::DateToTicks#7956) ==> 128 bytes
System.DateTime::IsLeapYear (System.DateTime::IsLeapYear#8012) ==> 2 bytes
System.Delegate::.ctor (System.Delegate::.ctor#5674) ==> 6 bytes
System.Delegate::Equals (System.Delegate::Equals#5675) ==> 88 bytes
System.Delegate::GetHashCode (System.Delegate::GetHashCode#5676) ==> 4 bytes
System.Delegate::GetTarget (System.Delegate::GetTarget#5681) ==> 4 bytes
System.Delegate::op_Equality (System.Delegate::op_Equality#5677) ==> 32 bytes
System.Diagnostics.Stopwatch::.cctor (System.Diagnostics.Stopwatch::.cctor#15582) ==> 52 bytes
System.Diagnostics.Stopwatch::QueryPerformanceFrequency (System.Diagnostics.Stopwatch::QueryPerformanceFrequency#4539) ==> 20 bytes
System.Enum::ToString (System.Enum::ToString#2449) ==> 22 bytes
System.Exception::get_Message (System.Exception::get_Message#8388) ==> 4 bytes
System.Exception::GetMessageFromNativeResources (System.Exception::GetMessageFromNativeResources#8393) ==> 36 bytes
System.Exception::ToString (System.Exception::ToString#8391) ==> 22 bytes
System.GC::KeepAlive (System.GC::KeepAlive#4542) ==> 2 bytes
System.Globalization.Calendar::.ctor (System.Globalization.Calendar::.ctor#10919) ==> 14 bytes
System.Globalization.CultureInfo::.cctor (System.Globalization.CultureInfo::.cctor#11018) ==> 52 bytes
System.Globalization.CultureInfo::.ctor (System.Globalization.CultureInfo::.ctor#11022) ==> 12 bytes
System.Globalization.CultureInfo::get_CurrentCulture (System.Globalization.CultureInfo::get_CurrentCulture#11023) ==> 52 bytes
System.Globalization.CultureInfo::get_DateTimeFormat (System.Globalization.CultureInfo::get_DateTimeFormat#11032) ==> 44 bytes
System.Globalization.CultureInfo::get_NumberFormat (System.Globalization.CultureInfo::get_NumberFormat#11030) ==> 56 bytes
System.Globalization.CultureInfo::GetFormat (System.Globalization.CultureInfo::GetFormat#11029) ==> 44 bytes
System.Globalization.DateTimeFormatInfo::.ctor (System.Globalization.DateTimeFormatInfo::.ctor#11051) ==> 26 bytes
System.Globalization.GregorianCalendar::.cctor (System.Globalization.GregorianCalendar::.cctor#11131) ==> 60 bytes
System.Globalization.GregorianCalendar::.ctor (System.Globalization.GregorianCalendar::.ctor#11101) ==> 14 bytes
System.Globalization.GregorianCalendar::GetDatePart (System.Globalization.GregorianCalendar::GetDatePart#11105) ==> 284 bytes
System.Globalization.GregorianCalendar::GetDayOfMonth (System.Globalization.GregorianCalendar::GetDayOfMonth#11110) ==> 20 bytes
System.Globalization.GregorianCalendar::GetDayOfWeek (System.Globalization.GregorianCalendar::GetDayOfWeek#11111) ==> 56 bytes
System.Globalization.GregorianCalendar::GetDefaultInstance (System.Globalization.GregorianCalendar::GetDefaultInstance#11099) ==> 64 bytes
System.Globalization.GregorianCalendar::GetMonth (System.Globalization.GregorianCalendar::GetMonth#11119) ==> 20 bytes
System.Globalization.GregorianCalendar::GetYear (System.Globalization.GregorianCalendar::GetYear#11121) ==> 20 bytes
System.Globalization.NumberFormatInfo::.ctor (System.Globalization.NumberFormatInfo::.ctor#11168) ==> 384 bytes
System.Globalization.NumberFormatInfo::get_CurrentInfo (System.Globalization.NumberFormatInfo::get_CurrentInfo#11174) ==> 92 bytes
System.Globalization.NumberFormatInfo::GetFormat (System.Globalization.NumberFormatInfo::GetFormat#11181) ==> 36 bytes
System.Int16::Equals (System.Int16::Equals#2484) ==> 76 bytes
System.Int16::GetHashCode (System.Int16::GetHashCode#2488) ==> 8 bytes
System.Int16::ToString (System.Int16::ToString#2490) ==> 20 bytes
System.Int16::ToString (System.Int16::ToString#2496) ==> 22 bytes
System.Int16::ToString (System.Int16::ToString#2498) ==> 82 bytes
System.Int32::Equals (System.Int32::Equals#2558) ==> 72 bytes
System.Int32::GetHashCode (System.Int32::GetHashCode#2562) ==> 4 bytes
System.Int32::ToString (System.Int32::ToString#2564) ==> 18 bytes
System.Int32::ToString (System.Int32::ToString#2570) ==> 18 bytes
System.Int32::ToString (System.Int32::ToString#2572) ==> 22 bytes
System.MulticastDelegate::Equals (System.MulticastDelegate::Equals#5692) ==> 88 bytes
System.MulticastDelegate::GetHashCode (System.MulticastDelegate::GetHashCode#5693) ==> 72 bytes
System.MulticastDelegate::GetTarget (System.MulticastDelegate::GetTarget#5697) ==> 36 bytes
System.Number.ToStringFormatState::Advance (System.Number.ToStringFormatState::Advance#12355) ==> 8 bytes
System.Number.ToStringFormatState::DecodeFormat (System.Number.ToStringFormatState::DecodeFormat#12349) ==> 370 bytes
System.Number.ToStringFormatState::Equals (System.Number.ToStringFormatState::Equals#59789) ==> 156 bytes
System.Number.ToStringFormatState::Get (System.Number.ToStringFormatState::Get#12351) ==> 34 bytes
System.Number.ToStringFormatState::MoveToEnd (System.Number.ToStringFormatState::MoveToEnd#12357) ==> 18 bytes
System.Number.ToStringFormatState::PeekAt (System.Number.ToStringFormatState::PeekAt#12353) ==> 26 bytes
System.Number.ToStringFormatState::Reset (System.Number.ToStringFormatState::Reset#12347) ==> 30 bytes
System.Number::.cctor (System.Number::.cctor#8641) ==> 224 bytes
System.Number::.ctor (System.Number::.ctor#8590) ==> 140 bytes
System.Number::.ctor (System.Number::.ctor#8591) ==> 128 bytes
System.Number::FindSection (System.Number::FindSection#8617) ==> 156 bytes
System.Number::FormatExponent (System.Number::FormatExponent#8631) ==> 144 bytes
System.Number::FormatFixed (System.Number::FormatFixed#8635) ==> 640 bytes
System.Number::FormatGeneral (System.Number::FormatGeneral#8632) ==> 276 bytes
System.Number::FormatInt32 (System.Number::FormatInt32#8603) ==> 56 bytes
System.Number::FormatInt32 (System.Number::FormatInt32#8604) ==> 180 bytes
System.Number::FormatNumber (System.Number::FormatNumber#8636) ==> 172 bytes
System.Number::FormatPercent (System.Number::FormatPercent#8637) ==> 188 bytes
System.Number::FormatScientific (System.Number::FormatScientific#8633) ==> 174 bytes
System.Number::FormatUInt32 (System.Number::FormatUInt32#8605) ==> 56 bytes
System.Number::FormatUInt32 (System.Number::FormatUInt32#8606) ==> 164 bytes
System.Number::Get (System.Number::Get#8596) ==> 26 bytes
System.Number::Int32ToDecChars (System.Number::Int32ToDecChars#8628) ==> 80 bytes
System.Number::Int32ToDecString (System.Number::Int32ToDecString#8618) ==> 192 bytes
System.Number::Int32ToHexChars (System.Number::Int32ToHexChars#8620) ==> 80 bytes
System.Number::Int32ToHexString (System.Number::Int32ToHexString#8619) ==> 84 bytes
System.Number::ParseFormatSpecifier (System.Number::ParseFormatSpecifier#8615) ==> 156 bytes
System.Number::RoundNumber (System.Number::RoundNumber#8630) ==> 206 bytes
System.Number::ToString (System.Number::ToString#8614) ==> 704 bytes
System.Number::ToStringFormat (System.Number::ToStringFormat#8616) ==> 1384 bytes
System.Number::UInt32ToDecString (System.Number::UInt32ToDecString#8621) ==> 84 bytes
System.Number::wcslen (System.Number::wcslen#8634) ==> 42 bytes
System.Object::Equals (System.Object::Equals#2772) ==> 48 bytes
System.Object::Equals (System.Object::Equals#4573) ==> 12 bytes
System.Object::Finalize (System.Object::Finalize#2776) ==> 2 bytes
System.Object::GetHashCode (System.Object::GetHashCode#4574) ==> 8 bytes
System.Object::GetType (System.Object::GetType#4571) ==> 20 bytes
System.Object::ToString (System.Object::ToString#2770) ==> 18 bytes
System.ObjectDisposedException::.ctor (System.ObjectDisposedException::.ctor#8645) ==> 16 bytes
System.ObjectDisposedException::get_Message (System.ObjectDisposedException::get_Message#8647) ==> 44 bytes
System.ObjectDisposedException::get_ObjectName (System.ObjectDisposedException::get_ObjectName#8648) ==> 20 bytes
System.Reflection.MemberInfo::Equals (System.Reflection.MemberInfo::Equals#10235) ==> 72 bytes
System.Reflection.MemberInfo::get_MetadataToken (System.Reflection.MemberInfo::get_MetadataToken#10243) ==> 44 bytes
System.Reflection.MemberInfo::get_MetadataTokenInternal (System.Reflection.MemberInfo::get_MetadataTokenInternal#10244) ==> 8 bytes
System.Reflection.MemberInfo::GetHashCode (System.Reflection.MemberInfo::GetHashCode#10236) ==> 8 bytes
System.RuntimeType::get_FullName (System.RuntimeType::get_FullName#3664) ==> 24 bytes
System.RuntimeType::get_Name (System.RuntimeType::get_Name#3663) ==> 24 bytes
System.RuntimeType::get_TypeHandle (System.RuntimeType::get_TypeHandle#2834) ==> 4 bytes
System.RuntimeType::get_UnderlyingSystemType (System.RuntimeType::get_UnderlyingSystemType#2837) ==> 2 bytes
System.RuntimeType::ToString (System.RuntimeType::ToString#2847) ==> 8 bytes
System.String::.cctor (System.String::.cctor#3178) ==> 48 bytes
System.String::.ctor (System.String::.ctor#4641) ==> 78 bytes
System.String::.ctor (System.String::.ctor#4643) ==> 30 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3160) ==> 40 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3161) ==> 58 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3162) ==> 58 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3166) ==> 82 bytes
System.String::ClearPostNullChar (System.String::ClearPostNullChar#3171) ==> 32 bytes
System.String::Concat (System.String::Concat#3136) ==> 144 bytes
System.String::Equals (System.String::Equals#3036) ==> 44 bytes
System.String::Equals (System.String::Equals#3039) ==> 36 bytes
System.String::EqualsHelper (System.String::EqualsHelper#3034) ==> 68 bytes
System.String::FastAllocateString (System.String::FastAllocateString#4644) ==> 44 bytes
System.String::FillStringChecked (System.String::FillStringChecked#3075) ==> 88 bytes
System.String::Format (System.String::Format#3128) ==> 120 bytes
System.String::get_Chars (System.String::get_Chars#4652) ==> 68 bytes
System.String::GetHashCode (System.String::GetHashCode#3048) ==> 84 bytes
System.String::GetStringForStringBuilder (System.String::GetStringForStringBuilder#3168) ==> 18 bytes
System.String::GetStringForStringBuilder (System.String::GetStringForStringBuilder#3169) ==> 58 bytes
System.String::InternalCopy (System.String::InternalCopy#3130) ==> 40 bytes
System.String::ToCharArray (System.String::ToCharArray#3046) ==> 156 bytes
System.String::ToString (System.String::ToString#3114) ==> 2 bytes
System.Text.StringBuilder::.ctor (System.Text.StringBuilder::.ctor#9889) ==> 24 bytes
System.Text.StringBuilder::.ctor (System.Text.StringBuilder::.ctor#9891) ==> 18 bytes
System.Text.StringBuilder::.ctor (System.Text.StringBuilder::.ctor#9892) ==> 228 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9906) ==> 208 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9907) ==> 248 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9908) ==> 112 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9922) ==> 88 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9924) ==> 32 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9930) ==> 32 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9932) ==> 40 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9933) ==> 110 bytes
System.Text.StringBuilder::AppendFormat (System.Text.StringBuilder::AppendFormat#9951) ==> 56 bytes
System.Text.StringBuilder::AppendFormat (System.Text.StringBuilder::AppendFormat#9956) ==> 1128 bytes
System.Text.StringBuilder::FormatError (System.Text.StringBuilder::FormatError#9955) ==> 44 bytes
System.Text.StringBuilder::GetNewString (System.Text.StringBuilder::GetNewString#9911) ==> 164 bytes
System.Text.StringBuilder::GetThreadSafeString (System.Text.StringBuilder::GetThreadSafeString#9894) ==> 60 bytes
System.Text.StringBuilder::NeedsAllocation (System.Text.StringBuilder::NeedsAllocation#9910) ==> 20 bytes
System.Text.StringBuilder::ReplaceString (System.Text.StringBuilder::ReplaceString#9912) ==> 6 bytes
System.Text.StringBuilder::ToString (System.Text.StringBuilder::ToString#9900) ==> 80 bytes
System.Threading.EventWaitHandle.EventWaitableObject::.ctor (System.Threading.EventWaitHandle.EventWaitableObject::.ctor#6477) ==> 14 bytes
System.Threading.EventWaitHandle.EventWaitableObject::Acquire (System.Threading.EventWaitHandle.EventWaitableObject::Acquire#6478) ==> 308 bytes
System.Threading.EventWaitHandle.EventWaitableObject::Release (System.Threading.EventWaitHandle.EventWaitableObject::Release#6479) ==> 116 bytes
System.Threading.EventWaitHandle::.ctor (System.Threading.EventWaitHandle::.ctor#4702) ==> 44 bytes
System.Threading.EventWaitHandle::Set (System.Threading.EventWaitHandle::Set#4704) ==> 32 bytes
System.Threading.Monitor::Enter (System.Threading.Monitor::Enter#4684) ==> 18 bytes
System.Threading.Monitor::Enter (System.Threading.Monitor::Enter#9098) ==> 108 bytes
System.Threading.Monitor::Exit (System.Threading.Monitor::Exit#4685) ==> 18 bytes
System.Threading.Thread::.ctor (System.Threading.Thread::.ctor#4763) ==> 64 bytes
System.Threading.Thread::.ctor (System.Threading.Thread::.ctor#4764) ==> 276 bytes
System.Threading.Thread::AcquiredWaitableObject (System.Threading.Thread::AcquiredWaitableObject#4786) ==> 60 bytes
System.Threading.Thread::Detach (System.Threading.Thread::Detach#4789) ==> 112 bytes
System.Threading.Thread::Entrypoint (System.Threading.Thread::Entrypoint#4776) ==> 60 bytes
System.Threading.Thread::get_IsAlive (System.Threading.Thread::get_IsAlive#4803) ==> 22 bytes
System.Threading.Thread::GetCurrentException (System.Threading.Thread::GetCurrentException#4793) ==> 40 bytes
System.Threading.Thread::GetFirstTimeout (System.Threading.Thread::GetFirstTimeout#4783) ==> 48 bytes
System.Threading.Thread::IsAtSafePoint (System.Threading.Thread::IsAtSafePoint#4790) ==> 80 bytes
System.Threading.Thread::ProcessWaitExpiration (System.Threading.Thread::ProcessWaitExpiration#4784) ==> 100 bytes
System.Threading.Thread::RegisterWait (System.Threading.Thread::RegisterWait#4780) ==> 184 bytes
System.Threading.Thread::ReleasedWaitableObject (System.Threading.Thread::ReleasedWaitableObject#4787) ==> 52 bytes
System.Threading.Thread::SetupForExceptionHandling (System.Threading.Thread::SetupForExceptionHandling#4775) ==> 18 bytes
System.Threading.Thread::Sleep (System.Threading.Thread::Sleep#4771) ==> 14 bytes
System.Threading.Thread::Start (System.Threading.Thread::Start#4767) ==> 84 bytes
System.Threading.Thread::Stop (System.Threading.Thread::Stop#4788) ==> 40 bytes
System.Threading.Thread::ThrowIndexOutOfRangeException (System.Threading.Thread::ThrowIndexOutOfRangeException#4795) ==> 44 bytes
System.Threading.Thread::ThrowNullException (System.Threading.Thread::ThrowNullException#4794) ==> 44 bytes
System.Threading.Thread::ThrowOverflowException (System.Threading.Thread::ThrowOverflowException#4796) ==> 44 bytes
System.Threading.Thread::UnregisterWait (System.Threading.Thread::UnregisterWait#4782) ==> 88 bytes
System.Threading.Thread::Wakeup (System.Threading.Thread::Wakeup#4785) ==> 20 bytes
System.Threading.Thread::Yield (System.Threading.Thread::Yield#4779) ==> 20 bytes
System.Threading.ThreadStart::Invoke (System.Threading.ThreadStart::Invoke#9158) ==> 80 bytes
System.Threading.WaitHandle::WaitOne (System.Threading.WaitHandle::WaitOne#4692) ==> 22 bytes
System.Threading.WaitHandle::WaitOne (System.Threading.WaitHandle::WaitOne#4699) ==> 26 bytes
System.Threading.WaitHandle::WaitOne (System.Threading.WaitHandle::WaitOne#9182) ==> 28 bytes
System.Type::Equals (System.Type::Equals#8910) ==> 60 bytes
System.Type::Equals (System.Type::Equals#8911) ==> 34 bytes
System.Type::GetHashCode (System.Type::GetHashCode#8912) ==> 32 bytes
System.Type::op_Equality (System.Type::op_Equality#8913) ==> 28 bytes
System.Type::op_Inequality (System.Type::op_Inequality#8914) ==> 20 bytes
System.UInt32::Equals (System.UInt32::Equals#3282) ==> 72 bytes
System.UInt32::GetHashCode (System.UInt32::GetHashCode#3286) ==> 4 bytes
System.UInt32::ToString (System.UInt32::ToString#3288) ==> 18 bytes
System.UInt32::ToString (System.UInt32::ToString#3290) ==> 18 bytes
System.UInt32::ToString (System.UInt32::ToString#3294) ==> 22 bytes
System.UIntPtr::.ctor (System.UIntPtr::.ctor#3415) ==> 16 bytes
System.UIntPtr::Equals (System.UIntPtr::Equals#3419) ==> 72 bytes
System.UIntPtr::GetHashCode (System.UIntPtr::GetHashCode#3421) ==> 8 bytes
System.UIntPtr::op_Explicit (System.UIntPtr::op_Explicit#3429) ==> 24 bytes
Windows.Devices.Gpio.DefaultPinProvider::.ctor (Windows.Devices.Gpio.DefaultPinProvider::.ctor#19959) ==> 60 bytes
Windows.Devices.Gpio.DefaultPinProvider::SetPinDriveMode (Windows.Devices.Gpio.DefaultPinProvider::SetPinDriveMode#19971) ==> 160 bytes
Windows.Devices.Gpio.DefaultPinProvider::Write (Windows.Devices.Gpio.DefaultPinProvider::Write#19972) ==> 22 bytes
Windows.Devices.Gpio.GpioController::.cctor (Windows.Devices.Gpio.GpioController::.cctor#19982) ==> 40 bytes
Windows.Devices.Gpio.GpioController::OpenPin (Windows.Devices.Gpio.GpioController::OpenPin#19978) ==> 72 bytes
Windows.Devices.Gpio.GpioController::TryOpenPin (Windows.Devices.Gpio.GpioController::TryOpenPin#19979) ==> 120 bytes
Windows.Devices.Gpio.GpioPin::.ctor (Windows.Devices.Gpio.GpioPin::.ctor#20002) ==> 10 bytes
Windows.Devices.Gpio.GpioPin::SetDriveMode (Windows.Devices.Gpio.GpioPin::SetDriveMode#20015) ==> 84 bytes
Windows.Devices.Gpio.GpioPin::ThrowIfDisposed (Windows.Devices.Gpio.GpioPin::ThrowIfDisposed#20019) ==> 72 bytes
Windows.Devices.Gpio.GpioPin::Write (Windows.Devices.Gpio.GpioPin::Write#20012) ==> 52 bytes


============================================================================================
Methods sizes (size order)

Methods count: 732

System.Number::ToStringFormat (System.Number::ToStringFormat#8616) ==> 1384 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ProcessMarkStack (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ProcessMarkStack#5254) ==> 1332 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectFields (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectFields#5248) ==> 1184 bytes
System.Text.StringBuilder::AppendFormat (System.Text.StringBuilder::AppendFormat#9956) ==> 1128 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectInline (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectInline#5247) ==> 952 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::PrettyToString#16244) ==> 764 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::PushObjectReference (Microsoft.Zelig.Runtime.MarkAndSweepCollector::PushObjectReference#5252) ==> 704 bytes
System.Number::ToString (System.Number::ToString#8614) ==> 704 bytes
System.Number::FormatFixed (System.Number::FormatFixed#8635) ==> 640 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectField (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectField#5250) ==> 596 bytes
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_Personality (Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_Personality#6023) ==> 564 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObject (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObject#5245) ==> 544 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::PrettyToString#17056) ==> 456 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::AssignSyncBlockSlow (Microsoft.Zelig.Runtime.SyncBlockTable::AssignSyncBlockSlow#5560) ==> 424 bytes
Microsoft.Zelig.Runtime.MemorySegment::Release (Microsoft.Zelig.Runtime.MemorySegment::Release#5640) ==> 386 bytes
System.Globalization.NumberFormatInfo::.ctor (System.Globalization.NumberFormatInfo::.ctor#11168) ==> 384 bytes
System.Number.ToStringFormatState::DecodeFormat (System.Number.ToStringFormatState::DecodeFormat#12349) ==> 370 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::Sweep (Microsoft.Zelig.Runtime.MarkAndSweepCollector::Sweep#5240) ==> 364 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode (Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode#5557) ==> 316 bytes
System.Threading.EventWaitHandle.EventWaitableObject::Acquire (System.Threading.EventWaitHandle.EventWaitableObject::Acquire#6478) ==> 308 bytes
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::ThrowOnError (Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::ThrowOnError#20721) ==> 284 bytes
System.Globalization.GregorianCalendar::GetDatePart (System.Globalization.GregorianCalendar::GetDatePart#11105) ==> 284 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::CanBeAssignedFrom_Slow (Microsoft.Zelig.Runtime.TypeSystem.VTable::CanBeAssignedFrom_Slow#4394) ==> 276 bytes
System.Number::FormatGeneral (System.Number::FormatGeneral#8632) ==> 276 bytes
System.Threading.Thread::.ctor (System.Threading.Thread::.ctor#4764) ==> 276 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::StartCollection (Microsoft.Zelig.Runtime.MarkAndSweepCollector::StartCollection#5237) ==> 256 bytes
Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Acquire (Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Acquire#6059) ==> 248 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::GetRegisterValue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::GetRegisterValue#7176) ==> 248 bytes
System.Array::Copy (System.Array::Copy#4416) ==> 248 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9907) ==> 248 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::Collect (Microsoft.Zelig.Runtime.MarkAndSweepCollector::Collect#5230) ==> 244 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::InitializeGarbageCollectionManager (Microsoft.Zelig.Runtime.MarkAndSweepCollector::InitializeGarbageCollectionManager#5227) ==> 244 bytes
Microsoft.Zelig.Runtime.MemoryManager::AllocateFromManagedHeap (Microsoft.Zelig.Runtime.MemoryManager::AllocateFromManagedHeap#5955) ==> 240 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::PrettyToString#16810) ==> 228 bytes
System.Text.StringBuilder::.ctor (System.Text.StringBuilder::.ctor#9892) ==> 228 bytes
Microsoft.Zelig.Runtime.HardwareProvider::TryReservePins (Microsoft.Zelig.Runtime.HardwareProvider::TryReservePins#5265) ==> 224 bytes
System.Number::.cctor (System.Number::.cctor#8641) ==> 224 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::PrettyToString#16870) ==> 220 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::EqualsThroughEquivalence#16187) ==> 216 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#39260) ==> 208 bytes
Microsoft.Zelig.Runtime.ThreadManager::InitializeAfterStaticConstructors (Microsoft.Zelig.Runtime.ThreadManager::InitializeAfterStaticConstructors#3761) ==> 208 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::EqualsThroughEquivalence#16940) ==> 208 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9906) ==> 208 bytes
System.Number::RoundNumber (System.Number::RoundNumber#8630) ==> 206 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler#3897) ==> 204 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateArray (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateArray#6041) ==> 200 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateString (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateString#6044) ==> 200 bytes
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::FindEntry (Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::FindEntry#23431) ==> 196 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler#3899) ==> 196 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetAbbreviation (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetAbbreviation#17055) ==> 196 bytes
System.Number::Int32ToDecString (System.Number::Int32ToDecString#8618) ==> 192 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObject (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObject#6038) ==> 188 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObjectWithExtensions (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObjectWithExtensions#6040) ==> 188 bytes
System.DateTime::.cctor (System.DateTime::.cctor#4528) ==> 188 bytes
System.Number::FormatPercent (System.Number::FormatPercent#8637) ==> 188 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Worker (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Worker#7026) ==> 184 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::Release (Microsoft.Zelig.Runtime.LinearMemoryManager::Release#5703) ==> 184 bytes
System.Threading.Thread::RegisterWait (System.Threading.Thread::RegisterWait#4780) ==> 184 bytes
Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Release (Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Release#6060) ==> 180 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::GetInstance (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::GetInstance#6083) ==> 180 bytes
System.Number::FormatInt32 (System.Number::FormatInt32#8604) ==> 180 bytes
System.Number::FormatScientific (System.Number::FormatScientific#8633) ==> 174 bytes
System.Number::FormatNumber (System.Number::FormatNumber#8636) ==> 172 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler#3900) ==> 168 bytes
System.Number::FormatUInt32 (System.Number::FormatUInt32#8606) ==> 164 bytes
System.Text.StringBuilder::GetNewString (System.Text.StringBuilder::GetNewString#9911) ==> 164 bytes
Windows.Devices.Gpio.DefaultPinProvider::SetPinDriveMode (Windows.Devices.Gpio.DefaultPinProvider::SetPinDriveMode#19971) ==> 160 bytes
System.Buffer::InternalBackwardMemoryCopy (System.Buffer::InternalBackwardMemoryCopy#4451) ==> 158 bytes
System.Number.ToStringFormatState::Equals (System.Number.ToStringFormatState::Equals#59789) ==> 156 bytes
System.Number::FindSection (System.Number::FindSection#8617) ==> 156 bytes
System.Number::ParseFormatSpecifier (System.Number::ParseFormatSpecifier#8615) ==> 156 bytes
System.String::ToCharArray (System.String::ToCharArray#3046) ==> 156 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Initialize (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Initialize#20649) ==> 152 bytes
Microsoft.Zelig.Runtime.Unwind::ReadEncodedPointer (Microsoft.Zelig.Runtime.Unwind::ReadEncodedPointer#6028) ==> 150 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::ProcessTimeout (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::ProcessTimeout#20332) ==> 148 bytes
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::EqualsThroughEquivalence#16082) ==> 148 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::ExpandClusters (Microsoft.Zelig.Runtime.SyncBlockTable::ExpandClusters#5564) ==> 144 bytes
System.Number::FormatExponent (System.Number::FormatExponent#8631) ==> 144 bytes
System.String::Concat (System.String::Concat#3136) ==> 144 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::WalkStackFrames (Microsoft.Zelig.Runtime.MarkAndSweepCollector::WalkStackFrames#5238) ==> 140 bytes
Microsoft.Zelig.Runtime.ThreadManager::SwitchToWait (Microsoft.Zelig.Runtime.ThreadManager::SwitchToWait#3771) ==> 140 bytes
System.Collections.BitArray::Set (System.Collections.BitArray::Set#11699) ==> 140 bytes
System.Number::.ctor (System.Number::.ctor#8590) ==> 140 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::InitializeAfterStaticConstructors (Microsoft.Zelig.Runtime.ARMv7ThreadManager::InitializeAfterStaticConstructors#5984) ==> 136 bytes
Microsoft.Zelig.Runtime.BrickTable::FindLowerBoundForObjectPointer (Microsoft.Zelig.Runtime.BrickTable::FindLowerBoundForObjectPointer#5545) ==> 136 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.cctor (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.cctor#6081) ==> 136 bytes
System.Buffer::InternalBackwardMemoryCopy (System.Buffer::InternalBackwardMemoryCopy#4453) ==> 132 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfSweepPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfSweepPhase#7022) ==> 128 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker::Allocate (Microsoft.Zelig.Runtime.Finalizer.Tracker::Allocate#6598) ==> 128 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::Allocate (Microsoft.Zelig.Runtime.LinearMemoryManager::Allocate#5702) ==> 128 bytes
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet.EquivalenceDelegation::Invoke (Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet.EquivalenceDelegation::Invoke#17334) ==> 128 bytes
System.DateTime::DateToTicks (System.DateTime::DateToTicks#7956) ==> 128 bytes
System.Number::.ctor (System.Number::.ctor#8591) ==> 128 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback::Invoke (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback::Invoke#20499) ==> 124 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback::Invoke (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback::Invoke#20690) ==> 124 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Initialize (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Initialize#20326) ==> 120 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UpdateFrame (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UpdateFrame#3950) ==> 120 bytes
System.String::Format (System.String::Format#3128) ==> 120 bytes
Windows.Devices.Gpio.GpioController::TryOpenPin (Windows.Devices.Gpio.GpioController::TryOpenPin#19979) ==> 120 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::GetTicksForQuantumValue (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::GetTicksForQuantumValue#20676) ==> 116 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::FindObject (Microsoft.Zelig.Runtime.MarkAndSweepCollector::FindObject#5229) ==> 116 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::RebuildBrickTable (Microsoft.Zelig.Runtime.MarkAndSweepCollector::RebuildBrickTable#5255) ==> 116 bytes
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::Equals#16046) ==> 116 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::ToString#16809) ==> 116 bytes
System.Threading.EventWaitHandle.EventWaitableObject::Release (System.Threading.EventWaitHandle.EventWaitableObject::Release#6479) ==> 116 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PopulateFromDelegate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PopulateFromDelegate#6912) ==> 114 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateInner (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateInner#6048) ==> 112 bytes
Microsoft.Zelig.Runtime.Finalizer::.cctor (Microsoft.Zelig.Runtime.Finalizer::.cctor#5285) ==> 112 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::PopulateFromDelegate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::PopulateFromDelegate#6972) ==> 112 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::PopulateFromDelegate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::PopulateFromDelegate#6875) ==> 112 bytes
System.Array::Copy (System.Array::Copy#1928) ==> 112 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9908) ==> 112 bytes
System.Threading.Thread::Detach (System.Threading.Thread::Detach#4789) ==> 112 bytes
Microsoft.Zelig.Runtime.Unwind::ReadSLEB128 (Microsoft.Zelig.Runtime.Unwind::ReadSLEB128#6027) ==> 110 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9933) ==> 110 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#38124) ==> 108 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#39123) ==> 108 bytes
Microsoft.Zelig.ArrayUtility::ArrayEquals (Microsoft.Zelig.ArrayUtility::ArrayEquals#39126) ==> 108 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Initialize (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Initialize#7018) ==> 108 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::.ctor (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::.ctor#27574) ==> 108 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::Allocate (Microsoft.Zelig.Runtime.MemoryFreeBlock::Allocate#5603) ==> 108 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::EqualsThroughEquivalence#16794) ==> 108 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::EqualsThroughEquivalence#16876) ==> 108 bytes
System.Threading.Monitor::Enter (System.Threading.Monitor::Enter#9098) ==> 108 bytes
Microsoft.Llilum.Devices.Gpio.ValueChangedHandler::Invoke (Microsoft.Llilum.Devices.Gpio.ValueChangedHandler::Invoke#19329) ==> 106 bytes
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence#39140) ==> 106 bytes
Microsoft.Zelig.Runtime.BrickTable::MarkObject (Microsoft.Zelig.Runtime.BrickTable::MarkObject#5544) ==> 104 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueBlocking (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueBlocking#27581) ==> 104 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::EnableSystemHandler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::EnableSystemHandler#3855) ==> 104 bytes
Microsoft.Zelig.Runtime.ThreadManager::AddThread (Microsoft.Zelig.Runtime.ThreadManager::AddThread#3767) ==> 104 bytes
Microsoft.Zelig.Runtime.ThreadManager::ComputeNextTimeout (Microsoft.Zelig.Runtime.ThreadManager::ComputeNextTimeout#3787) ==> 104 bytes
Microsoft.Zelig.Runtime.ThreadManager::Yield (Microsoft.Zelig.Runtime.ThreadManager::Yield#3770) ==> 104 bytes
Microsoft.Zelig.Runtime.TypeSystem.AbstractReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.AbstractReferenceTypeRepresentation::ToString#16758) ==> 104 bytes
Microsoft.Zelig.Runtime.TypeSystem.ScalarTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ScalarTypeRepresentation::ToString#16912) ==> 104 bytes
Microsoft.Zelig.Runtime.TypeSystem.ValueTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ValueTypeRepresentation::ToString#17072) ==> 104 bytes
System.Buffer::InternalBackwardMemoryCopy (System.Buffer::InternalBackwardMemoryCopy#4456) ==> 104 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::.ctor (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::.ctor#20356) ==> 100 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueNonblocking (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueNonblocking#27579) ==> 100 bytes
Microsoft.Zelig.Runtime.ThreadManager::InitializeBeforeStaticConstructors (Microsoft.Zelig.Runtime.ThreadManager::InitializeBeforeStaticConstructors#3760) ==> 100 bytes
System.Collections.BitArray::Get (System.Collections.BitArray::Get#11698) ==> 100 bytes
System.DateTime::.ctor (System.DateTime::.ctor#7912) ==> 100 bytes
System.Threading.Thread::ProcessWaitExpiration (System.Threading.Thread::ProcessWaitExpiration#4784) ==> 100 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Register (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Register#20335) ==> 98 bytes
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::EnqueueNonblocking (Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::EnqueueNonblocking#27578) ==> 96 bytes
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet::AreEquivalent (Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet::AreEquivalent#15987) ==> 96 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::EqualsThroughEquivalence#16860) ==> 96 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Refresh (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Refresh#20333) ==> 92 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioProvider::CreateGpioPin (Microsoft.CortexM0OnMBED.HardwareModel.GpioProvider::CreateGpioPin#20458) ==> 92 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSupervisorCall (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSupervisorCall#3962) ==> 92 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSupervisorCall (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSupervisorCall#3847) ==> 92 bytes
System.Globalization.NumberFormatInfo::get_CurrentInfo (System.Globalization.NumberFormatInfo::get_CurrentInfo#11174) ==> 92 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld (Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld#5236) ==> 88 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestProcessed (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestProcessed#6839) ==> 88 bytes
Microsoft.Zelig.Runtime.ThreadManager::Wakeup (Microsoft.Zelig.Runtime.ThreadManager::Wakeup#3772) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.ConcreteReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ConcreteReferenceTypeRepresentation::ToString#16790) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::ToString#16844) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.InterfaceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.InterfaceTypeRepresentation::ToString#16850) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::ToString#16855) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::ToString#16869) ==> 88 bytes
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::ToString (Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::ToString#16917) ==> 88 bytes
System.Array::GetLowerBound (System.Array::GetLowerBound#4414) ==> 88 bytes
System.Delegate::Equals (System.Delegate::Equals#5675) ==> 88 bytes
System.MulticastDelegate::Equals (System.MulticastDelegate::Equals#5692) ==> 88 bytes
System.String::FillStringChecked (System.String::FillStringChecked#3075) ==> 88 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9922) ==> 88 bytes
System.Threading.Thread::UnregisterWait (System.Threading.Thread::UnregisterWait#4782) ==> 88 bytes
Microsoft.Zelig.ArrayUtility::AppendToNotNullArray (Microsoft.Zelig.ArrayUtility::AppendToNotNullArray#43485) ==> 84 bytes
Microsoft.Zelig.Runtime.ObjectHeader::UpdateExtension (Microsoft.Zelig.Runtime.ObjectHeader::UpdateExtension#3707) ==> 84 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::InitializeProcessor (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::InitializeProcessor#3844) ==> 84 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::ContextSwitch (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::ContextSwitch#6917) ==> 84 bytes
Microsoft.Zelig.Runtime.ThreadManager::RemoveThread (Microsoft.Zelig.Runtime.ThreadManager::RemoveThread#3768) ==> 84 bytes
System.Number::Int32ToHexString (System.Number::Int32ToHexString#8619) ==> 84 bytes
System.Number::UInt32ToDecString (System.Number::UInt32ToDecString#8621) ==> 84 bytes
System.String::GetHashCode (System.String::GetHashCode#3048) ==> 84 bytes
System.Threading.Thread::Start (System.Threading.Thread::Start#4767) ==> 84 bytes
Windows.Devices.Gpio.GpioPin::SetDriveMode (Windows.Devices.Gpio.GpioPin::SetDriveMode#20015) ==> 84 bytes
System.Int16::ToString (System.Int16::ToString#2498) ==> 82 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3166) ==> 82 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessFastInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessFastInterrupt#20527) ==> 80 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessInterrupt#20526) ==> 80 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext::get_IsOpenMethod (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext::get_IsOpenMethod#17412) ==> 80 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsOpenType#17624) ==> 80 bytes
System.Collections.BitArray::.ctor (System.Collections.BitArray::.ctor#11691) ==> 80 bytes
System.Number::Int32ToDecChars (System.Number::Int32ToDecChars#8628) ==> 80 bytes
System.Number::Int32ToHexChars (System.Number::Int32ToHexChars#8620) ==> 80 bytes
System.Text.StringBuilder::ToString (System.Text.StringBuilder::ToString#9900) ==> 80 bytes
System.Threading.Thread::IsAtSafePoint (System.Threading.Thread::IsAtSafePoint#4790) ==> 80 bytes
System.Threading.ThreadStart::Invoke (System.Threading.ThreadStart::Invoke#9158) ==> 80 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Reset (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Reset#20675) ==> 78 bytes
System.String::.ctor (System.String::.ctor#4641) ==> 78 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::EnableInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::EnableInterrupt#20364) ==> 76 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::ContextSwitchTimer_Handler_Zelig (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::ContextSwitchTimer_Handler_Zelig#20682) ==> 76 bytes
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_AllocateTimer (Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_AllocateTimer#20936) ==> 76 bytes
Microsoft.Zelig.Runtime.Synchronization.YieldLock::Release (Microsoft.Zelig.Runtime.Synchronization.YieldLock::Release#6054) ==> 76 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::SameShape (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::SameShape#16866) ==> 76 bytes
System.Int16::Equals (System.Int16::Equals#2484) ==> 76 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetLock (Microsoft.Zelig.Runtime.SyncBlockTable::GetLock#5558) ==> 74 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::get_CurrentTime (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::get_CurrentTime#20328) ==> 72 bytes
Microsoft.Zelig.Runtime.HardwareProvider::.cctor (Microsoft.Zelig.Runtime.HardwareProvider::.cctor#5269) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::.ctor#27523) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::.ctor#27555) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::.ctor#21916) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::.ctor#21735) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::.ctor#21747) ==> 72 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::.ctor (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::.ctor#21581) ==> 72 bytes
Microsoft.Zelig.Runtime.SyncBlock::ExtractFromFreeList (Microsoft.Zelig.Runtime.SyncBlock::ExtractFromFreeList#5578) ==> 72 bytes
Microsoft.Zelig.Runtime.ThreadManager::SelectNextThreadToRun (Microsoft.Zelig.Runtime.ThreadManager::SelectNextThreadToRun#3777) ==> 72 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::EqualsThroughEquivalence#16761) ==> 72 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_FullName (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_FullName#17035) ==> 72 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::InvokeStaticConstructors (Microsoft.Zelig.Runtime.TypeSystemManager::InvokeStaticConstructors#6012) ==> 72 bytes
System.Byte::Equals (System.Byte::Equals#2174) ==> 72 bytes
System.Char::Equals (System.Char::Equals#2246) ==> 72 bytes
System.Int32::Equals (System.Int32::Equals#2558) ==> 72 bytes
System.MulticastDelegate::GetHashCode (System.MulticastDelegate::GetHashCode#5693) ==> 72 bytes
System.Reflection.MemberInfo::Equals (System.Reflection.MemberInfo::Equals#10235) ==> 72 bytes
System.UInt32::Equals (System.UInt32::Equals#3282) ==> 72 bytes
System.UIntPtr::Equals (System.UIntPtr::Equals#3419) ==> 72 bytes
Windows.Devices.Gpio.GpioController::OpenPin (Windows.Devices.Gpio.GpioController::OpenPin#19978) ==> 72 bytes
Windows.Devices.Gpio.GpioPin::ThrowIfDisposed (Windows.Devices.Gpio.GpioPin::ThrowIfDisposed#20019) ==> 72 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsDelayedType#17625) ==> 70 bytes
Microsoft.Zelig.Runtime.Bootstrap::HardwareInitialization (Microsoft.Zelig.Runtime.Bootstrap::HardwareInitialization#4405) ==> 68 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::RestartExecution (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::RestartExecution#7025) ==> 68 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays::Equals (Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays::Equals#59755) ==> 68 bytes
Microsoft.Zelig.Runtime.SyncBlock::AddToFreeList (Microsoft.Zelig.Runtime.SyncBlock::AddToFreeList#5577) ==> 68 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::.ctor (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::.ctor#6064) ==> 68 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Dispose (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Dispose#6836) ==> 68 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Recycle (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Recycle#6086) ==> 68 bytes
Microsoft.Zelig.Runtime.ThreadManager::WaitExpired (Microsoft.Zelig.Runtime.ThreadManager::WaitExpired#3786) ==> 68 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::GetInterface (Microsoft.Zelig.Runtime.TypeSystem.VTable::GetInterface#4390) ==> 68 bytes
System.String::EqualsHelper (System.String::EqualsHelper#3034) ==> 68 bytes
System.String::get_Chars (System.String::get_Chars#4652) ==> 68 bytes
Microsoft.CortexM0OnMBED.MemoryManager::InitializeMemoryManager (Microsoft.CortexM0OnMBED.MemoryManager::InitializeMemoryManager#20266) ==> 66 bytes
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetCurrentExceptionMode (Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetCurrentExceptionMode#6392) ==> 66 bytes
Microsoft.Zelig.Runtime.ThreadManager::InsertInPriorityOrder (Microsoft.Zelig.Runtime.ThreadManager::InsertInPriorityOrder#3792) ==> 66 bytes
Microsoft.Zelig.Runtime.ThreadManager::SetNextQuantumTimerIfNeeded (Microsoft.Zelig.Runtime.ThreadManager::SetNextQuantumTimerIfNeeded#3774) ==> 66 bytes
Microsoft.CortexM3OnMBED.ThreadManager::Activate (Microsoft.CortexM3OnMBED.ThreadManager::Activate#20178) ==> 64 bytes
Microsoft.Zelig.Runtime.BrickTable::Initialize (Microsoft.Zelig.Runtime.BrickTable::Initialize#5542) ==> 64 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::InitializeFromRawMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::InitializeFromRawMemory#5612) ==> 64 bytes
Microsoft.Zelig.Runtime.MemorySegment::LinkNewFreeBlock (Microsoft.Zelig.Runtime.MemorySegment::LinkNewFreeBlock#5638) ==> 64 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode (Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode#5561) ==> 64 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::GetLock (Microsoft.Zelig.Runtime.SyncBlockTable::GetLock#5563) ==> 64 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::SetHashCode (Microsoft.Zelig.Runtime.SyncBlockTable::SetHashCode#5562) ==> 64 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::set_RequestFulfilled (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::set_RequestFulfilled#6093) ==> 64 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate#6970) ==> 64 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate#6873) ==> 64 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate#6910) ==> 64 bytes
Microsoft.Zelig.Runtime.Unwind::GetEntryVTable (Microsoft.Zelig.Runtime.Unwind::GetEntryVTable#6024) ==> 64 bytes
System.Globalization.GregorianCalendar::GetDefaultInstance (System.Globalization.GregorianCalendar::GetDefaultInstance#11099) ==> 64 bytes
System.Threading.Thread::.ctor (System.Threading.Thread::.ctor#4763) ==> 64 bytes
Microsoft.Zelig.Runtime.Synchronization.YieldLock::Acquire (Microsoft.Zelig.Runtime.Synchronization.YieldLock::Acquire#6053) ==> 62 bytes
Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap (Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap#15933) ==> 62 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData::Equals (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData::Equals#59822) ==> 60 bytes
Microsoft.Zelig.CHECKS::ASSERT (Microsoft.Zelig.CHECKS::ASSERT#13375) ==> 60 bytes
Microsoft.Zelig.Runtime.Helpers.FloatImplementation::Equals (Microsoft.Zelig.Runtime.Helpers.FloatImplementation::Equals#59751) ==> 60 bytes
Microsoft.Zelig.Runtime.MemorySegment::Allocate (Microsoft.Zelig.Runtime.MemorySegment::Allocate#5636) ==> 60 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::Mark (Microsoft.Zelig.Runtime.SyncBlock.Handler::Mark#6760) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SetupForExceptionHandling (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SetupForExceptionHandling#6973) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SetupForExceptionHandling (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SetupForExceptionHandling#6876) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PendSV_Handler_Zelig_VFP (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PendSV_Handler_Zelig_VFP#6944) ==> 60 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SetupForExceptionHandling (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SetupForExceptionHandling#6913) ==> 60 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterface (Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterface#6017) ==> 60 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedType (Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedType#6015) ==> 60 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToType (Microsoft.Zelig.Runtime.TypeSystemManager::CastToType#6013) ==> 60 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::Throw (Microsoft.Zelig.Runtime.TypeSystemManager::Throw#6019) ==> 60 bytes
System.Globalization.GregorianCalendar::.cctor (System.Globalization.GregorianCalendar::.cctor#11131) ==> 60 bytes
System.Text.StringBuilder::GetThreadSafeString (System.Text.StringBuilder::GetThreadSafeString#9894) ==> 60 bytes
System.Threading.Thread::AcquiredWaitableObject (System.Threading.Thread::AcquiredWaitableObject#4786) ==> 60 bytes
System.Threading.Thread::Entrypoint (System.Threading.Thread::Entrypoint#4776) ==> 60 bytes
System.Type::Equals (System.Type::Equals#8910) ==> 60 bytes
Windows.Devices.Gpio.DefaultPinProvider::.ctor (Windows.Devices.Gpio.DefaultPinProvider::.ctor#19959) ==> 60 bytes
Microsoft.Zelig.Runtime.MemoryManager::AddLinearSection (Microsoft.Zelig.Runtime.MemoryManager::AddLinearSection#5957) ==> 58 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3161) ==> 58 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3162) ==> 58 bytes
System.String::GetStringForStringBuilder (System.String::GetStringForStringBuilder#3169) ==> 58 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.ctor (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.ctor#6082) ==> 56 bytes
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::PrettyToString#16918) ==> 56 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow (Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow#43488) ==> 56 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterfaceNoThrow (Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterfaceNoThrow#6018) ==> 56 bytes
Microsoft.Zelig.Runtime.Unwind::GetEncodingSize (Microsoft.Zelig.Runtime.Unwind::GetEncodingSize#6029) ==> 56 bytes
Microsoft.Zelig.Runtime.Unwind::ReadULEB128 (Microsoft.Zelig.Runtime.Unwind::ReadULEB128#6025) ==> 56 bytes
System.Globalization.CultureInfo::get_NumberFormat (System.Globalization.CultureInfo::get_NumberFormat#11030) ==> 56 bytes
System.Globalization.GregorianCalendar::GetDayOfWeek (System.Globalization.GregorianCalendar::GetDayOfWeek#11111) ==> 56 bytes
System.Number::FormatInt32 (System.Number::FormatInt32#8603) ==> 56 bytes
System.Number::FormatUInt32 (System.Number::FormatUInt32#8605) ==> 56 bytes
System.Text.StringBuilder::AppendFormat (System.Text.StringBuilder::AppendFormat#9951) ==> 56 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfSweepPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfSweepPhase#6762) ==> 54 bytes
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::WalkStackFrames (Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::WalkStackFrames#20550) ==> 52 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::.ctor (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::.ctor#20507) ==> 52 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::HandleGpioInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::HandleGpioInterrupt#20369) ==> 52 bytes
Microsoft.CortexM3OnMBED.ThreadManager::SetNextWaitTimer (Microsoft.CortexM3OnMBED.ThreadManager::SetNextWaitTimer#20179) ==> 52 bytes
Microsoft.Zelig.Runtime.Bootstrap::Initialization (Microsoft.Zelig.Runtime.Bootstrap::Initialization#4403) ==> 52 bytes
Microsoft.Zelig.Runtime.Bootstrap::SoftwareInitialization (Microsoft.Zelig.Runtime.Bootstrap::SoftwareInitialization#4408) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Unwind (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Unwind#6974) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::InitializeProcessor (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::InitializeProcessor#3959) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Unwind (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Unwind#6877) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::LongJump (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::LongJump#6919) ==> 52 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Unwind (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Unwind#6914) ==> 52 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::ToShortString (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::ToShortString#16241) ==> 52 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension::Equals (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension::Equals#59816) ==> 52 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::ToString (Microsoft.Zelig.Runtime.TypeSystem.VTable::ToString#4400) ==> 52 bytes
System.Diagnostics.Stopwatch::.cctor (System.Diagnostics.Stopwatch::.cctor#15582) ==> 52 bytes
System.Globalization.CultureInfo::.cctor (System.Globalization.CultureInfo::.cctor#11018) ==> 52 bytes
System.Globalization.CultureInfo::get_CurrentCulture (System.Globalization.CultureInfo::get_CurrentCulture#11023) ==> 52 bytes
System.Threading.Thread::ReleasedWaitableObject (System.Threading.Thread::ReleasedWaitableObject#4787) ==> 52 bytes
Windows.Devices.Gpio.GpioPin::Write (Windows.Devices.Gpio.GpioPin::Write#20012) ==> 52 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsMarked (Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsMarked#5234) ==> 50 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SVC_Handler_Zelig_VFP_NoFPContext (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SVC_Handler_Zelig_VFP_NoFPContext#6943) ==> 50 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToTypeNoThrow (Microsoft.Zelig.Runtime.TypeSystemManager::CastToTypeNoThrow#6014) ==> 50 bytes
System.Buffer::InternalMemoryMove (System.Buffer::InternalMemoryMove#4458) ==> 50 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::.ctor (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::.ctor#20704) ==> 48 bytes
Microsoft.Zelig.Runtime.MemoryManager::FreeFromManagedHeap (Microsoft.Zelig.Runtime.MemoryManager::FreeFromManagedHeap#5956) ==> 48 bytes
Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt::.ctor (Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt::.ctor#6140) ==> 48 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Disconnect (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Disconnect#6087) ==> 48 bytes
Microsoft.Zelig.Runtime.Synchronization.YieldLock::IsHeldByCurrentThread (Microsoft.Zelig.Runtime.Synchronization.YieldLock::IsHeldByCurrentThread#6055) ==> 48 bytes
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::EqualsThroughEquivalence (Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::EqualsThroughEquivalence#15896) ==> 48 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::ImplementsInterface (Microsoft.Zelig.Runtime.TypeSystem.VTable::ImplementsInterface#4396) ==> 48 bytes
System.Object::Equals (System.Object::Equals#2772) ==> 48 bytes
System.String::.cctor (System.String::.cctor#3178) ==> 48 bytes
System.Threading.Thread::GetFirstTimeout (System.Threading.Thread::GetFirstTimeout#4783) ==> 48 bytes
Managed.Program::Main (Managed.Program::Main#151) ==> 46 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::GetHashCode#16189) ==> 46 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::HandleSystemTimer (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::HandleSystemTimer#20338) ==> 44 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Reload (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Reload#20334) ==> 44 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Initialize (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Initialize#20672) ==> 44 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Create (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Create#20705) ==> 44 bytes
Microsoft.Zelig.ArrayUtility::AppendToArray (Microsoft.Zelig.ArrayUtility::AppendToArray#38112) ==> 44 bytes
Microsoft.Zelig.Runtime.BrickTable::Reset (Microsoft.Zelig.Runtime.BrickTable::Reset#5543) ==> 44 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue#3955) ==> 44 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue#3953) ==> 44 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::IsSubclassOf (Microsoft.Zelig.Runtime.TypeSystem.VTable::IsSubclassOf#4395) ==> 44 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::Rethrow (Microsoft.Zelig.Runtime.TypeSystemManager::Rethrow#6020) ==> 44 bytes
System.Globalization.CultureInfo::GetFormat (System.Globalization.CultureInfo::GetFormat#11029) ==> 44 bytes
System.Globalization.CultureInfo::get_DateTimeFormat (System.Globalization.CultureInfo::get_DateTimeFormat#11032) ==> 44 bytes
System.ObjectDisposedException::get_Message (System.ObjectDisposedException::get_Message#8647) ==> 44 bytes
System.Reflection.MemberInfo::get_MetadataToken (System.Reflection.MemberInfo::get_MetadataToken#10243) ==> 44 bytes
System.String::Equals (System.String::Equals#3036) ==> 44 bytes
System.String::FastAllocateString (System.String::FastAllocateString#4644) ==> 44 bytes
System.Text.StringBuilder::FormatError (System.Text.StringBuilder::FormatError#9955) ==> 44 bytes
System.Threading.EventWaitHandle::.ctor (System.Threading.EventWaitHandle::.ctor#4702) ==> 44 bytes
System.Threading.Thread::ThrowIndexOutOfRangeException (System.Threading.Thread::ThrowIndexOutOfRangeException#4795) ==> 44 bytes
System.Threading.Thread::ThrowNullException (System.Threading.Thread::ThrowNullException#4794) ==> 44 bytes
System.Threading.Thread::ThrowOverflowException (System.Threading.Thread::ThrowOverflowException#4796) ==> 44 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::DispatchInterrupts (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::DispatchInterrupts#20663) ==> 42 bytes
Microsoft.Zelig.Runtime.MemorySegment::RemoveFreeBlock (Microsoft.Zelig.Runtime.MemorySegment::RemoveFreeBlock#5642) ==> 42 bytes
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::GetHashCode#16084) ==> 42 bytes
System.Number::wcslen (System.Number::wcslen#8634) ==> 42 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::CreateTimer (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::CreateTimer#20327) ==> 40 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::PostInterrupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::PostInterrupt#20662) ==> 40 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker::Process (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker::Process#6581) ==> 40 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker::.ctor (Microsoft.Zelig.Runtime.Finalizer.Tracker::.ctor#6597) ==> 40 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::Acquire (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::Acquire#6067) ==> 40 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::HardFault_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::HardFault_Handler_Zelig#3896) ==> 40 bytes
Microsoft.Zelig.Runtime.ThreadManager::StartThreads (Microsoft.Zelig.Runtime.ThreadManager::StartThreads#3765) ==> 40 bytes
Microsoft.Zelig.Runtime.TypeSystem.VTable::SameType (Microsoft.Zelig.Runtime.TypeSystem.VTable::SameType#4387) ==> 40 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow (Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow#43490) ==> 40 bytes
System.String::AppendInPlace (System.String::AppendInPlace#3160) ==> 40 bytes
System.String::InternalCopy (System.String::InternalCopy#3130) ==> 40 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9932) ==> 40 bytes
System.Threading.Thread::GetCurrentException (System.Threading.Thread::GetCurrentException#4793) ==> 40 bytes
System.Threading.Thread::Stop (System.Threading.Thread::Stop#4788) ==> 40 bytes
Windows.Devices.Gpio.GpioController::.cctor (Windows.Devices.Gpio.GpioController::.cctor#19982) ==> 40 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::Initialize (Microsoft.CortexM0OnCMSISCore.Peripherals::Initialize#20519) ==> 38 bytes
Microsoft.Llilum.Devices.Gpio.GpioPin::TryCreateGpioPin (Microsoft.Llilum.Devices.Gpio.GpioPin::TryCreateGpioPin#19352) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::InsertBefore#27537) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertBefore#22159) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertBefore#22053) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertBefore#21761) ==> 38 bytes
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::InsertBefore (Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::InsertBefore#21612) ==> 38 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Connect (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Connect#6084) ==> 38 bytes
Microsoft.Zelig.AssertionViolationException::Create (Microsoft.Zelig.AssertionViolationException::Create#13160) ==> 36 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitInternalPointer (Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitInternalPointer#5244) ==> 36 bytes
Microsoft.Zelig.Runtime.MemoryManager::get_AvailableMemory (Microsoft.Zelig.Runtime.MemoryManager::get_AvailableMemory#5961) ==> 36 bytes
Microsoft.Zelig.Runtime.SchedulerTime::ConvertFromMillisecondsToUnits (Microsoft.Zelig.Runtime.SchedulerTime::ConvertFromMillisecondsToUnits#20269) ==> 36 bytes
Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit (Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit#5896) ==> 36 bytes
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::PrettyToString#16856) ==> 36 bytes
System.Activator::CreateInstance (System.Activator::CreateInstance#45001) ==> 36 bytes
System.Exception::GetMessageFromNativeResources (System.Exception::GetMessageFromNativeResources#8393) ==> 36 bytes
System.Globalization.NumberFormatInfo::GetFormat (System.Globalization.NumberFormatInfo::GetFormat#11181) ==> 36 bytes
System.MulticastDelegate::GetTarget (System.MulticastDelegate::GetTarget#5697) ==> 36 bytes
System.String::Equals (System.String::Equals#3039) ==> 36 bytes
Microsoft.Zelig.Runtime.MemorySegment::InsertFreeBlock (Microsoft.Zelig.Runtime.MemorySegment::InsertFreeBlock#5644) ==> 34 bytes
Microsoft.Zelig.Runtime.ThreadManager::RegisterThread (Microsoft.Zelig.Runtime.ThreadManager::RegisterThread#3766) ==> 34 bytes
Microsoft.Zelig.Runtime.ThreadManager::RescheduleAndRequestContextSwitchIfNeeded (Microsoft.Zelig.Runtime.ThreadManager::RescheduleAndRequestContextSwitchIfNeeded#3775) ==> 34 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::GetHashCode#16796) ==> 34 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::PrettyToString (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::PrettyToString#16892) ==> 34 bytes
System.Number.ToStringFormatState::Get (System.Number.ToStringFormatState::Get#12351) ==> 34 bytes
System.Type::Equals (System.Type::Equals#8911) ==> 34 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Deregister (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Deregister#20336) ==> 32 bytes
Microsoft.Llilum.STM32F401.Processor::AllocateProcessorContext (Microsoft.Llilum.STM32F401.Processor::AllocateProcessorContext#21160) ==> 32 bytes
Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOn (Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOn#5719) ==> 32 bytes
Microsoft.Zelig.Runtime.BugCheck::Log (Microsoft.Zelig.Runtime.BugCheck::Log#5714) ==> 32 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::CreateStackWalker (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::CreateStackWalker#5196) ==> 32 bytes
Microsoft.Zelig.Runtime.SchedulerTimeSpan::.cctor (Microsoft.Zelig.Runtime.SchedulerTimeSpan::.cctor#5864) ==> 32 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSystemHandler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSystemHandler#3846) ==> 32 bytes
Microsoft.Zelig.Runtime.ThreadManager::Sleep (Microsoft.Zelig.Runtime.ThreadManager::Sleep#3788) ==> 32 bytes
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::SameShape (Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::SameShape#16916) ==> 32 bytes
System.Delegate::op_Equality (System.Delegate::op_Equality#5677) ==> 32 bytes
System.String::ClearPostNullChar (System.String::ClearPostNullChar#3171) ==> 32 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9924) ==> 32 bytes
System.Text.StringBuilder::Append (System.Text.StringBuilder::Append#9930) ==> 32 bytes
System.Threading.EventWaitHandle::Set (System.Threading.EventWaitHandle::Set#4704) ==> 32 bytes
System.Type::GetHashCode (System.Type::GetHashCode#8912) ==> 32 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetActivePinEdge (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetActivePinEdge#20363) ==> 30 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Cancel (Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Cancel#20674) ==> 30 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::ExtractFirstNode (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::ExtractFirstNode#21753) ==> 30 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::DirtyFreeMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::DirtyFreeMemory#5601) ==> 30 bytes
Microsoft.Zelig.Runtime.ObjectHeader::ComputeObjectSize (Microsoft.Zelig.Runtime.ObjectHeader::ComputeObjectSize#3704) ==> 30 bytes
System.Number.ToStringFormatState::Reset (System.Number.ToStringFormatState::Reset#12347) ==> 30 bytes
System.String::.ctor (System.String::.ctor#4643) ==> 30 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::Activate (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::Activate#20631) ==> 28 bytes
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_EnablePin (Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_EnablePin#20770) ==> 28 bytes
Microsoft.Zelig.Runtime.Bootstrap::HeapInitialization (Microsoft.Zelig.Runtime.Bootstrap::HeapInitialization#4406) ==> 28 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::ZeroFreeMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::ZeroFreeMemory#5599) ==> 28 bytes
Microsoft.Zelig.Runtime.MemorySegment::Initialize (Microsoft.Zelig.Runtime.MemorySegment::Initialize#5630) ==> 28 bytes
Microsoft.Zelig.Runtime.SyncBlockTable::get_Lock (Microsoft.Zelig.Runtime.SyncBlockTable::get_Lock#5566) ==> 28 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Get (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Get#6837) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate#6971) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate#6874) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_NotifySoftwareFrameSnapshot (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_NotifySoftwareFrameSnapshot#3949) ==> 28 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate#6911) ==> 28 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_StartOfForwardWalkThroughAllThreads (Microsoft.Zelig.Runtime.ThreadManager::get_StartOfForwardWalkThroughAllThreads#3800) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::GetHashCode#16763) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsDelayedType#16769) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsOpenType#16768) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::GetHashCode#16047) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::GetHashCode#16878) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsDelayedType#16887) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsOpenType#16886) ==> 28 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedTypeNoThrow (Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedTypeNoThrow#6016) ==> 28 bytes
System.Activator::CreateInstance (System.Activator::CreateInstance#44998) ==> 28 bytes
System.ArgumentException::get_Message (System.ArgumentException::get_Message#7407) ==> 28 bytes
System.Array::GetPointerToElement (System.Array::GetPointerToElement#4420) ==> 28 bytes
System.Threading.WaitHandle::WaitOne (System.Threading.WaitHandle::WaitOne#9182) ==> 28 bytes
System.Type::op_Equality (System.Type::op_Equality#8913) ==> 28 bytes
Microsoft.CortexM0OnMBED.MemoryManager::RefersToMemory (Microsoft.CortexM0OnMBED.MemoryManager::RefersToMemory#20267) ==> 26 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::TimeQuantumExpired (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::TimeQuantumExpired#20635) ==> 26 bytes
Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOff (Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOff#5718) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::RemoveFromList#27538) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::RemoveFromList#22160) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::RemoveFromList#22054) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::RemoveFromList#21762) ==> 26 bytes
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::RemoveFromList (Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::RemoveFromList#21613) ==> 26 bytes
Microsoft.Zelig.Runtime.MemorySegment::get_AvailableMemory (Microsoft.Zelig.Runtime.MemorySegment::get_AvailableMemory#5666) ==> 26 bytes
Microsoft.Zelig.Runtime.SyncBlock::get_Lock (Microsoft.Zelig.Runtime.SyncBlock::get_Lock#5579) ==> 26 bytes
System.Globalization.DateTimeFormatInfo::.ctor (System.Globalization.DateTimeFormatInfo::.ctor#11051) ==> 26 bytes
System.Number.ToStringFormatState::PeekAt (System.Number.ToStringFormatState::PeekAt#12353) ==> 26 bytes
System.Number::Get (System.Number::Get#8596) ==> 26 bytes
System.Threading.WaitHandle::WaitOne (System.Threading.WaitHandle::WaitOne#4699) ==> 26 bytes
Microsoft.CortexM0OnMBED.Device::ProcessLog (Microsoft.CortexM0OnMBED.Device::ProcessLog#20236) ==> 24 bytes
Microsoft.CortexM0OnMBED.Device::ProcessLog (Microsoft.CortexM0OnMBED.Device::ProcessLog#20237) ==> 24 bytes
Microsoft.CortexM0OnMBED.Device::ProcessLog (Microsoft.CortexM0OnMBED.Device::ProcessLog#20238) ==> 24 bytes
Microsoft.CortexM3OnMBED.ThreadManager::WaitExpired (Microsoft.CortexM3OnMBED.ThreadManager::WaitExpired#20180) ==> 24 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Activate (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Activate#20650) ==> 24 bytes
Microsoft.Llilum.Devices.Gpio.GpioPin::SendEventInternal (Microsoft.Llilum.Devices.Gpio.GpioPin::SendEventInternal#19353) ==> 24 bytes
Microsoft.Zelig.Runtime.BugCheck::Log (Microsoft.Zelig.Runtime.BugCheck::Log#5713) ==> 24 bytes
Microsoft.Zelig.Runtime.KernelPerformanceCounter::Merge (Microsoft.Zelig.Runtime.KernelPerformanceCounter::Merge#5729) ==> 24 bytes
Microsoft.Zelig.Runtime.ObjectHeader::get_ObjectSize (Microsoft.Zelig.Runtime.ObjectHeader::get_ObjectSize#3702) ==> 24 bytes
Microsoft.Zelig.Runtime.ObjectHeader::get_TotalSize (Microsoft.Zelig.Runtime.ObjectHeader::get_TotalSize#3703) ==> 24 bytes
Microsoft.Zelig.Runtime.SchedulerTime::.cctor (Microsoft.Zelig.Runtime.SchedulerTime::.cctor#5938) ==> 24 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreAllInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreAllInterruptsDisabled#3862) ==> 24 bytes
Microsoft.Zelig.Runtime.ThreadManager::RetireThread (Microsoft.Zelig.Runtime.ThreadManager::RetireThread#3769) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::Equals#16762) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::Equals#16083) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::Equals#16188) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParameters (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParameters#16220) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_IsOpenMethod (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_IsOpenMethod#16224) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::Equals#16877) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::Equals#16941) ==> 24 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_GenericParameters (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_GenericParameters#17025) ==> 24 bytes
System.RuntimeType::get_FullName (System.RuntimeType::get_FullName#3664) ==> 24 bytes
System.RuntimeType::get_Name (System.RuntimeType::get_Name#3663) ==> 24 bytes
System.Text.StringBuilder::.ctor (System.Text.StringBuilder::.ctor#9889) ==> 24 bytes
System.UIntPtr::op_Explicit (System.UIntPtr::op_Explicit#3429) ==> 24 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::set_Timeout (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::set_Timeout#20512) ==> 22 bytes
Microsoft.Llilum.STM32F401.Processor::InitializeProcessor (Microsoft.Llilum.STM32F401.Processor::InitializeProcessor#21159) ==> 22 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::IdleThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::IdleThread#5990) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::FirstTarget#27526) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::FirstTarget#21738) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::FirstTarget#21750) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::FirstTarget (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::FirstTarget#21584) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::LastTarget (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::LastTarget#21586) ==> 22 bytes
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::VerifyUnlinked (Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::VerifyUnlinked#21618) ==> 22 bytes
Microsoft.Zelig.Runtime.ThreadManager::MainThread (Microsoft.Zelig.Runtime.ThreadManager::MainThread#3794) ==> 22 bytes
Microsoft.Zelig.Runtime.ThreadManager::set_CurrentThread (Microsoft.Zelig.Runtime.ThreadManager::set_CurrentThread#3797) ==> 22 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetHashCode#16942) ==> 22 bytes
System.Byte::ToString (System.Byte::ToString#2203) ==> 22 bytes
System.Char::ToString (System.Char::ToString#2258) ==> 22 bytes
System.Enum::ToString (System.Enum::ToString#2449) ==> 22 bytes
System.Exception::ToString (System.Exception::ToString#8391) ==> 22 bytes
System.Int16::ToString (System.Int16::ToString#2496) ==> 22 bytes
System.Int32::ToString (System.Int32::ToString#2572) ==> 22 bytes
System.Threading.Thread::get_IsAlive (System.Threading.Thread::get_IsAlive#4803) ==> 22 bytes
System.Threading.WaitHandle::WaitOne (System.Threading.WaitHandle::WaitOne#4692) ==> 22 bytes
System.UInt32::ToString (System.UInt32::ToString#3294) ==> 22 bytes
Windows.Devices.Gpio.DefaultPinProvider::Write (Windows.Devices.Gpio.DefaultPinProvider::Write#19972) ==> 22 bytes
Microsoft.CortexM0OnMBED.Device::ProcessBugCheck (Microsoft.CortexM0OnMBED.Device::ProcessBugCheck#20235) ==> 20 bytes
Microsoft.CortexM0OnMBED.Peripherals::ReadPerformanceCounter (Microsoft.CortexM0OnMBED.Peripherals::ReadPerformanceCounter#20246) ==> 20 bytes
Microsoft.CortexM4OnMBED.Processor::.cctor (Microsoft.CortexM4OnMBED.Processor::.cctor#20138) ==> 20 bytes
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_HasRef (Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_HasRef#20617) ==> 20 bytes
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_IsPrecise (Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_IsPrecise#20618) ==> 20 bytes
Microsoft.Llilum.Devices.Gpio.GpioPin::TryAcquireGpioPin (Microsoft.Llilum.Devices.Gpio.GpioPin::TryAcquireGpioPin#4859) ==> 20 bytes
Microsoft.Llilum.STM32F401.HardwareModel.HardwareProviders.GpioProvider::GetGpioPinIRQNumber (Microsoft.Llilum.STM32F401.HardwareModel.HardwareProviders.GpioProvider::GetGpioPinIRQNumber#21167) ==> 20 bytes
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::Contains (Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::Contains#23419) ==> 20 bytes
Microsoft.Zelig.Runtime.Bootstrap::HardwareActivation (Microsoft.Zelig.Runtime.Bootstrap::HardwareActivation#4409) ==> 20 bytes
Microsoft.Zelig.Runtime.Bootstrap::SoftwareActivation (Microsoft.Zelig.Runtime.Bootstrap::SoftwareActivation#4410) ==> 20 bytes
Microsoft.Zelig.Runtime.BugCheck::Log (Microsoft.Zelig.Runtime.BugCheck::Log#5712) ==> 20 bytes
Microsoft.Zelig.Runtime.BugCheck::Raise (Microsoft.Zelig.Runtime.BugCheck::Raise#5711) ==> 20 bytes
Microsoft.Zelig.Runtime.Device::ProcessBugCheck (Microsoft.Zelig.Runtime.Device::ProcessBugCheck#5483) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertAtTail#21917) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertAtTail#21736) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertAtTail#21748) ==> 20 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::InsertAtTail (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::InsertAtTail#21582) ==> 20 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ThrowOutOfMemory (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ThrowOutOfMemory#5233) ==> 20 bytes
Microsoft.Zelig.Runtime.MemoryManager::DirtyFreeMemory (Microsoft.Zelig.Runtime.MemoryManager::DirtyFreeMemory#5948) ==> 20 bytes
Microsoft.Zelig.Runtime.MemoryManager::ZeroFreeMemory (Microsoft.Zelig.Runtime.MemoryManager::ZeroFreeMemory#5947) ==> 20 bytes
Microsoft.Zelig.Runtime.MemorySegment::DirtyFreeMemory (Microsoft.Zelig.Runtime.MemorySegment::DirtyFreeMemory#5634) ==> 20 bytes
Microsoft.Zelig.Runtime.MemorySegment::ZeroFreeMemory (Microsoft.Zelig.Runtime.MemorySegment::ZeroFreeMemory#5632) ==> 20 bytes
Microsoft.Zelig.Runtime.Processor::AreInterruptsEnabled (Microsoft.Zelig.Runtime.Processor::AreInterruptsEnabled#5527) ==> 20 bytes
Microsoft.Zelig.Runtime.SchedulerTime::GetCurrentTime (Microsoft.Zelig.Runtime.SchedulerTime::GetCurrentTime#20277) ==> 20 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_ShouldTryToAcquire (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_ShouldTryToAcquire#6838) ==> 20 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Wait (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Wait#6085) ==> 20 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::VerifyHandlerMode (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::VerifyHandlerMode#3979) ==> 20 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::VerifyHandlerMode (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::VerifyHandlerMode#3871) ==> 20 bytes
Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap (Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap#15932) ==> 20 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsDelayedType#17041) ==> 20 bytes
System.Diagnostics.Stopwatch::QueryPerformanceFrequency (System.Diagnostics.Stopwatch::QueryPerformanceFrequency#4539) ==> 20 bytes
System.Globalization.GregorianCalendar::GetDayOfMonth (System.Globalization.GregorianCalendar::GetDayOfMonth#11110) ==> 20 bytes
System.Globalization.GregorianCalendar::GetMonth (System.Globalization.GregorianCalendar::GetMonth#11119) ==> 20 bytes
System.Globalization.GregorianCalendar::GetYear (System.Globalization.GregorianCalendar::GetYear#11121) ==> 20 bytes
System.Int16::ToString (System.Int16::ToString#2490) ==> 20 bytes
System.Object::GetType (System.Object::GetType#4571) ==> 20 bytes
System.ObjectDisposedException::get_ObjectName (System.ObjectDisposedException::get_ObjectName#8648) ==> 20 bytes
System.Text.StringBuilder::NeedsAllocation (System.Text.StringBuilder::NeedsAllocation#9910) ==> 20 bytes
System.Threading.Thread::Wakeup (System.Threading.Thread::Wakeup#4785) ==> 20 bytes
System.Threading.Thread::Yield (System.Threading.Thread::Yield#4779) ==> 20 bytes
System.Type::op_Inequality (System.Type::op_Inequality#8914) ==> 20 bytes
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::Collect (Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::Collect#20549) ==> 18 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Cancel (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Cancel#20508) ==> 18 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Invoke (Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Invoke#20509) ==> 18 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::DisableInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::DisableInterrupt#20365) ==> 18 bytes
Microsoft.CortexM4OnCMSISCore.Processor::InitializeProcessor (Microsoft.CortexM4OnCMSISCore.Processor::InitializeProcessor#21081) ==> 18 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::RemoveThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::RemoveThread#5986) ==> 18 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ExtendMarking (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ExtendMarking#5235) ==> 18 bytes
Microsoft.Zelig.Runtime.ObjectHeader::InsertPlug (Microsoft.Zelig.Runtime.ObjectHeader::InsertPlug#3705) ==> 18 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreAllInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreAllInterruptsDisabled#3975) ==> 18 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreInterruptsDisabled#3860) ==> 18 bytes
Microsoft.Zelig.Runtime.ThreadManager::TimeQuantumExpired (Microsoft.Zelig.Runtime.ThreadManager::TimeQuantumExpired#3773) ==> 18 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsOpenType#17040) ==> 18 bytes
System.Byte::ToString (System.Byte::ToString#2197) ==> 18 bytes
System.Int32::ToString (System.Int32::ToString#2564) ==> 18 bytes
System.Int32::ToString (System.Int32::ToString#2570) ==> 18 bytes
System.Number.ToStringFormatState::MoveToEnd (System.Number.ToStringFormatState::MoveToEnd#12357) ==> 18 bytes
System.Object::ToString (System.Object::ToString#2770) ==> 18 bytes
System.String::GetStringForStringBuilder (System.String::GetStringForStringBuilder#3168) ==> 18 bytes
System.Text.StringBuilder::.ctor (System.Text.StringBuilder::.ctor#9891) ==> 18 bytes
System.Threading.Monitor::Enter (System.Threading.Monitor::Enter#4684) ==> 18 bytes
System.Threading.Monitor::Exit (System.Threading.Monitor::Exit#4685) ==> 18 bytes
System.Threading.Thread::SetupForExceptionHandling (System.Threading.Thread::SetupForExceptionHandling#4775) ==> 18 bytes
System.UInt32::ToString (System.UInt32::ToString#3288) ==> 18 bytes
System.UInt32::ToString (System.UInt32::ToString#3290) ==> 18 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinDirection (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinDirection#20362) ==> 16 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::CancelQuantumTimer (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::CancelQuantumTimer#20632) ==> 16 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::SetNextQuantumTimer (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::SetNextQuantumTimer#20633) ==> 16 bytes
Microsoft.Llilum.STM32F401.ThreadManager::get_DefaultStackSize (Microsoft.Llilum.STM32F401.ThreadManager::get_DefaultStackSize#21165) ==> 16 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::StartThreads (Microsoft.Zelig.Runtime.ARMv7ThreadManager::StartThreads#5985) ==> 16 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::get_AvailableMemory (Microsoft.Zelig.Runtime.MemoryFreeBlock::get_AvailableMemory#5618) ==> 16 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::DisableLazyStacking (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::DisableLazyStacking#6369) ==> 16 bytes
System.Buffer::InternalMemoryCopy (System.Buffer::InternalMemoryCopy#4443) ==> 16 bytes
System.ObjectDisposedException::.ctor (System.ObjectDisposedException::.ctor#8645) ==> 16 bytes
System.UIntPtr::.ctor (System.UIntPtr::.ctor#3415) ==> 16 bytes
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::TimeSinceAccumulatorUpdate (Microsoft.CortexM0OnMBED.Drivers.SystemTimer::TimeSinceAccumulatorUpdate#20337) ==> 14 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Invoke (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Invoke#20708) ==> 14 bytes
Microsoft.Llilum.STM32F401.Processor.Context::SwitchTo (Microsoft.Llilum.STM32F401.Processor.Context::SwitchTo#21174) ==> 14 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::Unpack (Microsoft.Zelig.Runtime.MemoryFreeBlock::Unpack#5589) ==> 14 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::UnregisterWait (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::UnregisterWait#6070) ==> 14 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestFulfilled (Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestFulfilled#6840) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SwitchTo (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SwitchTo#6969) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreInterruptsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreInterruptsDisabled#3974) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SwitchTo (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SwitchTo#6872) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::DebuggerConnected (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::DebuggerConnected#3893) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressPrecise (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressPrecise#3891) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressValid (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressValid#3890) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsMemFaultAddressValid (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsMemFaultAddressValid#3889) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::WasHardFaultOnVectorTableRead (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::WasHardFaultOnVectorTableRead#3888) ==> 14 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SwitchTo (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SwitchTo#6909) ==> 14 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_ShouldContextSwitch (Microsoft.Zelig.Runtime.ThreadManager::get_ShouldContextSwitch#3799) ==> 14 bytes
System.Globalization.Calendar::.ctor (System.Globalization.Calendar::.ctor#10919) ==> 14 bytes
System.Globalization.GregorianCalendar::.ctor (System.Globalization.GregorianCalendar::.ctor#11101) ==> 14 bytes
System.Threading.EventWaitHandle.EventWaitableObject::.ctor (System.Threading.EventWaitHandle.EventWaitableObject::.ctor#6477) ==> 14 bytes
System.Threading.Thread::Sleep (System.Threading.Thread::Sleep#4771) ==> 14 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::Activate (Microsoft.CortexM0OnCMSISCore.Peripherals::Activate#20520) ==> 12 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinMode (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinMode#20361) ==> 12 bytes
Microsoft.CortexM0OnMBED.Peripherals::Activate (Microsoft.CortexM0OnMBED.Peripherals::Activate#20245) ==> 12 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::GetNextActiveInterupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::GetNextActiveInterupt#20658) ==> 12 bytes
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_TenMillisecondsCalibrationValue (Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_TenMillisecondsCalibrationValue#20616) ==> 12 bytes
Microsoft.DeviceModels.Chipset.CortexM4.Processor::InitializeProcessor (Microsoft.DeviceModels.Chipset.CortexM4.Processor::InitializeProcessor#21098) ==> 12 bytes
Microsoft.Llilum.STM32F401.Device::get_BootstrapStack (Microsoft.Llilum.STM32F401.Device::get_BootstrapStack#21117) ==> 12 bytes
Microsoft.Llilum.STM32F401.Drivers.ContextSwitchTimer::GetTicksForQuantumValue (Microsoft.Llilum.STM32F401.Drivers.ContextSwitchTimer::GetTicksForQuantumValue#21169) ==> 12 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeObjectSize (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeObjectSize#6046) ==> 12 bytes
Microsoft.Zelig.Runtime.Device::get_BootstrapStack (Microsoft.Zelig.Runtime.Device::get_BootstrapStack#5491) ==> 12 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::NotifyNewObject (Microsoft.Zelig.Runtime.MarkAndSweepCollector::NotifyNewObject#5228) ==> 12 bytes
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetMode (Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetMode#6394) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ProgramCounter (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ProgramCounter#6986) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::Breakpoint (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::Breakpoint#3976) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSystemHandler (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSystemHandler#3961) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ProgramCounter (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ProgramCounter#6889) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreFaultsDisabled (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreFaultsDisabled#3861) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::Breakpoint (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::Breakpoint#3863) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ProgramCounter (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ProgramCounter#6928) ==> 12 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::InitializeProcessor (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::InitializeProcessor#6364) ==> 12 bytes
System.Globalization.CultureInfo::.ctor (System.Globalization.CultureInfo::.ctor#11022) ==> 12 bytes
System.Object::Equals (System.Object::Equals#4573) ==> 12 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::Write (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::Write#20360) ==> 10 bytes
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeArraySize (Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeArraySize#6047) ==> 10 bytes
Microsoft.Zelig.Runtime.MemoryManager::InitializeMemoryManager (Microsoft.Zelig.Runtime.MemoryManager::InitializeMemoryManager#5945) ==> 10 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::Equals#16795) ==> 10 bytes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParametersDefinition (Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParametersDefinition#16221) ==> 10 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::Equals (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::Equals#16861) ==> 10 bytes
System.Char::ToString (System.Char::ToString#2254) ==> 10 bytes
Windows.Devices.Gpio.GpioPin::.ctor (Windows.Devices.Gpio.GpioPin::.ctor#20002) ==> 10 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::CauseInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::CauseInterrupt#20523) ==> 8 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::GetPerformanceCounterFrequency (Microsoft.CortexM0OnCMSISCore.Peripherals::GetPerformanceCounterFrequency#20528) ==> 8 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::ReadPerformanceCounter (Microsoft.CortexM0OnCMSISCore.Peripherals::ReadPerformanceCounter#20529) ==> 8 bytes
Microsoft.CortexM0OnCMSISCore.Peripherals::WaitForInterrupt (Microsoft.CortexM0OnCMSISCore.Peripherals::WaitForInterrupt#20525) ==> 8 bytes
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::ProcessGpioInterrupt (Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::ProcessGpioInterrupt#20368) ==> 8 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeAfterStaticConstructors (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeAfterStaticConstructors#20630) ==> 8 bytes
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeBeforeStaticConstructors (Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeBeforeStaticConstructors#20629) ==> 8 bytes
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::LLOS_Die (Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::LLOS_Die#20722) ==> 8 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::InitializationComplete (Microsoft.Zelig.Runtime.LinearMemoryManager::InitializationComplete#5701) ==> 8 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::InitializeMemoryManager (Microsoft.Zelig.Runtime.LinearMemoryManager::InitializeMemoryManager#5700) ==> 8 bytes
Microsoft.Zelig.Runtime.MemorySegment::get_FirstBlock (Microsoft.Zelig.Runtime.MemorySegment::get_FirstBlock#5664) ==> 8 bytes
Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit (Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit#5892) ==> 8 bytes
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::RegisterWait (Microsoft.Zelig.Runtime.Synchronization.WaitableObject::RegisterWait#6069) ==> 8 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler_Zelig#3903) ==> 8 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler_Zelig#3901) ==> 8 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler_Zelig (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler_Zelig#3902) ==> 8 bytes
Microsoft.Zelig.Runtime.ThreadManager::Reschedule (Microsoft.Zelig.Runtime.ThreadManager::Reschedule#3776) ==> 8 bytes
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::GetHashCode (Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::GetHashCode#16862) ==> 8 bytes
Microsoft.Zelig.Runtime.TypeSystemManager::InitializeTypeSystemManager (Microsoft.Zelig.Runtime.TypeSystemManager::InitializeTypeSystemManager#5992) ==> 8 bytes
System.Char::GetHashCode (System.Char::GetHashCode#2244) ==> 8 bytes
System.Int16::GetHashCode (System.Int16::GetHashCode#2488) ==> 8 bytes
System.Number.ToStringFormatState::Advance (System.Number.ToStringFormatState::Advance#12355) ==> 8 bytes
System.Object::GetHashCode (System.Object::GetHashCode#4574) ==> 8 bytes
System.Reflection.MemberInfo::GetHashCode (System.Reflection.MemberInfo::GetHashCode#10236) ==> 8 bytes
System.Reflection.MemberInfo::get_MetadataTokenInternal (System.Reflection.MemberInfo::get_MetadataTokenInternal#10244) ==> 8 bytes
System.RuntimeType::ToString (System.RuntimeType::ToString#2847) ==> 8 bytes
System.UIntPtr::GetHashCode (System.UIntPtr::GetHashCode#3421) ==> 8 bytes
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::get_InvalidPin (Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::get_InvalidPin#20452) ==> 6 bytes
Microsoft.Llilum.STM32F401.Board::get_NCPin (Microsoft.Llilum.STM32F401.Board::get_NCPin#21108) ==> 6 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForObjectsSize (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForObjectsSize#5194) ==> 6 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForObjectsSize (Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForObjectsSize#5224) ==> 6 bytes
Microsoft.Zelig.Runtime.SchedulerTime::op_Subtraction (Microsoft.Zelig.Runtime.SchedulerTime::op_Subtraction#5908) ==> 6 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfMarkPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfMarkPhase#6759) ==> 6 bytes
Microsoft.Zelig.Runtime.SyncBlock::Prepare (Microsoft.Zelig.Runtime.SyncBlock::Prepare#5576) ==> 6 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_DefaultStackSize (Microsoft.Zelig.Runtime.ThreadManager::get_DefaultStackSize#3756) ==> 6 bytes
System.Delegate::.ctor (System.Delegate::.ctor#5674) ==> 6 bytes
System.Text.StringBuilder::ReplaceString (System.Text.StringBuilder::ReplaceString#9912) ==> 6 bytes
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::PinToIndex (Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::PinToIndex#20451) ==> 4 bytes
Microsoft.Llilum.STM32F401.Board::GetSystemTimerIRQNumber (Microsoft.Llilum.STM32F401.Board::GetSystemTimerIRQNumber#21112) ==> 4 bytes
Microsoft.Llilum.STM32F401.Board::PinToIndex (Microsoft.Llilum.STM32F401.Board::PinToIndex#21109) ==> 4 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_FastInterruptThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_FastInterruptThread#5988) ==> 4 bytes
Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_InterruptThread (Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_InterruptThread#5987) ==> 4 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld#5197) ==> 4 bytes
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForArraysSize (Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForArraysSize#5195) ==> 4 bytes
Microsoft.Zelig.Runtime.LinearMemoryManager::RefersToMemory (Microsoft.Zelig.Runtime.LinearMemoryManager::RefersToMemory#5704) ==> 4 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForArraysSize (Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForArraysSize#5225) ==> 4 bytes
Microsoft.Zelig.Runtime.MemoryFreeBlock::ToObjectHeader (Microsoft.Zelig.Runtime.MemoryFreeBlock::ToObjectHeader#5595) ==> 4 bytes
Microsoft.Zelig.Runtime.Processor::AreFaultsDisabled (Microsoft.Zelig.Runtime.Processor::AreFaultsDisabled#5529) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_BaseStackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_BaseStackPointer#6983) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ExcReturn (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ExcReturn#6984) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_StackPointer#6981) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::set_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::set_StackPointer#6982) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_BaseStackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_BaseStackPointer#6886) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ExcReturn (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ExcReturn#6887) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_StackPointer#6884) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::set_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::set_StackPointer#6885) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_BaseStackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_BaseStackPointer#6923) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ExcReturn (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ExcReturn#6924) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_StackPointer#6921) ==> 4 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::set_StackPointer (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::set_StackPointer#6922) ==> 4 bytes
Microsoft.Zelig.Runtime.ThreadManager::get_CurrentThread (Microsoft.Zelig.Runtime.ThreadManager::get_CurrentThread#3796) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_ContainedType (Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_ContainedType#16767) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsDelayedType (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsDelayedType#16804) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsOpenType (Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsOpenType#16803) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::get_UnderlyingType (Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::get_UnderlyingType#16840) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_ContainedType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_ContainedType#16884) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_UnderlyingType (Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_UnderlyingType#16885) ==> 4 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_ContainedType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_ContainedType#17037) ==> 4 bytes
System.Byte::GetHashCode (System.Byte::GetHashCode#2178) ==> 4 bytes
System.Delegate::GetHashCode (System.Delegate::GetHashCode#5676) ==> 4 bytes
System.Delegate::GetTarget (System.Delegate::GetTarget#5681) ==> 4 bytes
System.Exception::get_Message (System.Exception::get_Message#8388) ==> 4 bytes
System.Int32::GetHashCode (System.Int32::GetHashCode#2562) ==> 4 bytes
System.RuntimeType::get_TypeHandle (System.RuntimeType::get_TypeHandle#2834) ==> 4 bytes
System.UInt32::GetHashCode (System.UInt32::GetHashCode#3286) ==> 4 bytes
Microsoft.CortexM0OnCMSISCore.Storage::InitializeStorage (Microsoft.CortexM0OnCMSISCore.Storage::InitializeStorage#20536) ==> 2 bytes
Microsoft.CortexM0OnMBED.Memory::InitializeMemory (Microsoft.CortexM0OnMBED.Memory::InitializeMemory#20243) ==> 2 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ClearInterrupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ClearInterrupt#20659) ==> 2 bytes
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ProcessInterrupt (Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ProcessInterrupt#20657) ==> 2 bytes
Microsoft.Zelig.Runtime.Device::ProcessLog (Microsoft.Zelig.Runtime.Device::ProcessLog#5484) ==> 2 bytes
Microsoft.Zelig.Runtime.Device::ProcessLog (Microsoft.Zelig.Runtime.Device::ProcessLog#5485) ==> 2 bytes
Microsoft.Zelig.Runtime.Device::ProcessLog (Microsoft.Zelig.Runtime.Device::ProcessLog#5486) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfMarkPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfMarkPhase#7021) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfSweepPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfSweepPhase#7024) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Mark (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Mark#7020) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfMarkPhase (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfMarkPhase#7019) ==> 2 bytes
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Sweep (Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Sweep#7023) ==> 2 bytes
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::Initialize (Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::Initialize#5286) ==> 2 bytes
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::RestartExecution (Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::RestartExecution#5293) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_StartOfForwardWalk#27530) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_StartOfForwardWalk#21923) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_StartOfForwardWalk#21754) ==> 2 bytes
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::get_StartOfForwardWalk (Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::get_StartOfForwardWalk#21588) ==> 2 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::DumpFreeBlockTracking (Microsoft.Zelig.Runtime.MarkAndSweepCollector::DumpFreeBlockTracking#5243) ==> 2 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ResetFreeBlockTracking (Microsoft.Zelig.Runtime.MarkAndSweepCollector::ResetFreeBlockTracking#5241) ==> 2 bytes
Microsoft.Zelig.Runtime.MarkAndSweepCollector::TrackFreeBlock (Microsoft.Zelig.Runtime.MarkAndSweepCollector::TrackFreeBlock#5242) ==> 2 bytes
Microsoft.Zelig.Runtime.MemoryManager::InitializationComplete (Microsoft.Zelig.Runtime.MemoryManager::InitializationComplete#5946) ==> 2 bytes
Microsoft.Zelig.Runtime.SchedulerTime::FromUnits (Microsoft.Zelig.Runtime.SchedulerTime::FromUnits#5922) ==> 2 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfMarkPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfMarkPhase#6761) ==> 2 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfSweepPhase (Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfSweepPhase#6764) ==> 2 bytes
Microsoft.Zelig.Runtime.SyncBlock.Handler::Sweep (Microsoft.Zelig.Runtime.SyncBlock.Handler::Sweep#6763) ==> 2 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue#3956) ==> 2 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue#3954) ==> 2 bytes
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::AnyInterrupt (Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::AnyInterrupt#6945) ==> 2 bytes
Microsoft.Zelig.Runtime.ThreadManager::Activate (Microsoft.Zelig.Runtime.ThreadManager::Activate#3764) ==> 2 bytes
Microsoft.Zelig.Runtime.ThreadManager::CleanupBootstrapThreadIfNeeded (Microsoft.Zelig.Runtime.ThreadManager::CleanupBootstrapThreadIfNeeded#3759) ==> 2 bytes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_UnderlyingType (Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_UnderlyingType#17038) ==> 2 bytes
System.DateTime::IsLeapYear (System.DateTime::IsLeapYear#8012) ==> 2 bytes
System.GC::KeepAlive (System.GC::KeepAlive#4542) ==> 2 bytes
System.Object::Finalize (System.Object::Finalize#2776) ==> 2 bytes
System.RuntimeType::get_UnderlyingSystemType (System.RuntimeType::get_UnderlyingSystemType#2837) ==> 2 bytes
System.String::ToString (System.String::ToString#3114) ==> 2 bytes


################################################
########### CROSS CHECK INFORMATION ############
################################################


============================================================================================
All types in llilum type system before LLVM code gen

Total types: 569

System.Array
System.Attribute
System.Boolean
System.Byte
System.Char
System.Delegate
System.Double
System.Enum
System.Int16
System.Int32
System.Int64
System.IntPtr
System.MulticastDelegate
System.ValueType
System.Object
System.RuntimeType
System.RuntimeTypeHandle
System.SByte
System.Single
System.String
System.UInt16
System.UInt32
System.UInt64
System.UIntPtr
System.Void
System.Threading.Thread
Microsoft.Zelig.Runtime.ObjectHeader
Microsoft.Zelig.Runtime.LandingPadResult
Microsoft.Zelig.Runtime.GarbageCollectionManager
Microsoft.Zelig.Runtime.ThreadManager
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M
Microsoft.Zelig.Runtime.HardwareExceptionHandlerAttribute
Microsoft.Zelig.Runtime.TypeSystem.CodePointer
Microsoft.Zelig.Runtime.TypeSystem.GlobalRoot
Microsoft.Zelig.Runtime.TypeSystem.VTable
Managed.Program
Microsoft.Zelig.Runtime.Bootstrap
Microsoft.Zelig.Runtime.GpioProvider
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector
Microsoft.Zelig.Runtime.MarkAndSweepCollector
Microsoft.Zelig.Runtime.HardwareProvider
Microsoft.Zelig.Runtime.AbstractMethodWrapper
Microsoft.Zelig.Runtime.Finalizer
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler
Microsoft.Zelig.Runtime.Storage
Microsoft.Zelig.Runtime.Device
Microsoft.Zelig.Runtime.Memory
Microsoft.Zelig.Runtime.Peripherals
Microsoft.Zelig.Runtime.Processor
Microsoft.Zelig.Runtime.BrickTable
Microsoft.Zelig.Runtime.SyncBlockTable
Microsoft.Zelig.Runtime.SyncBlock
Microsoft.Zelig.Runtime.MemoryFreeBlock
Microsoft.Zelig.Runtime.MemorySegment
Microsoft.Zelig.Runtime.LinearMemoryManager
Microsoft.Zelig.Runtime.BugCheck
Microsoft.Zelig.Runtime.KernelPerformanceCounter
Microsoft.Zelig.Runtime.Configuration
Microsoft.Zelig.Runtime.SchedulerTimeSpan
Microsoft.Zelig.Runtime.SchedulerTime
Microsoft.Zelig.Runtime.MemoryManager
Microsoft.Zelig.Runtime.ARMv7ThreadManager
Microsoft.Zelig.Runtime.TypeSystemManager
Microsoft.Zelig.Runtime.Unwind
Microsoft.Zelig.Runtime.DefaultTypeSystemManager
Microsoft.Zelig.Runtime.Synchronization.YieldLock
Microsoft.Zelig.Runtime.Synchronization.CriticalSection
Microsoft.Zelig.Runtime.Synchronization.WaitableObject
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord
Microsoft.Zelig.Runtime.SmartHandles.YieldLockHolder
Microsoft.Zelig.Runtime.SmartHandles.InterruptState
Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt
Microsoft.Zelig.Runtime.Helpers.BinaryOperations
Microsoft.Zelig.Runtime.Helpers.CompareAndSet
Microsoft.Zelig.Runtime.Helpers.Convert
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation
Microsoft.Zelig.Runtime.Helpers.FloatImplementation
Microsoft.Zelig.Runtime.Helpers.UnaryOperations
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.SmartHandles.InterruptStateARMv6M
System.Threading.EventWaitHandle.EventWaitableObject
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays
Microsoft.Zelig.Runtime.Finalizer.Tracker
Microsoft.Zelig.Runtime.Memory.Range
Microsoft.Zelig.Runtime.Processor.Context
Microsoft.Zelig.Runtime.SyncBlock.Handler
Microsoft.Zelig.Runtime.ObjectHeader.GarbageCollectorFlags
Microsoft.Zelig.Runtime.ObjectHeader.ExtensionKinds
Microsoft.Zelig.Runtime.BugCheck.StopCode
Microsoft.Zelig.Runtime.Unwind.UnwindActions
Microsoft.Zelig.Runtime.Unwind.UnwindReasonCode
Microsoft.Zelig.Runtime.Unwind.DwarfEncoding
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.IRQn_Type
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.ISR_NUMBER
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.SVC_Code
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.StandardFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.SVC_Code
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context.SoftwareFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context.HardwareFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context.RegistersOnStack
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.SoftwareFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.SoftwareFloatingPointFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.HardwareFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackFullFPContext
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.SoftwareFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.HardwareFrame
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack
System.Activator
System.ArgumentException
System.ArgumentNullException
System.ArgumentOutOfRangeException
System.ArithmeticException
System.Buffer
System.DateTime
System.DateTimeKind
System.DayOfWeek
System.DivideByZeroException
System.Environment
System.Exception
System.FormatException
System.GC
System.DateTimeFormat
System.IndexOutOfRangeException
System.InvalidCastException
System.InvalidOperationException
System.MarshalByRefObject
System.Math
System.NotImplementedException
System.NotSupportedException
System.NullReferenceException
System.Number
System.ObjectDisposedException
System.OutOfMemoryException
System.OverflowException
System.SystemException
System.TimeoutException
System.Type
System.Threading.AutoResetEvent
System.Threading.EventResetMode
System.Threading.EventWaitHandle
System.Threading.Interlocked
System.Threading.ManualResetEvent
System.Threading.Monitor
System.Threading.ThreadPriority
System.Threading.ThreadStart
System.Threading.ThreadState
System.Threading.ThreadStateException
System.Threading.WaitHandle
System.Text.StringBuilder
System.Reflection.MemberInfo
System.Globalization.Calendar
System.Globalization.CultureInfo
System.Globalization.CultureTableRecord
System.Globalization.DateTimeFormatInfo
System.Globalization.GregorianCalendar
System.Globalization.GregorianCalendarTypes
System.Globalization.NumberFormatInfo
System.Globalization.TextInfo
System.Runtime.ConstrainedExecution.CriticalFinalizerObject
System.Runtime.CompilerServices.RuntimeHelpers
System.Collections.BitArray
System.Exception.ExceptionMessageKind
System.Number.ToStringFormatState
Microsoft.Zelig.AssertionViolationException
Microsoft.Zelig.AddressMath
Microsoft.Zelig.ArrayUtility
Microsoft.Zelig.CHECKS
Microsoft.Zelig.Runtime.HardwareException
Microsoft.Zelig.Runtime.MemoryAttributes
Microsoft.Zelig.Runtime.MemoryUsage
System.Diagnostics.Stopwatch
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation
Microsoft.Zelig.Runtime.TypeSystem.CodeMap
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation
Microsoft.Zelig.Runtime.TypeSystem.InstanceFieldRepresentation
Microsoft.Zelig.Runtime.TypeSystem.StaticFieldRepresentation
Microsoft.Zelig.Runtime.TypeSystem.GCInfo
Microsoft.Zelig.Runtime.TypeSystem.GenericParameterDefinition
Microsoft.Zelig.Runtime.TypeSystem.ConstructorMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.FinalizerMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.FinalMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.InstanceMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.NonVirtualMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.StaticConstructorMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.StaticMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.VirtualMethodRepresentation
Microsoft.Zelig.Runtime.TypeSystem.AbstractReferenceTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.BoxedValueTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.ConcreteReferenceTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.InterfaceTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.PinnedPointerTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.ReferenceTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.ScalarTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.UnmanagedPointerTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.ValueTypeRepresentation
Microsoft.Zelig.Runtime.TypeSystem.CodeMap.ReverseIndex
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet.EquivalenceDelegation
Microsoft.Zelig.Runtime.TypeSystem.GCInfo.Kind
Microsoft.Zelig.Runtime.TypeSystem.GCInfo.Pointer
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.Attributes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.Attributes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.BuiltInTypes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.BuildTimeAttributes
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext
Microsoft.Zelig.Runtime.TypeSystem.VTable.Shape
Microsoft.Zelig.Runtime.TypeSystem.VTable.InterfaceMap
Microsoft.Llilum.Devices.Gpio.ValueChangedHandler
Microsoft.Llilum.Devices.Gpio.GpioPin
Microsoft.Llilum.Devices.Gpio.PinDirection
Microsoft.Llilum.Devices.Gpio.PinMode
Microsoft.Llilum.Devices.Gpio.PinEdge
Windows.Devices.Gpio.DefaultPinProvider
Windows.Devices.Gpio.GpioController
Windows.Devices.Gpio.GpioSharingMode
Windows.Devices.Gpio.GpioOpenStatus
Windows.Devices.Gpio.GpioPinDriveMode
Windows.Devices.Gpio.GpioPinValue
Windows.Devices.Gpio.GpioPin
Windows.Devices.Gpio.GpioPinValueChangedEventArgs
Windows.Devices.Gpio.Provider.GpioDriveMode
Microsoft.CortexM4OnMBED.Board
Microsoft.CortexM4OnMBED.Device
Microsoft.CortexM4OnMBED.Memory
Microsoft.CortexM4OnMBED.Processor
Microsoft.CortexM4OnMBED.Storage
Microsoft.CortexM4OnMBED.GarbageCollectionManager
Microsoft.CortexM4OnMBED.MemoryManager
Microsoft.CortexM4OnMBED.ThreadManager
Microsoft.CortexM4OnMBED.TypeSystemManager
Microsoft.CortexM4OnMBED.HardwareModel.HardwareProvider
Microsoft.CortexM4OnMBED.HardwareModel.GpioProvider
Microsoft.CortexM4OnMBED.Drivers.InterruptController
Microsoft.CortexM4OnMBED.Drivers.SystemTimer
Microsoft.CortexM4OnMBED.Processor.Context
Microsoft.CortexM3OnMBED.Board
Microsoft.CortexM3OnMBED.Device
Microsoft.CortexM3OnMBED.Memory
Microsoft.CortexM3OnMBED.Peripherals
Microsoft.CortexM3OnMBED.Storage
Microsoft.CortexM3OnMBED.GarbageCollectionManager
Microsoft.CortexM3OnMBED.MemoryManager
Microsoft.CortexM3OnMBED.ThreadManager
Microsoft.CortexM3OnMBED.TypeSystemManager
Microsoft.CortexM3OnMBED.HardwareModel.HardwareProvider
Microsoft.CortexM3OnMBED.HardwareModel.GpioProvider
Microsoft.CortexM3OnMBED.Drivers.InterruptController
Microsoft.CortexM3OnMBED.Drivers.SystemTimer
Microsoft.CortexM0OnMBED.Board
Microsoft.CortexM0OnMBED.Device
Microsoft.CortexM0OnMBED.Memory
Microsoft.CortexM0OnMBED.Peripherals
Microsoft.CortexM0OnMBED.Storage
Microsoft.CortexM0OnMBED.GarbageCollectionManager
Microsoft.CortexM0OnMBED.MemoryManager
Microsoft.CortexM0OnMBED.TypeSystemManager
Microsoft.CortexM0OnMBED.Drivers.InterruptController
Microsoft.CortexM0OnMBED.Drivers.SystemTimer
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider
Microsoft.CortexM0OnMBED.HardwareModel.GpioProvider
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer
Microsoft.CortexM0OnCMSISCore.Board
Microsoft.CortexM0OnCMSISCore.Device
Microsoft.CortexM0OnCMSISCore.HardwareProvider
Microsoft.CortexM0OnCMSISCore.Memory
Microsoft.CortexM0OnCMSISCore.Peripherals
Microsoft.CortexM0OnCMSISCore.Storage
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager
Microsoft.CortexM0OnCMSISCore.MemoryManager
Microsoft.CortexM0OnCMSISCore.TypeSystemManager
Microsoft.CortexM0OnCMSISCore.Drivers.InterruptController
Microsoft.DeviceModels.Chipset.CortexM0.Board
Microsoft.DeviceModels.Chipset.CortexM0.Drivers.InterruptController
Microsoft.DeviceModels.Chipset.CortexM.Board
Microsoft.DeviceModels.Chipset.CortexM.NVIC
Microsoft.DeviceModels.Chipset.CortexM.SysTick
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptSettings
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptPriority
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors
Microsoft.Zelig.LlilumOSAbstraction.API.RuntimeMemory
Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinResistor
Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinEdge
Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinDirection
Microsoft.Zelig.LlilumOSAbstraction.API.IO.LLOS_GPIO_InterruptCallback
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio
Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext
Microsoft.Zelig.LlilumOSAbstraction.HAL.Clock
Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerCallback
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer
Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerContext
Microsoft.Zelig.Support.mbed.Utilities
Microsoft.CortexM3OnCMSISCore.ThreadManager
Microsoft.DeviceModels.Chipset.CortexM3.Runtime.ThreadManager
Microsoft.DeviceModels.Chipset.CortexM3.Drivers.ContextSwitchTimer
Microsoft.CortexM4OnCMSISCore.Processor
Microsoft.CortexM4OnCMSISCore.Processor.Context
Microsoft.DeviceModels.Chipset.CortexM4.Processor
Microsoft.DeviceModels.Chipset.CortexM4.Drivers.ContextSwitchTimer
Microsoft.Llilum.STM32F401.Board
Microsoft.Llilum.STM32F401.Device
Microsoft.Llilum.STM32F401.Peripherals
Microsoft.Llilum.STM32F401.Processor
Microsoft.Llilum.STM32F401.GarbageCollectionManager
Microsoft.Llilum.STM32F401.ThreadManager
Microsoft.Llilum.STM32F401.HardwareModel.HardwareProviders.GpioProvider
Microsoft.Llilum.STM32F401.Drivers.ContextSwitchTimer
Microsoft.Llilum.STM32F401.Drivers.SystemTimer
Microsoft.Llilum.STM32F401.Drivers.InterruptController
Microsoft.Llilum.STM32F401.Processor.Context
System.IFormatProvider
System.IFormattable
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkAndSweepStackWalker
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>
Windows.Devices.Gpio.Provider.IGpioPinProvider
Windows.Foundation.TypedEventHandler`2<Windows.Devices.Gpio.GpioPin,Windows.Devices.Gpio.GpioPinValueChangedEventArgs>
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>
System.Collections.Generic.IEqualityComparer`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>
System.ICustomFormatter


============================================================================================
All methods in llilum type system before LLVM code gen

Total methods: 1467

System.Array::Copy(System.Array,System.Array,int)
System.Array::Copy(System.Array,int,System.Array,int,int,bool)
System.Array::Clear(System.Array,int,int)
System.Array::get_Length()
System.Array::GetLowerBound(int)
System.Array::GetDataPointer()
System.Array::GetPointerToElement(uint)
System.Array::GetEndDataPointer()
System.Array::SetLength(uint)
System.Array::get_ElementSize()
System.Attribute::.ctor()
System.Byte::Equals(object)
System.Byte::GetHashCode()
System.Byte::ToString()
System.Byte::ToString(string,System.IFormatProvider)
System.Char::GetHashCode()
System.Char::Equals(object)
System.Char::ToString()
System.Char::ToString(char)
System.Delegate::Equals(object)
System.Delegate::GetHashCode()
System.Delegate::get_Target()
System.Delegate::op_Equality(System.Delegate,System.Delegate)
System.Delegate::GetTarget()
System.Delegate::.ctor()
System.Delegate::.ctor(object,Microsoft.Zelig.Runtime.TypeSystem.CodePointer)
System.Delegate::InnerGetCodePointer()
System.Delegate::InternalEqualTypes(object,object)
System.Double::ToString()
System.Double::ToString(string,System.IFormatProvider)
System.Enum::ToString(string,System.IFormatProvider)
System.Enum::ToString(string)
System.Int16::Equals(object)
System.Int16::GetHashCode()
System.Int16::ToString()
System.Int16::ToString(string,System.IFormatProvider)
System.Int16::ToString(string,System.Globalization.NumberFormatInfo)
System.Int32::Equals(object)
System.Int32::GetHashCode()
System.Int32::ToString()
System.Int32::ToString(System.IFormatProvider)
System.Int32::ToString(string,System.IFormatProvider)
System.Int64::ToString(string,System.IFormatProvider)
System.IntPtr::GetHashCode()
System.IntPtr::ToPointer()
System.MulticastDelegate::Equals(object)
System.MulticastDelegate::GetHashCode()
System.MulticastDelegate::.ctor(object,Microsoft.Zelig.Runtime.TypeSystem.CodePointer)
System.MulticastDelegate::GetTarget()
System.Object::.ctor()
System.Object::ToString()
System.Object::Equals(object)
System.Object::Equals(object,object)
System.Object::GetHashCode()
System.Object::GetType()
System.Object::Finalize()
System.Object::GetFieldPointer()
System.RuntimeType::get_TypeHandle()
System.RuntimeType::get_UnderlyingSystemType()
System.RuntimeType::get_FullName()
System.RuntimeType::ToString()
System.RuntimeType::get_Name()
System.RuntimeTypeHandle::ToString()
System.SByte::ToString()
System.SByte::ToString(string,System.IFormatProvider)
System.SByte::ToString(string,System.Globalization.NumberFormatInfo)
System.Single::ToString(string,System.IFormatProvider)
System.String::EqualsHelper(string,string)
System.String::Equals(object)
System.String::Equals(string,string)
System.String::op_Equality(string,string)
System.String::get_Chars(int)
System.String::ToCharArray(int,int)
System.String::GetHashCode()
System.String::get_Length()
System.String::get_ArrayLength()
System.String::get_Capacity()
System.String::FastAllocateString(int)
System.String::FillStringChecked(string,int,string)
System.String::.ctor(char[],int,int)
System.String::.ctor(char,int)
System.String::ToString()
System.String::Format(string,object[])
System.String::Format(System.IFormatProvider,string,object[])
System.String::InternalCopy(string)
System.String::Concat(string,string,string)
System.String::AppendInPlace(char,int)
System.String::AppendInPlace(char,int,int)
System.String::AppendInPlace(string,int)
System.String::AppendInPlace(char[],int,int,int)
System.String::GetStringForStringBuilder(string,int)
System.String::GetStringForStringBuilder(string,int,int,int)
System.String::ClearPostNullChar()
System.String::SetLength(int)
System.String::.cctor()
System.String::GetDataPointer()
System.UInt16::ToString()
System.UInt16::ToString(string,System.IFormatProvider)
System.UInt32::Equals(object)
System.UInt32::GetHashCode()
System.UInt32::ToString()
System.UInt32::ToString(System.IFormatProvider)
System.UInt32::ToString(string,System.IFormatProvider)
System.UInt64::CompareTo(ulong)
System.UInt64::ToString(string,System.IFormatProvider)
System.UIntPtr::.ctor(ulong)
System.UIntPtr::Equals(object)
System.UIntPtr::GetHashCode()
System.UIntPtr::ToUInt32()
System.UIntPtr::ToUInt64()
System.UIntPtr::op_Explicit(uint)
System.UIntPtr::op_Explicit(ulong)
System.UIntPtr::op_Explicit(System.UIntPtr)
System.UIntPtr::op_Explicit(void*)
System.UIntPtr::op_Explicit(System.UIntPtr)
System.UIntPtr::ToPointer()
System.Threading.Thread::.ctor(System.Threading.ThreadStart)
System.Threading.Thread::Start()
System.Threading.Thread::get_Priority()
System.Threading.Thread::set_Priority(System.Threading.ThreadPriority)
System.Threading.Thread::get_IsAlive()
System.Threading.Thread::Sleep(int)
System.Threading.Thread::get_CurrentThread()
System.Threading.Thread::get_CurrentCulture()
System.Threading.Thread::.ctor(System.Threading.ThreadStart,uint[])
System.Threading.Thread::SetupForExceptionHandling(uint)
System.Threading.Thread::Entrypoint()
System.Threading.Thread::Yield()
System.Threading.Thread::RegisterWait(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
System.Threading.Thread::UnregisterWait(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
System.Threading.Thread::GetFirstTimeout()
System.Threading.Thread::ProcessWaitExpiration(Microsoft.Zelig.Runtime.SchedulerTime)
System.Threading.Thread::Wakeup()
System.Threading.Thread::AcquiredWaitableObject(Microsoft.Zelig.Runtime.Synchronization.WaitableObject)
System.Threading.Thread::ReleasedWaitableObject(Microsoft.Zelig.Runtime.Synchronization.WaitableObject)
System.Threading.Thread::Stop()
System.Threading.Thread::Detach()
System.Threading.Thread::IsAtSafePoint(Microsoft.Zelig.Runtime.Processor.Context)
System.Threading.Thread::SwapCurrentThreadUnderInterrupt(System.Threading.Thread)
System.Threading.Thread::GetCurrentException()
System.Threading.Thread::ThrowNullException()
System.Threading.Thread::ThrowIndexOutOfRangeException()
System.Threading.Thread::ThrowOverflowException()
System.Threading.Thread::get_SwappedOutContext()
System.Threading.Thread::get_ThrowContext()
System.Threading.Thread::get_RegistrationLink()
System.Threading.Thread::get_SchedulingLink()
System.Threading.Thread::get_State()
System.Threading.Thread::set_State(System.Threading.ThreadState)
System.Threading.Thread::get_IsWaiting()
System.Threading.Thread::get_CurrentException()
System.Threading.Thread::set_CurrentException(System.Exception)
System.Threading.Thread::get_ActiveTime()
System.Threading.Thread::set_CurrentThread(System.Threading.Thread)
Microsoft.Zelig.Runtime.ObjectHeader::Pack()
Microsoft.Zelig.Runtime.ObjectHeader::Unpack(object)
Microsoft.Zelig.Runtime.ObjectHeader::GetNextObjectPointer()
Microsoft.Zelig.Runtime.ObjectHeader::get_HeaderSize()
Microsoft.Zelig.Runtime.ObjectHeader::get_ObjectSize()
Microsoft.Zelig.Runtime.ObjectHeader::get_TotalSize()
Microsoft.Zelig.Runtime.ObjectHeader::ComputeObjectSize(Microsoft.Zelig.Runtime.TypeSystem.VTable,uint)
Microsoft.Zelig.Runtime.ObjectHeader::InsertPlug(uint)
Microsoft.Zelig.Runtime.ObjectHeader::InitializeAllocatedRawBytes(uint)
Microsoft.Zelig.Runtime.ObjectHeader::UpdateExtension(Microsoft.Zelig.Runtime.ObjectHeader.ExtensionKinds,int)
Microsoft.Zelig.Runtime.ObjectHeader::get_GarbageCollectorState()
Microsoft.Zelig.Runtime.ObjectHeader::set_GarbageCollectorState(Microsoft.Zelig.Runtime.ObjectHeader.GarbageCollectorFlags)
Microsoft.Zelig.Runtime.ObjectHeader::get_GarbageCollectorStateWithoutMutableBits()
Microsoft.Zelig.Runtime.ObjectHeader::get_ExtensionKind()
Microsoft.Zelig.Runtime.ObjectHeader::get_IsImmutable()
Microsoft.Zelig.Runtime.ObjectHeader::get_Payload()
Microsoft.Zelig.Runtime.ObjectHeader::get_AllocatedRawBytesSize()
Microsoft.Zelig.Runtime.ObjectHeader::set_AllocatedRawBytesSize(uint)
Microsoft.Zelig.Runtime.GarbageCollectionManager::InitializeGarbageCollectionManager()
Microsoft.Zelig.Runtime.GarbageCollectionManager::NotifyNewObject(System.UIntPtr,uint)
Microsoft.Zelig.Runtime.GarbageCollectionManager::FindObject(System.UIntPtr)
Microsoft.Zelig.Runtime.GarbageCollectionManager::Collect()
Microsoft.Zelig.Runtime.GarbageCollectionManager::ThrowOutOfMemory(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.GarbageCollectionManager::IsMarked(object)
Microsoft.Zelig.Runtime.GarbageCollectionManager::ExtendMarking(object)
Microsoft.Zelig.Runtime.GarbageCollectionManager::FindExtensionHandler(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.GarbageCollectionManager::get_Instance()
Microsoft.Zelig.Runtime.GarbageCollectionManager::get_ExtensionHandlers()
Microsoft.Zelig.Runtime.ThreadManager::get_DefaultStackSize()
Microsoft.Zelig.Runtime.ThreadManager::CleanupBootstrapThreadIfNeeded()
Microsoft.Zelig.Runtime.ThreadManager::InitializeBeforeStaticConstructors()
Microsoft.Zelig.Runtime.ThreadManager::InitializeAfterStaticConstructors(uint[])
Microsoft.Zelig.Runtime.ThreadManager::Activate()
Microsoft.Zelig.Runtime.ThreadManager::StartThreads()
Microsoft.Zelig.Runtime.ThreadManager::RegisterThread(System.Threading.Thread)
Microsoft.Zelig.Runtime.ThreadManager::AddThread(System.Threading.Thread)
Microsoft.Zelig.Runtime.ThreadManager::RemoveThread(System.Threading.Thread)
Microsoft.Zelig.Runtime.ThreadManager::RetireThread(System.Threading.Thread)
Microsoft.Zelig.Runtime.ThreadManager::Yield()
Microsoft.Zelig.Runtime.ThreadManager::SwitchToWait(Microsoft.Zelig.Runtime.Synchronization.WaitingRecord)
Microsoft.Zelig.Runtime.ThreadManager::Wakeup(System.Threading.Thread)
Microsoft.Zelig.Runtime.ThreadManager::TimeQuantumExpired()
Microsoft.Zelig.Runtime.ThreadManager::SetNextQuantumTimerIfNeeded()
Microsoft.Zelig.Runtime.ThreadManager::RescheduleAndRequestContextSwitchIfNeeded(Microsoft.Zelig.Runtime.HardwareException)
Microsoft.Zelig.Runtime.ThreadManager::Reschedule()
Microsoft.Zelig.Runtime.ThreadManager::SelectNextThreadToRun()
Microsoft.Zelig.Runtime.ThreadManager::SetNextWaitTimer(Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.ThreadManager::CancelQuantumTimer()
Microsoft.Zelig.Runtime.ThreadManager::SetNextQuantumTimer()
Microsoft.Zelig.Runtime.ThreadManager::get_InterruptThread()
Microsoft.Zelig.Runtime.ThreadManager::get_FastInterruptThread()
Microsoft.Zelig.Runtime.ThreadManager::InvalidateNextWaitTimer()
Microsoft.Zelig.Runtime.ThreadManager::WaitExpired(Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.ThreadManager::ComputeNextTimeout()
Microsoft.Zelig.Runtime.ThreadManager::Sleep(Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.ThreadManager::InstallInterruptThread()
Microsoft.Zelig.Runtime.ThreadManager::InstallFastInterruptThread()
Microsoft.Zelig.Runtime.ThreadManager::InsertInPriorityOrder(System.Threading.Thread)
Microsoft.Zelig.Runtime.ThreadManager::IdleThread()
Microsoft.Zelig.Runtime.ThreadManager::MainThread()
Microsoft.Zelig.Runtime.ThreadManager::get_Instance()
Microsoft.Zelig.Runtime.ThreadManager::get_CurrentThread()
Microsoft.Zelig.Runtime.ThreadManager::set_CurrentThread(System.Threading.Thread)
Microsoft.Zelig.Runtime.ThreadManager::get_NextThread()
Microsoft.Zelig.Runtime.ThreadManager::get_ShouldContextSwitch()
Microsoft.Zelig.Runtime.ThreadManager::get_StartOfForwardWalkThroughAllThreads()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::InitializeProcessor()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::SetCCR(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSystemHandler(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::RaiseSupervisorCall(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.SVC_Code)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::InitiateContextSwitch()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CompleteContextSwitch()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::SetSystemControlRegister(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::EnableSystemHandler(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.IRQn_Type)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreInterruptsDisabled()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreFaultsDisabled()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::AreAllInterruptsDisabled()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::Breakpoint()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::EnableInterrupts()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::DisableInterrupts()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::DisableInterruptsWithPriorityLevelLowerOrEqualTo(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::VerifyHandlerMode()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::GetBasePriRegister()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::SetBasePriRegister(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::GetMainStackPointerAtReset()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::GetMainStackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::GetProcessStackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::SetProcessStackPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::SetExcReturn(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::WasHardFaultOnVectorTableRead()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsMemFaultAddressValid()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressValid()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::IsBusFaultAddressPrecise()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::DebuggerConnected()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::PointerToStdFrame(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::HardFault_Handler_Zelig(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.StandardFrame&)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.StandardFrame&)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.StandardFrame&)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::MemManage_Handler_Zelig(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UsageFault_Handler_Zelig(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::BusFault_Handler_Zelig(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_DebuggerConnected()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB__get_HFSR()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB__get_CFSR()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB__get_MMFAR()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB__get_BFAR()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__get_CONTROL()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__get_IPSR()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__get_PSP()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__set_PSP(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__get_MSP_ResetValue()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__get_MSP()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__get_BASEPRI()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__set_BASEPRI(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CMSIS_STUB_SCB__get_FAULTMASK()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB_set_CCR(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB_SHCRS_EnableSystemHandler(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB_ICSR_RaiseSystemException(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_RaiseSupervisorCallForLongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_RaiseSupervisorCallForStartThreads()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_RaiseSupervisorCallForRetireThread()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_RaiseSupervisorCallForSnapshotProcessModeRegisters()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SetExcReturn(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_SCB_SCR_SetSystemControlRegister(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_FetchSoftwareFrameSnapshot()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::Breakpoint(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::Nop()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::CUSTOM_STUB_NotifySoftwareFrameSnapshot(void*,int)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M::UpdateFrame(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context.RegistersOnStack&,uint*)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Prologue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes,Microsoft.Zelig.Runtime.HardwareException)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.MethodWrapper::Epilogue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes,Microsoft.Zelig.Runtime.HardwareException)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::InitializeProcessor()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::SetCCR(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSystemHandler(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::RaiseSupervisorCall(Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.SVC_Code)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CompleteContextSwitch()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::SetSystemControlRegister(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::WaitForEvent()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreInterruptsDisabled()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::AreAllInterruptsDisabled()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::Breakpoint()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::DisableInterrupts()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::VerifyHandlerMode()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::GetPriMaskRegister()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::SetPriMaskRegister(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::GetMainStackPointerAtReset()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::GetMainStackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::GetProcessStackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::SetProcessStackPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::SetExcReturn(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::HardFault_Handler_Zelig(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_SCB__get_CONTROL()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_SCB__get_PSP()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_SCB__set_PSP(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_SCB__get_MSP_ResetValue()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_SCB__get_MSP()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_SCB__get_PRIMASK()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_SCB__set_PRIMASK(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_SCB_set_CCR(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_SCB_ICSR_RaiseSystemException(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_RaiseSupervisorCallForLongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_RaiseSupervisorCallForStartThreads()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_RaiseSupervisorCallForRetireThread()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_RaiseSupervisorCallForSnapshotProcessModeRegisters()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_SetExcReturn(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_SCB_SCR_SetSystemControlRegister(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CMSIS_STUB_POWER_WaitForEvent()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_FetchSoftwareFrameSnapshot()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::Breakpoint(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::CUSTOM_STUB_NotifySoftwareFrameSnapshot(void*,int)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M::UpdateFrame(Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack&,uint*)
Microsoft.Zelig.Runtime.HardwareExceptionHandlerAttribute::.ctor(Microsoft.Zelig.Runtime.HardwareException)
Microsoft.Zelig.Runtime.TypeSystem.GlobalRoot::get_Instance()
Microsoft.Zelig.Runtime.TypeSystem.VTable::SameType(object,object)
Microsoft.Zelig.Runtime.TypeSystem.VTable::Get(object)
Microsoft.Zelig.Runtime.TypeSystem.VTable::GetInterface(object,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystem.VTable::GetFromType(System.Type)
Microsoft.Zelig.Runtime.TypeSystem.VTable::GetFromTypeHandle(System.RuntimeTypeHandle)
Microsoft.Zelig.Runtime.TypeSystem.VTable::CanBeAssignedFrom(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystem.VTable::CanBeAssignedFrom_Slow(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystem.VTable::IsSubclassOf(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystem.VTable::ImplementsInterface(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystem.VTable::get_IsArray()
Microsoft.Zelig.Runtime.TypeSystem.VTable::get_IsValueType()
Microsoft.Zelig.Runtime.TypeSystem.VTable::get_IsInterface()
Microsoft.Zelig.Runtime.TypeSystem.VTable::ToString()
Managed.Program::Main()
Microsoft.Zelig.Runtime.Bootstrap::EntryPoint()
Microsoft.Zelig.Runtime.Bootstrap::Initialization()
Microsoft.Zelig.Runtime.Bootstrap::HardwareInitialization()
Microsoft.Zelig.Runtime.Bootstrap::HeapInitialization()
Microsoft.Zelig.Runtime.Bootstrap::SoftwareInitialization(uint[])
Microsoft.Zelig.Runtime.Bootstrap::HardwareActivation()
Microsoft.Zelig.Runtime.Bootstrap::SoftwareActivation()
Microsoft.Zelig.Runtime.GpioProvider::CreateGpioPin(int)
Microsoft.Zelig.Runtime.GpioProvider::GetGpioPinIRQNumber(int)
Microsoft.Zelig.Runtime.GpioProvider::get_Instance()
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForObjectsSize()
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::get_MarkStackForArraysSize()
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::CreateStackWalker()
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForObjectsSize()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::get_MarkStackForArraysSize()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::CreateStackWalker()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::InitializeGarbageCollectionManager()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::NotifyNewObject(System.UIntPtr,uint)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::FindObject(System.UIntPtr)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::Collect()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ToMilliseconds(long)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ThrowOutOfMemory(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsMarked(object)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ExtendMarking(object)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::IsThisAGoodPlaceToStopTheWorld()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::StartCollection()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::WalkStackFrames()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::MarkGlobalRoot()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::Sweep()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ResetFreeBlockTracking()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::TrackFreeBlock(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::DumpFreeBlockTracking()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitInternalPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObject(System.UIntPtr)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitInternalPointerInline(System.UIntPtr)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectInline(System.UIntPtr)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectFields(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectFieldsInline(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VisitHeapObjectField(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.GCInfo.Pointer&)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::PushObjectReference(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::PushArrayReference(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.MarkAndSweepCollector::ProcessMarkStack()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::RebuildBrickTable()
Microsoft.Zelig.Runtime.MarkAndSweepCollector::VerifyBrickTable()
Microsoft.Zelig.Runtime.HardwareProvider::PinToIndex(int)
Microsoft.Zelig.Runtime.HardwareProvider::get_InvalidPin()
Microsoft.Zelig.Runtime.HardwareProvider::TryReservePins(int[])
Microsoft.Zelig.Runtime.HardwareProvider::get_Instance()
Microsoft.Zelig.Runtime.HardwareProvider::.cctor()
Microsoft.Zelig.Runtime.AbstractMethodWrapper::Prologue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes)
Microsoft.Zelig.Runtime.AbstractMethodWrapper::Prologue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes,Microsoft.Zelig.Runtime.HardwareException)
Microsoft.Zelig.Runtime.AbstractMethodWrapper::Epilogue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes)
Microsoft.Zelig.Runtime.AbstractMethodWrapper::Epilogue(string,string,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.BuildTimeAttributes,Microsoft.Zelig.Runtime.HardwareException)
Microsoft.Zelig.Runtime.Finalizer::Allocate(object)
Microsoft.Zelig.Runtime.Finalizer::.cctor()
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::Initialize()
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::StartOfMarkPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::Mark(Microsoft.Zelig.Runtime.GarbageCollectionManager,object)
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::EndOfMarkPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::StartOfSweepPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::Sweep(Microsoft.Zelig.Runtime.GarbageCollectionManager,object)
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::EndOfSweepPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.GarbageCollectionExtensionHandler::RestartExecution()
Microsoft.Zelig.Runtime.Storage::InitializeStorage()
Microsoft.Zelig.Runtime.Storage::get_Instance()
Microsoft.Zelig.Runtime.Device::ProcessBugCheck(Microsoft.Zelig.Runtime.BugCheck.StopCode)
Microsoft.Zelig.Runtime.Device::ProcessLog(string)
Microsoft.Zelig.Runtime.Device::ProcessLog(string,int)
Microsoft.Zelig.Runtime.Device::ProcessLog(string,int,int)
Microsoft.Zelig.Runtime.Device::get_Instance()
Microsoft.Zelig.Runtime.Device::get_BootstrapStack()
Microsoft.Zelig.Runtime.Device::.cctor()
Microsoft.Zelig.Runtime.Memory::InitializeMemory()
Microsoft.Zelig.Runtime.Memory::Zero(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.Runtime.Memory::Dirty(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.Runtime.Memory::Fill(System.UIntPtr,System.UIntPtr,byte)
Microsoft.Zelig.Runtime.Memory::Fill(byte*,int,byte)
Microsoft.Zelig.Runtime.Memory::get_Instance()
Microsoft.Zelig.Runtime.Memory::get_AvailableMemory()
Microsoft.Zelig.Runtime.Peripherals::Initialize()
Microsoft.Zelig.Runtime.Peripherals::Activate()
Microsoft.Zelig.Runtime.Peripherals::CauseInterrupt()
Microsoft.Zelig.Runtime.Peripherals::WaitForInterrupt()
Microsoft.Zelig.Runtime.Peripherals::ProcessInterrupt()
Microsoft.Zelig.Runtime.Peripherals::ProcessFastInterrupt()
Microsoft.Zelig.Runtime.Peripherals::GetPerformanceCounterFrequency()
Microsoft.Zelig.Runtime.Peripherals::ReadPerformanceCounter()
Microsoft.Zelig.Runtime.Peripherals::get_Instance()
Microsoft.Zelig.Runtime.Processor::InitializeProcessor()
Microsoft.Zelig.Runtime.Processor::AllocateProcessorContext(System.Threading.Thread)
Microsoft.Zelig.Runtime.Processor::AreInterruptsDisabled()
Microsoft.Zelig.Runtime.Processor::AreInterruptsEnabled()
Microsoft.Zelig.Runtime.Processor::AreAllInterruptsDisabled()
Microsoft.Zelig.Runtime.Processor::AreFaultsDisabled()
Microsoft.Zelig.Runtime.Processor::Breakpoint()
Microsoft.Zelig.Runtime.Processor::get_Instance()
Microsoft.Zelig.Runtime.BrickTable::Initialize(uint,uint)
Microsoft.Zelig.Runtime.BrickTable::Reset()
Microsoft.Zelig.Runtime.BrickTable::MarkObject(System.UIntPtr,uint)
Microsoft.Zelig.Runtime.BrickTable::FindLowerBoundForObjectPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.BrickTable::GetPagePointer(uint)
Microsoft.Zelig.Runtime.BrickTable::get_Instance()
Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode(object)
Microsoft.Zelig.Runtime.SyncBlockTable::GetLock(object)
Microsoft.Zelig.Runtime.SyncBlockTable::AssignSyncBlock(object)
Microsoft.Zelig.Runtime.SyncBlockTable::AssignSyncBlockSlow(object)
Microsoft.Zelig.Runtime.SyncBlockTable::GetHashCode(int)
Microsoft.Zelig.Runtime.SyncBlockTable::SetHashCode(int,int)
Microsoft.Zelig.Runtime.SyncBlockTable::GetLock(int)
Microsoft.Zelig.Runtime.SyncBlockTable::ExpandClusters()
Microsoft.Zelig.Runtime.SyncBlockTable::get_Instance()
Microsoft.Zelig.Runtime.SyncBlockTable::get_Lock()
Microsoft.Zelig.Runtime.SyncBlock::.ctor(int)
Microsoft.Zelig.Runtime.SyncBlock::Prepare(object,int)
Microsoft.Zelig.Runtime.SyncBlock::AddToFreeList()
Microsoft.Zelig.Runtime.SyncBlock::ExtractFromFreeList()
Microsoft.Zelig.Runtime.SyncBlock::get_Lock()
Microsoft.Zelig.Runtime.SyncBlock::get_AssociatedObject()
Microsoft.Zelig.Runtime.SyncBlock::get_HashCode()
Microsoft.Zelig.Runtime.SyncBlock::set_HashCode(int)
Microsoft.Zelig.Runtime.SyncBlock::get_Index()
Microsoft.Zelig.Runtime.MemoryFreeBlock::Pack()
Microsoft.Zelig.Runtime.MemoryFreeBlock::Unpack(byte[])
Microsoft.Zelig.Runtime.MemoryFreeBlock::ToObjectHeader()
Microsoft.Zelig.Runtime.MemoryFreeBlock::ToObjectHeaderPointer()
Microsoft.Zelig.Runtime.MemoryFreeBlock::ZeroFreeMemory()
Microsoft.Zelig.Runtime.MemoryFreeBlock::DirtyFreeMemory()
Microsoft.Zelig.Runtime.MemoryFreeBlock::Allocate(Microsoft.Zelig.Runtime.MemorySegment&,uint)
Microsoft.Zelig.Runtime.MemoryFreeBlock::get_PointerOffset()
Microsoft.Zelig.Runtime.MemoryFreeBlock::FixedSize()
Microsoft.Zelig.Runtime.MemoryFreeBlock::MinimumSpaceRequired()
Microsoft.Zelig.Runtime.MemoryFreeBlock::InitializeFromRawMemory(System.UIntPtr,uint)
Microsoft.Zelig.Runtime.MemoryFreeBlock::ZeroHeader(System.UIntPtr)
Microsoft.Zelig.Runtime.MemoryFreeBlock::DirtyHeader(System.UIntPtr)
Microsoft.Zelig.Runtime.MemoryFreeBlock::get_AvailableMemory()
Microsoft.Zelig.Runtime.MemorySegment::Initialize()
Microsoft.Zelig.Runtime.MemorySegment::ZeroFreeMemory()
Microsoft.Zelig.Runtime.MemorySegment::DirtyFreeMemory()
Microsoft.Zelig.Runtime.MemorySegment::Allocate(uint)
Microsoft.Zelig.Runtime.MemorySegment::LinkNewFreeBlock(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.Runtime.MemorySegment::Release(System.UIntPtr)
Microsoft.Zelig.Runtime.MemorySegment::RemoveFreeBlock(Microsoft.Zelig.Runtime.MemoryFreeBlock*)
Microsoft.Zelig.Runtime.MemorySegment::InsertFreeBlock(Microsoft.Zelig.Runtime.MemoryFreeBlock*,Microsoft.Zelig.Runtime.MemoryFreeBlock*)
Microsoft.Zelig.Runtime.MemorySegment::MinimumSpaceRequired()
Microsoft.Zelig.Runtime.MemorySegment::Log(string)
Microsoft.Zelig.Runtime.MemorySegment::Log(string,int)
Microsoft.Zelig.Runtime.MemorySegment::Log(string,int,int)
Microsoft.Zelig.Runtime.MemorySegment::Log(string,int,int,int)
Microsoft.Zelig.Runtime.MemorySegment::get_FirstBlock()
Microsoft.Zelig.Runtime.MemorySegment::get_AvailableMemory()
Microsoft.Zelig.Runtime.LinearMemoryManager::InitializeMemoryManager()
Microsoft.Zelig.Runtime.LinearMemoryManager::InitializationComplete()
Microsoft.Zelig.Runtime.LinearMemoryManager::Allocate(uint)
Microsoft.Zelig.Runtime.LinearMemoryManager::Release(System.UIntPtr)
Microsoft.Zelig.Runtime.LinearMemoryManager::RefersToMemory(System.UIntPtr)
Microsoft.Zelig.Runtime.BugCheck::Assert(bool,Microsoft.Zelig.Runtime.BugCheck.StopCode)
Microsoft.Zelig.Runtime.BugCheck::Raise(Microsoft.Zelig.Runtime.BugCheck.StopCode)
Microsoft.Zelig.Runtime.BugCheck::Log(string)
Microsoft.Zelig.Runtime.BugCheck::Log(string,int)
Microsoft.Zelig.Runtime.BugCheck::Log(string,int,int)
Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOff()
Microsoft.Zelig.Runtime.BugCheck::AssertInterruptsOn()
Microsoft.Zelig.Runtime.BugCheck::WriteLine(string)
Microsoft.Zelig.Runtime.BugCheck::WriteLineFormat(string,object[])
Microsoft.Zelig.Runtime.KernelPerformanceCounter::Merge(Microsoft.Zelig.Runtime.KernelPerformanceCounter)
Microsoft.Zelig.Runtime.SchedulerTimeSpan::.ctor(long)
Microsoft.Zelig.Runtime.SchedulerTimeSpan::op_Equality(Microsoft.Zelig.Runtime.SchedulerTimeSpan,Microsoft.Zelig.Runtime.SchedulerTimeSpan)
Microsoft.Zelig.Runtime.SchedulerTimeSpan::get_DeltaUnits()
Microsoft.Zelig.Runtime.SchedulerTimeSpan::.cctor()
Microsoft.Zelig.Runtime.SchedulerTime::.ctor(ulong)
Microsoft.Zelig.Runtime.SchedulerTime::Add(Microsoft.Zelig.Runtime.SchedulerTimeSpan)
Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit(int)
Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit(System.DateTime)
Microsoft.Zelig.Runtime.SchedulerTime::op_Explicit(Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.SchedulerTime::op_Addition(Microsoft.Zelig.Runtime.SchedulerTime,Microsoft.Zelig.Runtime.SchedulerTimeSpan)
Microsoft.Zelig.Runtime.SchedulerTime::op_Subtraction(Microsoft.Zelig.Runtime.SchedulerTime,Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.SchedulerTime::op_Equality(Microsoft.Zelig.Runtime.SchedulerTime,Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.SchedulerTime::op_Inequality(Microsoft.Zelig.Runtime.SchedulerTime,Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.SchedulerTime::op_GreaterThan(Microsoft.Zelig.Runtime.SchedulerTime,Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.SchedulerTime::FromUnits(ulong)
Microsoft.Zelig.Runtime.SchedulerTime::ConvertFromMillisecondsToUnits(int)
Microsoft.Zelig.Runtime.SchedulerTime::ConvertFromDateTimeTicksToUnits(long)
Microsoft.Zelig.Runtime.SchedulerTime::ConvertFromUnitsToDateTimeTicks(ulong)
Microsoft.Zelig.Runtime.SchedulerTime::GetCurrentTime()
Microsoft.Zelig.Runtime.SchedulerTime::get_Now()
Microsoft.Zelig.Runtime.SchedulerTime::get_Units()
Microsoft.Zelig.Runtime.SchedulerTime::.cctor()
Microsoft.Zelig.Runtime.SchedulerTime::get_HardwareClockFrequency()
Microsoft.Zelig.Runtime.SchedulerTime::get_RatioFromDateTimeTicksToUnits()
Microsoft.Zelig.Runtime.SchedulerTime::get_RatioFromUnitsToDateTimeTicks()
Microsoft.Zelig.Runtime.MemoryManager::InitializeMemoryManager()
Microsoft.Zelig.Runtime.MemoryManager::InitializationComplete()
Microsoft.Zelig.Runtime.MemoryManager::ZeroFreeMemory()
Microsoft.Zelig.Runtime.MemoryManager::DirtyFreeMemory()
Microsoft.Zelig.Runtime.MemoryManager::Allocate(uint)
Microsoft.Zelig.Runtime.MemoryManager::Release(System.UIntPtr)
Microsoft.Zelig.Runtime.MemoryManager::RefersToMemory(System.UIntPtr)
Microsoft.Zelig.Runtime.MemoryManager::AllocateFromManagedHeap(uint)
Microsoft.Zelig.Runtime.MemoryManager::FreeFromManagedHeap(System.UIntPtr)
Microsoft.Zelig.Runtime.MemoryManager::AddLinearSection(System.UIntPtr,System.UIntPtr,Microsoft.Zelig.Runtime.MemoryAttributes)
Microsoft.Zelig.Runtime.MemoryManager::get_Instance()
Microsoft.Zelig.Runtime.MemoryManager::get_Lock()
Microsoft.Zelig.Runtime.MemoryManager::get_StartOfHeap()
Microsoft.Zelig.Runtime.MemoryManager::get_AvailableMemory()
Microsoft.Zelig.Runtime.ARMv7ThreadManager::InitializeAfterStaticConstructors(uint[])
Microsoft.Zelig.Runtime.ARMv7ThreadManager::StartThreads()
Microsoft.Zelig.Runtime.ARMv7ThreadManager::RemoveThread(System.Threading.Thread)
Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_InterruptThread()
Microsoft.Zelig.Runtime.ARMv7ThreadManager::get_FastInterruptThread()
Microsoft.Zelig.Runtime.ARMv7ThreadManager::IdleThread()
Microsoft.Zelig.Runtime.TypeSystemManager::InitializeTypeSystemManager()
Microsoft.Zelig.Runtime.TypeSystemManager::InitializeObject(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable,bool)
Microsoft.Zelig.Runtime.TypeSystemManager::InitializeObjectWithExtensions(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::InitializeArray(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable,uint,bool)
Microsoft.Zelig.Runtime.TypeSystemManager::InitializeString(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.VTable,int,bool)
Microsoft.Zelig.Runtime.TypeSystemManager::AllocateObject(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::AllocateObjectWithExtensions(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::AllocateArray(Microsoft.Zelig.Runtime.TypeSystem.VTable,uint)
Microsoft.Zelig.Runtime.TypeSystemManager::AllocateString(Microsoft.Zelig.Runtime.TypeSystem.VTable,int)
generic Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocator<T>(T&)
generic Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow<T>(T&)
Microsoft.Zelig.Runtime.TypeSystemManager::InvokeStaticConstructors()
Microsoft.Zelig.Runtime.TypeSystemManager::CastToType(object,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::CastToTypeNoThrow(object,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedType(object,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::CastToSealedTypeNoThrow(object,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterface(object,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::CastToInterfaceNoThrow(object,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.TypeSystemManager::Throw(System.Exception)
Microsoft.Zelig.Runtime.TypeSystemManager::Rethrow()
Microsoft.Zelig.Runtime.TypeSystemManager::get_Instance()
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocator<Microsoft.Zelig.Runtime.Synchronization.YieldLock>(Microsoft.Zelig.Runtime.Synchronization.YieldLock&)
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocator<Microsoft.Zelig.Runtime.Synchronization.CriticalSection>(Microsoft.Zelig.Runtime.Synchronization.CriticalSection&)
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow<Microsoft.Zelig.Runtime.Synchronization.YieldLock>(Microsoft.Zelig.Runtime.Synchronization.YieldLock&)
Microsoft.Zelig.Runtime.TypeSystemManager::AtomicAllocatorSlow<Microsoft.Zelig.Runtime.Synchronization.CriticalSection>(Microsoft.Zelig.Runtime.Synchronization.CriticalSection&)
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_Personality(Microsoft.Zelig.Runtime.Unwind.UnwindActions,ulong,System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::GetEntryVTable(ulong,Microsoft.Zelig.Runtime.Unwind.DwarfEncoding,System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::ReadULEB128(byte*&)
Microsoft.Zelig.Runtime.Unwind::ReadSLEB128(byte*&)
Microsoft.Zelig.Runtime.Unwind::ReadEncodedPointer(byte*&,Microsoft.Zelig.Runtime.Unwind.DwarfEncoding)
Microsoft.Zelig.Runtime.Unwind::GetEncodingSize(Microsoft.Zelig.Runtime.Unwind.DwarfEncoding)
Microsoft.Zelig.Runtime.Unwind::LLOS_AllocateException(object,ulong)
Microsoft.Zelig.Runtime.Unwind::LLOS_GetExceptionObject(System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_GetIP(System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_GetLanguageSpecificData(System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_GetRegionStart(System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_SetRegisters(System.UIntPtr,System.UIntPtr,System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::LLOS_Unwind_RaiseException(System.UIntPtr)
Microsoft.Zelig.Runtime.Unwind::LLOS_Terminate()
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObject(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateObjectWithExtensions(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateArray(Microsoft.Zelig.Runtime.TypeSystem.VTable,uint)
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateString(Microsoft.Zelig.Runtime.TypeSystem.VTable,int)
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeObjectSize(Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::ComputeArraySize(Microsoft.Zelig.Runtime.TypeSystem.VTable,uint)
Microsoft.Zelig.Runtime.DefaultTypeSystemManager::AllocateInner(Microsoft.Zelig.Runtime.TypeSystem.VTable,uint)
Microsoft.Zelig.Runtime.Synchronization.YieldLock::.ctor()
Microsoft.Zelig.Runtime.Synchronization.YieldLock::Acquire(System.Threading.Thread)
Microsoft.Zelig.Runtime.Synchronization.YieldLock::Release(System.Threading.Thread)
Microsoft.Zelig.Runtime.Synchronization.YieldLock::IsHeldByCurrentThread()
Microsoft.Zelig.Runtime.Synchronization.CriticalSection::.ctor()
Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Acquire(Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.Synchronization.CriticalSection::Release()
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::.ctor()
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::Acquire(Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::Release()
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::Acquire()
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::RegisterWait(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::UnregisterWait(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
Microsoft.Zelig.Runtime.Synchronization.WaitableObject::get_OwnershipLink()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.cctor()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::.ctor()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::GetInstance(System.Threading.Thread,Microsoft.Zelig.Runtime.Synchronization.WaitableObject,Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Connect()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Wait()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Recycle()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::Disconnect()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::get_Source()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::get_Timeout()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::get_Processed()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::get_RequestFulfilled()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord::set_RequestFulfilled(bool)
Microsoft.Zelig.Runtime.SmartHandles.YieldLockHolder::.ctor(Microsoft.Zelig.Runtime.Synchronization.YieldLock)
Microsoft.Zelig.Runtime.SmartHandles.YieldLockHolder::Dispose()
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::.ctor(uint)
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::Dispose()
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::Toggle()
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::Disable()
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::DisableAll()
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::EnableAll()
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetCurrentExceptionMode()
Microsoft.Zelig.Runtime.SmartHandles.InterruptState::GetMode()
Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt::.ctor(System.Threading.Thread)
Microsoft.Zelig.Runtime.SmartHandles.SwapCurrentThreadUnderInterrupt::Dispose()
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::IntDiv(int,int)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::IntRem(int,int)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::UintDiv(uint,uint)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::UintRem(uint,uint)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::LongMul(long,long)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::LongDiv(long,long)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::LongRem(long,long)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::LongShl(long,int)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::LongShr(long,int)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::UlongMul(ulong,ulong)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::UlongDiv(ulong,ulong)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::UlongRem(ulong,ulong)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::UlongShr(ulong,int)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::DoubleAdd(double,double)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::DoubleSub(double,double)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::DoubleMul(double,double)
Microsoft.Zelig.Runtime.Helpers.BinaryOperations::DoubleDiv(double,double)
Microsoft.Zelig.Runtime.Helpers.CompareAndSet::DoubleEqual(double,double)
Microsoft.Zelig.Runtime.Helpers.CompareAndSet::DoubleGreaterOrEqual(double,double)
Microsoft.Zelig.Runtime.Helpers.CompareAndSet::DoubleGreater(double,double)
Microsoft.Zelig.Runtime.Helpers.CompareAndSet::DoubleLess(double,double)
Microsoft.Zelig.Runtime.Helpers.Convert::IntToDouble(int,bool)
Microsoft.Zelig.Runtime.Helpers.Convert::LongToDouble(long,bool)
Microsoft.Zelig.Runtime.Helpers.Convert::UnsignedLongToDouble(ulong,bool)
Microsoft.Zelig.Runtime.Helpers.Convert::FloatToDouble(float,bool)
Microsoft.Zelig.Runtime.Helpers.Convert::DoubleToInt(double,bool)
Microsoft.Zelig.Runtime.Helpers.Convert::DoubleToLong(double,bool)
Microsoft.Zelig.Runtime.Helpers.Convert::DoubleToUnsignedLong(double,bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::.ctor(double)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::.ctor(int,bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::.ctor(long,bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::.ctor(ulong,bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::.ctor(Microsoft.Zelig.Runtime.Helpers.FloatImplementation&,bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::Negate()
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::Compare(Microsoft.Zelig.Runtime.Helpers.DoubleImplementation&)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::Add(Microsoft.Zelig.Runtime.Helpers.DoubleImplementation&)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::Sub(Microsoft.Zelig.Runtime.Helpers.DoubleImplementation&)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::Mul(Microsoft.Zelig.Runtime.Helpers.DoubleImplementation&)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::Div(Microsoft.Zelig.Runtime.Helpers.DoubleImplementation&)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::ToDouble()
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::ToInt(bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::ToLong(bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::ToUnsignedLong(bool)
Microsoft.Zelig.Runtime.Helpers.DoubleImplementation::Renormalize_Range0to2(ulong)
Microsoft.Zelig.Runtime.Helpers.FloatImplementation::.ctor(float)
Microsoft.Zelig.Runtime.Helpers.FloatImplementation::Equals(object)
Microsoft.Zelig.Runtime.Helpers.UnaryOperations::DoubleNeg(double)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::InitializeProcessor()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::DisableLazyStacking()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::CUSTOM_STUB_SCB__get_FPCCR()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP::CUSTOM_STUB_SCB__set_FPCCR(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.SmartHandles.InterruptStateARMv6M::.ctor(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.SmartHandles.InterruptStateARMv6M::Dispose()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.SmartHandles.InterruptStateARMv6M::Disable()
System.Threading.EventWaitHandle.EventWaitableObject::.ctor(System.Threading.EventWaitHandle)
System.Threading.EventWaitHandle.EventWaitableObject::Acquire(Microsoft.Zelig.Runtime.SchedulerTime)
System.Threading.EventWaitHandle.EventWaitableObject::Release()
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker::.ctor(Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector)
Microsoft.Zelig.Runtime.ConservativeMarkAndSweepCollector.ConservativeStackWalker::Process(Microsoft.Zelig.Runtime.Processor.Context)
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays::Push(System.Array,uint,int,Microsoft.Zelig.Runtime.TypeSystem.VTable)
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays::Visit(Microsoft.Zelig.Runtime.MarkAndSweepCollector)
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkStackForArrays::Equals(object)
Microsoft.Zelig.Runtime.Finalizer.Tracker::.ctor(object)
Microsoft.Zelig.Runtime.Finalizer.Tracker::Allocate(object)
Microsoft.Zelig.Runtime.Processor.Context::.ctor(System.Threading.Thread)
Microsoft.Zelig.Runtime.Processor.Context::Populate()
Microsoft.Zelig.Runtime.Processor.Context::Populate(Microsoft.Zelig.Runtime.Processor.Context)
Microsoft.Zelig.Runtime.Processor.Context::PopulateFromDelegate(System.Delegate,uint[])
Microsoft.Zelig.Runtime.Processor.Context::SetupForExceptionHandling(uint)
Microsoft.Zelig.Runtime.Processor.Context::Unwind()
Microsoft.Zelig.Runtime.Processor.Context::SwitchTo()
Microsoft.Zelig.Runtime.Processor.Context::get_StackPointer()
Microsoft.Zelig.Runtime.Processor.Context::set_StackPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.Processor.Context::get_BaseStackPointer()
Microsoft.Zelig.Runtime.Processor.Context::get_ExcReturn()
Microsoft.Zelig.Runtime.Processor.Context::get_ProgramCounter()
Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfMarkPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.SyncBlock.Handler::Mark(Microsoft.Zelig.Runtime.GarbageCollectionManager,object)
Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfMarkPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.SyncBlock.Handler::StartOfSweepPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.SyncBlock.Handler::Sweep(Microsoft.Zelig.Runtime.GarbageCollectionManager,object)
Microsoft.Zelig.Runtime.SyncBlock.Handler::EndOfSweepPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::.ctor()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Dispose()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::Get(System.Threading.Thread,Microsoft.Zelig.Runtime.Synchronization.WaitableObject,Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_ShouldTryToAcquire()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestProcessed()
Microsoft.Zelig.Runtime.Synchronization.WaitingRecord.Holder::get_RequestFulfilled()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SwitchTo()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Populate(Microsoft.Zelig.Runtime.Processor.Context)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::PopulateFromDelegate(System.Delegate,uint[])
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SetupForExceptionHandling(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::Unwind()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::ContextSwitch(Microsoft.Zelig.Runtime.ThreadManager,System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::FirstLongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::LongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::LongJumpForRetireThread()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_StackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::set_StackPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_BaseStackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ExcReturn()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::get_ProgramCounter()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::GetFrame(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::SVC_Handler_Zelig(uint*)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::PendSV_Handler_Zelig(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context::AnyInterrupt()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::.ctor(System.Threading.Thread)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SwitchTo()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Populate(Microsoft.Zelig.Runtime.Processor.Context)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PopulateFromDelegate(System.Delegate,uint[])
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SetupForExceptionHandling(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::Unwind()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::ContextSwitch(Microsoft.Zelig.Runtime.ThreadManager,System.UIntPtr,bool)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::FirstLongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::LongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::LongJumpForRetireThread()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_StackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::set_StackPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_BaseStackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ExcReturn()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_IsFullContext()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::set_IsFullContext(bool)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::get_ProgramCounter()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::GetFullFrame(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::GetSimpleFrame(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::InterruptHandlerWithContextSwitch(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext&)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::FastInterruptHandlerWithoutContextSwitch()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::GenericSoftwareInterruptHandler(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext&)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::SVC_Handler_Zelig_VFP_NoFPContext(uint*)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::PendSV_Handler_Zelig_VFP(System.UIntPtr,uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context::AnyInterrupt()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SwitchTo()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Populate(Microsoft.Zelig.Runtime.Processor.Context)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::PopulateFromDelegate(System.Delegate,uint[])
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SetupForExceptionHandling(uint)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::Unwind()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::ContextSwitch(Microsoft.Zelig.Runtime.ThreadManager,System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::FirstLongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::LongJump()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::LongJumpForRetireThread()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_StackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::set_StackPointer(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_BaseStackPointer()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ExcReturn()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::get_ProgramCounter()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::GetFrame(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::SVC_Handler_Zelig(uint*)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::PendSV_Handler_Zelig(System.UIntPtr)
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context::AnyInterrupt()
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Initialize()
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfMarkPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Mark(Microsoft.Zelig.Runtime.GarbageCollectionManager,object)
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfMarkPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::StartOfSweepPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Sweep(Microsoft.Zelig.Runtime.GarbageCollectionManager,object)
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::EndOfSweepPhase(Microsoft.Zelig.Runtime.GarbageCollectionManager)
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::RestartExecution()
Microsoft.Zelig.Runtime.Finalizer.Tracker.Handler::Worker()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context.RegistersOnStack::get_TotalFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context.RegistersOnStack::get_HWFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M.Context.RegistersOnStack::get_SwitcherFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackFullFPContext::get_SwitcherFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext::get_TotalFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext::get_HWFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext::get_SwitcherFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::get_TotalFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::get_HWFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::get_SwitcherFrameSize()
Microsoft.Zelig.Runtime.TargetPlatform.ARMv6.ProcessorARMv6M.Context.RegistersOnStack::GetRegisterValue(uint)
generic System.Activator::CreateInstance<T>()
System.Activator::CreateInstance<Microsoft.Zelig.Runtime.Synchronization.YieldLock>()
System.Activator::CreateInstance<Microsoft.Zelig.Runtime.Synchronization.CriticalSection>()
System.ArgumentException::.ctor()
System.ArgumentException::.ctor(string)
System.ArgumentException::get_Message()
System.ArgumentNullException::.ctor()
System.ArgumentOutOfRangeException::.ctor()
System.ArgumentOutOfRangeException::get_RangeMessage()
System.ArithmeticException::.ctor()
System.Buffer::InternalMemoryCopy(byte*,byte*,int)
System.Buffer::InternalMemoryCopy(ushort*,ushort*,int)
System.Buffer::InternalMemoryCopy(char*,char*,int)
System.Buffer::InternalMemoryCopy(uint*,uint*,int)
System.Buffer::InternalBackwardMemoryCopy(byte*,byte*,int)
System.Buffer::InternalBackwardMemoryCopy(ushort*,ushort*,int)
System.Buffer::InternalBackwardMemoryCopy(uint*,uint*,int)
System.Buffer::InternalMemoryMove(byte*,byte*,int)
System.DateTime::.ctor(long)
System.DateTime::.ctor(ulong)
System.DateTime::.ctor(long,System.DateTimeKind)
System.DateTime::.ctor(int,int,int)
System.DateTime::get_InternalTicks()
System.DateTime::DateToTicks(int,int,int)
System.DateTime::get_Hour()
System.DateTime::get_Minute()
System.DateTime::get_UtcNow()
System.DateTime::GetSystemTimeAsDateTimeTicks()
System.DateTime::get_Second()
System.DateTime::get_Ticks()
System.DateTime::IsLeapYear(int)
System.DateTime::ToString()
System.DateTime::.cctor()
System.DivideByZeroException::.ctor()
System.Environment::get_NewLine()
System.Environment::GetResourceFromDefault(string)
System.Environment::GetResourceString(string)
System.Exception::.ctor()
System.Exception::.ctor(string)
System.Exception::get_Message()
System.Exception::ToString()
System.Exception::GetMessageFromNativeResources(System.Exception.ExceptionMessageKind)
System.FormatException::.ctor()
System.GC::KeepAlive(object)
System.DateTimeFormat::FormatDigits(System.Text.StringBuilder,int,int)
System.DateTimeFormat::ParseRepeatPattern(string,int,char)
System.DateTimeFormat::FormatDayOfWeek(int,int,System.Globalization.DateTimeFormatInfo)
System.DateTimeFormat::FormatMonth(int,int,System.Globalization.DateTimeFormatInfo)
System.DateTimeFormat::Format(System.DateTime,System.Globalization.DateTimeFormatInfo)
System.IndexOutOfRangeException::.ctor()
System.InvalidCastException::.ctor()
System.InvalidOperationException::.ctor()
System.InvalidOperationException::.ctor(string)
System.MarshalByRefObject::.ctor()
System.Math::Floor(double)
System.Math::Round(double)
System.Math::Log(double)
System.Math::Log10(double)
System.Math::Min(ulong,ulong)
System.Math::ExtractHighPart(ulong)
System.Math::ExtractLowPart(ulong)
System.Math::InsertHighPart(uint)
System.Math::IsNegative(uint)
System.Math::IsPositive(ulong)
System.Math::IsNegative(ulong)
System.NotImplementedException::.ctor()
System.NotSupportedException::.ctor()
System.NullReferenceException::.ctor()
System.Number::.ctor(int)
System.Number::.ctor(uint)
System.Number::.ctor(long)
System.Number::.ctor(ulong)
System.Number::Get(string,int)
System.Number::.ctor(double,int)
System.Number::PowerOfTen(int)
System.Number::FormatDouble(double,System.Globalization.NumberFormatInfo)
System.Number::FormatDouble(double,string,System.Globalization.NumberFormatInfo)
System.Number::FormatInt32(int,System.Globalization.NumberFormatInfo)
System.Number::FormatInt32(int,char,System.Globalization.NumberFormatInfo)
System.Number::FormatInt32(int,string,System.Globalization.NumberFormatInfo)
System.Number::FormatUInt32(uint,System.Globalization.NumberFormatInfo)
System.Number::FormatUInt32(uint,string,System.Globalization.NumberFormatInfo)
System.Number::FormatInt64(long,string,System.Globalization.NumberFormatInfo)
System.Number::FormatUInt64(ulong,string,System.Globalization.NumberFormatInfo)
System.Number::FormatSingle(float,string,System.Globalization.NumberFormatInfo)
System.Number::FPNumberToString(System.Number,string,System.Globalization.NumberFormatInfo)
System.Number::ToString(char,int,System.Globalization.NumberFormatInfo)
System.Number::ParseFormatSpecifier(string,int&)
System.Number::ToStringFormat(string,System.Globalization.NumberFormatInfo)
System.Number::FindSection(string,int)
System.Number::Int32ToDecString(int,int,string)
System.Number::Int32ToHexString(uint,char,int)
System.Number::Int32ToHexChars(char[],int,uint,char,int)
System.Number::UInt32ToDecString(uint,int)
System.Number::LO32(ulong)
System.Number::HI32(ulong)
System.Number::Int64ToDecString(long,int,string)
System.Number::Int64ToHexChars(char[],int,ulong,char,int)
System.Number::Int64ToHexString(ulong,char,int)
System.Number::UInt64ToDecString(ulong,int)
System.Number::Int32ToDecChars(char[],int,uint,int)
System.Number::Int64ToDecChars(char[],int,ulong,int)
System.Number::RoundNumber(int)
System.Number::FormatExponent(System.Text.StringBuilder,int,char,string,string,int)
System.Number::FormatGeneral(System.Text.StringBuilder,int,char,System.Globalization.NumberFormatInfo)
System.Number::FormatScientific(System.Text.StringBuilder,int,char,System.Globalization.NumberFormatInfo)
System.Number::wcslen(char[],int)
System.Number::FormatFixed(System.Text.StringBuilder,int,int[],string,string,System.Globalization.NumberFormatInfo)
System.Number::FormatNumber(System.Text.StringBuilder,int,System.Globalization.NumberFormatInfo)
System.Number::FormatPercent(System.Text.StringBuilder,int,System.Globalization.NumberFormatInfo)
System.Number::Int64DivMod1E9(ulong,uint&)
System.Number::.cctor()
System.ObjectDisposedException::.ctor(string)
System.ObjectDisposedException::.ctor(string,string)
System.ObjectDisposedException::get_Message()
System.ObjectDisposedException::get_ObjectName()
System.OutOfMemoryException::.ctor()
System.OverflowException::.ctor()
System.SystemException::.ctor()
System.SystemException::.ctor(string)
System.TimeoutException::.ctor()
System.Type::get_TypeHandle()
System.Type::get_FullName()
System.Type::get_UnderlyingSystemType()
System.Type::Equals(object)
System.Type::Equals(System.Type)
System.Type::GetHashCode()
System.Type::op_Equality(System.Type,System.Type)
System.Type::op_Inequality(System.Type,System.Type)
System.Threading.AutoResetEvent::.ctor(bool)
System.Threading.EventWaitHandle::.ctor(bool,System.Threading.EventResetMode)
System.Threading.EventWaitHandle::Reset()
System.Threading.EventWaitHandle::Set()
System.Threading.Interlocked::Increment(int&)
System.Threading.Interlocked::CompareExchange(int&,int,int)
System.Threading.Interlocked::CompareExchange<Microsoft.Zelig.Runtime.SyncBlock>(Microsoft.Zelig.Runtime.SyncBlock&,Microsoft.Zelig.Runtime.SyncBlock,Microsoft.Zelig.Runtime.SyncBlock)
System.Threading.Interlocked::CompareExchange<Microsoft.Zelig.Runtime.Synchronization.YieldLock>(Microsoft.Zelig.Runtime.Synchronization.YieldLock&,Microsoft.Zelig.Runtime.Synchronization.YieldLock,Microsoft.Zelig.Runtime.Synchronization.YieldLock)
System.Threading.Interlocked::CompareExchange<Microsoft.Zelig.Runtime.Synchronization.CriticalSection>(Microsoft.Zelig.Runtime.Synchronization.CriticalSection&,Microsoft.Zelig.Runtime.Synchronization.CriticalSection,Microsoft.Zelig.Runtime.Synchronization.CriticalSection)
generic System.Threading.Interlocked::CompareExchange<T>(T&,T,T)
System.Threading.Interlocked::InternalCompareExchange(int&,int,int)
generic System.Threading.Interlocked::InternalCompareExchange<T>(T&,T,T)
System.Threading.Interlocked::InternalAdd(int&,int)
System.Threading.Interlocked::InternalCompareExchange<Microsoft.Zelig.Runtime.SyncBlock>(Microsoft.Zelig.Runtime.SyncBlock&,Microsoft.Zelig.Runtime.SyncBlock,Microsoft.Zelig.Runtime.SyncBlock)
System.Threading.Interlocked::InternalCompareExchange<Microsoft.Zelig.Runtime.Synchronization.YieldLock>(Microsoft.Zelig.Runtime.Synchronization.YieldLock&,Microsoft.Zelig.Runtime.Synchronization.YieldLock,Microsoft.Zelig.Runtime.Synchronization.YieldLock)
System.Threading.Interlocked::InternalCompareExchange<Microsoft.Zelig.Runtime.Synchronization.CriticalSection>(Microsoft.Zelig.Runtime.Synchronization.CriticalSection&,Microsoft.Zelig.Runtime.Synchronization.CriticalSection,Microsoft.Zelig.Runtime.Synchronization.CriticalSection)
System.Threading.ManualResetEvent::.ctor(bool)
System.Threading.Monitor::Enter(object)
System.Threading.Monitor::Enter(object,bool&)
System.Threading.Monitor::Exit(object)
System.Threading.ThreadStart::.ctor(object,System.IntPtr)
System.Threading.ThreadStart::Invoke()
System.Threading.ThreadStateException::.ctor()
System.Threading.WaitHandle::WaitOne(int,bool)
System.Threading.WaitHandle::WaitOne()
System.Threading.WaitHandle::.ctor()
System.Threading.WaitHandle::WaitOne(Microsoft.Zelig.Runtime.SchedulerTime,bool)
System.Text.StringBuilder::.ctor()
System.Text.StringBuilder::.ctor(int)
System.Text.StringBuilder::.ctor(string)
System.Text.StringBuilder::.ctor(string,int)
System.Text.StringBuilder::.ctor(string,int,int,int)
System.Text.StringBuilder::GetThreadSafeString(System.Threading.Thread&)
System.Text.StringBuilder::ToString()
System.Text.StringBuilder::Append(char,int)
System.Text.StringBuilder::Append(char[],int,int)
System.Text.StringBuilder::Append(string)
System.Text.StringBuilder::NeedsAllocation(string,int)
System.Text.StringBuilder::GetNewString(string,int)
System.Text.StringBuilder::ReplaceString(System.Threading.Thread,string)
System.Text.StringBuilder::Append(char)
System.Text.StringBuilder::Append(int)
System.Text.StringBuilder::Append(uint)
System.Text.StringBuilder::Append(object)
System.Text.StringBuilder::Append(char[])
System.Text.StringBuilder::AppendFormat(string,object)
System.Text.StringBuilder::FormatError()
System.Text.StringBuilder::AppendFormat(System.IFormatProvider,string,object[])
System.Reflection.MemberInfo::Equals(object)
System.Reflection.MemberInfo::GetHashCode()
System.Reflection.MemberInfo::get_Name()
System.Reflection.MemberInfo::get_MetadataToken()
System.Reflection.MemberInfo::get_MetadataTokenInternal()
System.Globalization.Calendar::.ctor()
System.Globalization.Calendar::GetDayOfMonth(System.DateTime)
System.Globalization.Calendar::GetDayOfWeek(System.DateTime)
System.Globalization.Calendar::GetMonth(System.DateTime)
System.Globalization.Calendar::GetYear(System.DateTime)
System.Globalization.CultureInfo::.cctor()
System.Globalization.CultureInfo::.ctor(int,bool)
System.Globalization.CultureInfo::get_CurrentCulture()
System.Globalization.CultureInfo::get_UserDefaultCulture()
System.Globalization.CultureInfo::get_InvariantCulture()
System.Globalization.CultureInfo::GetFormat(System.Type)
System.Globalization.CultureInfo::get_NumberFormat()
System.Globalization.CultureInfo::get_DateTimeFormat()
System.Globalization.DateTimeFormatInfo::GetAbbreviatedMonthNames()
System.Globalization.DateTimeFormatInfo::GetMonthNames()
System.Globalization.DateTimeFormatInfo::.ctor()
System.Globalization.DateTimeFormatInfo::get_CurrentInfo()
System.Globalization.DateTimeFormatInfo::get_Calendar()
System.Globalization.DateTimeFormatInfo::get_LongTimePattern()
System.Globalization.DateTimeFormatInfo::get_ShortDatePattern()
System.Globalization.DateTimeFormatInfo::get_GeneralLongTimePattern()
System.Globalization.DateTimeFormatInfo::GetAbbreviatedDayName(System.DayOfWeek)
System.Globalization.DateTimeFormatInfo::GetDayName(System.DayOfWeek)
System.Globalization.DateTimeFormatInfo::GetAbbreviatedMonthName(int)
System.Globalization.DateTimeFormatInfo::GetMonthName(int)
System.Globalization.GregorianCalendar::GetDefaultInstance()
System.Globalization.GregorianCalendar::.ctor()
System.Globalization.GregorianCalendar::.ctor(System.Globalization.GregorianCalendarTypes)
System.Globalization.GregorianCalendar::GetDatePart(long,int)
System.Globalization.GregorianCalendar::GetDayOfMonth(System.DateTime)
System.Globalization.GregorianCalendar::GetDayOfWeek(System.DateTime)
System.Globalization.GregorianCalendar::GetMonth(System.DateTime)
System.Globalization.GregorianCalendar::GetYear(System.DateTime)
System.Globalization.GregorianCalendar::.cctor()
System.Globalization.NumberFormatInfo::.ctor(System.Globalization.CultureTableRecord)
System.Globalization.NumberFormatInfo::GetInstance(System.IFormatProvider)
System.Globalization.NumberFormatInfo::get_CurrentInfo()
System.Globalization.NumberFormatInfo::GetFormat(System.Type)
System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray2(System.Array,System.Array)
System.Collections.BitArray::.ctor(int)
System.Collections.BitArray::.ctor(int,bool)
System.Collections.BitArray::get_Item(int)
System.Collections.BitArray::set_Item(int,bool)
System.Collections.BitArray::Get(int)
System.Collections.BitArray::Set(int,bool)
System.Number.ToStringFormatState::Reset()
System.Number.ToStringFormatState::DecodeFormat(char)
System.Number.ToStringFormatState::Get()
System.Number.ToStringFormatState::PeekAt(int)
System.Number.ToStringFormatState::Advance()
System.Number.ToStringFormatState::MoveToEnd()
System.Number.ToStringFormatState::Equals(object)
Microsoft.Zelig.AssertionViolationException::.ctor(string)
Microsoft.Zelig.AssertionViolationException::Create(string,object[])
Microsoft.Zelig.AddressMath::IsLessThan(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.AddressMath::IsGreaterThan(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.AddressMath::IsGreaterThanOrEqual(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.AddressMath::IsInRange(System.UIntPtr,System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.AddressMath::RangeSize(System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.AddressMath::Increment(System.UIntPtr,uint)
Microsoft.Zelig.AddressMath::Decrement(System.UIntPtr,uint)
Microsoft.Zelig.AddressMath::AlignToWordBoundary(uint)
Microsoft.Zelig.AddressMath::AlignToDWordBoundary(uint)
Microsoft.Zelig.AddressMath::AlignToDWordBoundary(System.UIntPtr)
Microsoft.Zelig.AddressMath::AlignToLowerBoundary(System.UIntPtr,uint)
Microsoft.Zelig.AddressMath::IsAlignedTo32bits(void*)
Microsoft.Zelig.AddressMath::IsAlignedTo32bits(System.UIntPtr)
Microsoft.Zelig.AddressMath::IsAlignedTo16bits(void*)
Microsoft.Zelig.AddressMath::IsAlignedTo16bits(System.UIntPtr)
generic Microsoft.Zelig.ArrayUtility::AppendToArray<T>(T[],T)
generic Microsoft.Zelig.ArrayUtility::AppendToNotNullArray<T>(T[],T)
generic Microsoft.Zelig.ArrayUtility::ArrayEquals<T>(T[],T[])
Microsoft.Zelig.ArrayUtility::AppendToArray<Microsoft.Zelig.Runtime.SyncBlock[]>(Microsoft.Zelig.Runtime.SyncBlock[][],Microsoft.Zelig.Runtime.SyncBlock[])
Microsoft.Zelig.ArrayUtility::ArrayEquals<System.Delegate>(System.Delegate[],System.Delegate[])
Microsoft.Zelig.ArrayUtility::ArrayEquals<object>(object[],object[])
Microsoft.Zelig.ArrayUtility::ArrayEquals<string>(string[],string[])
Microsoft.Zelig.ArrayUtility::ArrayEquals<Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension>(Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension[],Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension[])
Microsoft.Zelig.ArrayUtility::AppendToNotNullArray<Microsoft.Zelig.Runtime.SyncBlock[]>(Microsoft.Zelig.Runtime.SyncBlock[][],Microsoft.Zelig.Runtime.SyncBlock[])
Microsoft.Zelig.CHECKS::ASSERT(bool,string)
System.Diagnostics.Stopwatch::.cctor()
System.Diagnostics.Stopwatch::GetTimestamp()
System.Diagnostics.Stopwatch::QueryPerformanceFrequency(long&)
System.Diagnostics.Stopwatch::QueryPerformanceCounter(long&)
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::EqualsThroughEquivalence(Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
generic Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence<T>(T[],T[],Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
generic Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence<T>(T[],T[],int,int,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence<Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation>(Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation[],Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation[],Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation::ArrayEqualsThroughEquivalence<Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation>(Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation[],Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation[],int,int,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap(System.UIntPtr)
Microsoft.Zelig.Runtime.TypeSystem.CodeMap::ResolveAddressToCodeMap(System.UIntPtr,Microsoft.Zelig.Runtime.TypeSystem.CodeMap.ReverseIndex[])
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet::AreEquivalent(Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.CustomAttributeRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.FieldRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.ConstructorMethodRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.FinalizerMethodRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.FinalMethodRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.InstanceMethodRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::op_Equality(Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation,Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParameters()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_GenericParametersDefinition()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::get_IsOpenMethod()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::ToShortString()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::PrettyToString(System.Text.StringBuilder)
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.NonVirtualMethodRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.VirtualMethodRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.AbstractReferenceTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::SameShape(Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_ContainedType()
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsOpenType()
Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation::get_IsDelayedType()
Microsoft.Zelig.Runtime.TypeSystem.BoxedValueTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.BoxedValueTypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.ConcreteReferenceTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsOpenType()
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::get_IsDelayedType()
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.DelayedMethodParameterTypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::get_UnderlyingType()
Microsoft.Zelig.Runtime.TypeSystem.EnumerationTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.InterfaceTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.ManagedPointerTypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::SameShape(Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::get_Dimensions()
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_ContainedType()
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_UnderlyingType()
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsOpenType()
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::get_IsDelayedType()
Microsoft.Zelig.Runtime.TypeSystem.PointerTypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.ScalarTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::SameShape(Microsoft.Zelig.Runtime.TypeSystem.ArrayReferenceTypeRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.SzArrayReferenceTypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::EqualsThroughEquivalence(object,Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet)
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetHashCode()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::op_Equality(Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation,Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::op_Inequality(Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation,Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_Name()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_Namespace()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_EnclosingClass()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_GenericParameters()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_Extends()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_VirtualTable()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_FullName()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_ContainedType()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_UnderlyingType()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsOpenType()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsDelayedType()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::get_IsNestedType()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::GetAbbreviation()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation::.cctor()
Microsoft.Zelig.Runtime.TypeSystem.UnmanagedPointerTypeRepresentation::PrettyToString(System.Text.StringBuilder,bool,bool)
Microsoft.Zelig.Runtime.TypeSystem.ValueTypeRepresentation::ToString()
Microsoft.Zelig.Runtime.TypeSystem.EquivalenceSet.EquivalenceDelegation::Invoke(Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation)
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext::get_Parameters()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext::get_ParametersDefinition()
Microsoft.Zelig.Runtime.TypeSystem.MethodRepresentation.GenericContext::get_IsOpenMethod()
Microsoft.Zelig.Runtime.TypeSystem.MultiArrayReferenceTypeRepresentation.Dimension::Equals(object)
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_Parameters()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_ParametersDefinition()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsOpenType()
Microsoft.Zelig.Runtime.TypeSystem.TypeRepresentation.GenericContext::get_IsDelayedType()
Microsoft.Llilum.Devices.Gpio.ValueChangedHandler::Invoke(object,Microsoft.Llilum.Devices.Gpio.PinEdge)
Microsoft.Llilum.Devices.Gpio.GpioPin::set_Direction(Microsoft.Llilum.Devices.Gpio.PinDirection)
Microsoft.Llilum.Devices.Gpio.GpioPin::set_Mode(Microsoft.Llilum.Devices.Gpio.PinMode)
Microsoft.Llilum.Devices.Gpio.GpioPin::set_ActivePinEdge(Microsoft.Llilum.Devices.Gpio.PinEdge)
Microsoft.Llilum.Devices.Gpio.GpioPin::SetPinMode(Microsoft.Llilum.Devices.Gpio.PinMode)
Microsoft.Llilum.Devices.Gpio.GpioPin::SetPinDirection(Microsoft.Llilum.Devices.Gpio.PinDirection)
Microsoft.Llilum.Devices.Gpio.GpioPin::SetActivePinEdge(Microsoft.Llilum.Devices.Gpio.PinEdge)
Microsoft.Llilum.Devices.Gpio.GpioPin::Write(int)
Microsoft.Llilum.Devices.Gpio.GpioPin::TryCreateGpioPin(int)
Microsoft.Llilum.Devices.Gpio.GpioPin::SendEventInternal(Microsoft.Llilum.Devices.Gpio.PinEdge)
Microsoft.Llilum.Devices.Gpio.GpioPin::EnableInterrupt()
Microsoft.Llilum.Devices.Gpio.GpioPin::DisableInterrupt()
Microsoft.Llilum.Devices.Gpio.GpioPin::TryAcquireGpioPin(int)
Microsoft.Llilum.Devices.Gpio.GpioPin::.ctor()
Windows.Devices.Gpio.DefaultPinProvider::.ctor(int)
Windows.Devices.Gpio.DefaultPinProvider::SetPinDriveMode(Windows.Devices.Gpio.Provider.GpioDriveMode)
Windows.Devices.Gpio.DefaultPinProvider::Write(Windows.Devices.Gpio.GpioPinValue)
Windows.Devices.Gpio.GpioController::.ctor()
Windows.Devices.Gpio.GpioController::GetDefault()
Windows.Devices.Gpio.GpioController::OpenPin(int)
Windows.Devices.Gpio.GpioController::OpenPin(int,Windows.Devices.Gpio.GpioSharingMode)
Windows.Devices.Gpio.GpioController::TryOpenPin(int,Windows.Devices.Gpio.GpioSharingMode,Windows.Devices.Gpio.GpioPin&,Windows.Devices.Gpio.GpioOpenStatus&)
Windows.Devices.Gpio.GpioController::.cctor()
Windows.Devices.Gpio.GpioPin::.ctor()
Windows.Devices.Gpio.GpioPin::set_PinProvider(Windows.Devices.Gpio.Provider.IGpioPinProvider)
Windows.Devices.Gpio.GpioPin::Write(Windows.Devices.Gpio.GpioPinValue)
Windows.Devices.Gpio.GpioPin::SetDriveMode(Windows.Devices.Gpio.GpioPinDriveMode)
Windows.Devices.Gpio.GpioPin::ThrowIfDisposed()
Microsoft.CortexM4OnMBED.Processor::InterruptHandler(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext&)
Microsoft.CortexM4OnMBED.Processor::FastInterruptHandler()
Microsoft.CortexM4OnMBED.Processor::SoftwareInterruptHandler(Microsoft.Zelig.Runtime.TargetPlatform.ARMv7.ProcessorARMv7M_VFP.Context.RegistersOnStackNoFPContext&)
Microsoft.CortexM4OnMBED.Processor::UndefinedInstruction()
Microsoft.CortexM4OnMBED.Processor::PrefetchAbort()
Microsoft.CortexM4OnMBED.Processor::DataAbort()
Microsoft.CortexM4OnMBED.Processor::.cctor()
Microsoft.CortexM4OnMBED.Processor.Context::.ctor(System.Threading.Thread)
Microsoft.CortexM3OnMBED.ThreadManager::Activate()
Microsoft.CortexM3OnMBED.ThreadManager::SetNextWaitTimer(Microsoft.Zelig.Runtime.SchedulerTime)
Microsoft.CortexM3OnMBED.ThreadManager::WaitExpired(Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer,ulong)
Microsoft.CortexM0OnMBED.Device::ProcessBugCheck(Microsoft.Zelig.Runtime.BugCheck.StopCode)
Microsoft.CortexM0OnMBED.Device::ProcessLog(string)
Microsoft.CortexM0OnMBED.Device::ProcessLog(string,int)
Microsoft.CortexM0OnMBED.Device::ProcessLog(string,int,int)
Microsoft.CortexM0OnMBED.Memory::InitializeMemory()
Microsoft.CortexM0OnMBED.Peripherals::Activate()
Microsoft.CortexM0OnMBED.Peripherals::ReadPerformanceCounter()
Microsoft.CortexM0OnMBED.MemoryManager::InitializeMemoryManager()
Microsoft.CortexM0OnMBED.MemoryManager::RefersToMemory(System.UIntPtr)
Microsoft.CortexM0OnMBED.Drivers.InterruptController::CastInterruptHandlerAsPtr(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Initialize()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::CreateTimer(Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::get_CurrentTime()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::get_Counter()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::get_Instance()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::ProcessTimeout(ulong)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Refresh()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Reload(ulong)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Register(Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::Deregister(Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::TimeSinceAccumulatorUpdate(uint)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer::HandleSystemTimer(ulong)
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::.ctor(int)
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::Write(int)
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinMode(Microsoft.Llilum.Devices.Gpio.PinMode)
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetPinDirection(Microsoft.Llilum.Devices.Gpio.PinDirection)
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::SetActivePinEdge(Microsoft.Llilum.Devices.Gpio.PinEdge)
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::EnableInterrupt()
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::DisableInterrupt()
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::ProcessGpioInterrupt(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData)
Microsoft.CortexM0OnMBED.HardwareModel.GpioPin::HandleGpioInterrupt(Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext*,System.UIntPtr,Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinEdge)
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::PinToIndex(int)
Microsoft.CortexM0OnMBED.HardwareModel.HardwareProvider::get_InvalidPin()
Microsoft.CortexM0OnMBED.HardwareModel.GpioProvider::CreateGpioPin(int)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback::.ctor(object,System.IntPtr)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback::Invoke(Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer,ulong)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::.ctor(Microsoft.CortexM0OnMBED.Drivers.SystemTimer,Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Callback)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Cancel()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::Invoke(ulong)
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::get_Node()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::get_Timeout()
Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer::set_Timeout(ulong)
Microsoft.CortexM0OnCMSISCore.Peripherals::Initialize()
Microsoft.CortexM0OnCMSISCore.Peripherals::Activate()
Microsoft.CortexM0OnCMSISCore.Peripherals::CauseInterrupt()
Microsoft.CortexM0OnCMSISCore.Peripherals::WaitForInterrupt()
Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessInterrupt()
Microsoft.CortexM0OnCMSISCore.Peripherals::ProcessFastInterrupt()
Microsoft.CortexM0OnCMSISCore.Peripherals::GetPerformanceCounterFrequency()
Microsoft.CortexM0OnCMSISCore.Peripherals::ReadPerformanceCounter()
Microsoft.CortexM0OnCMSISCore.Storage::InitializeStorage()
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::Collect()
Microsoft.CortexM0OnCMSISCore.GarbageCollectionManager::WalkStackFrames()
Microsoft.DeviceModels.Chipset.CortexM.Board::PinToIndex(int)
Microsoft.DeviceModels.Chipset.CortexM.Board::get_NCPin()
Microsoft.DeviceModels.Chipset.CortexM.Board::GetSystemTimerIRQNumber()
Microsoft.DeviceModels.Chipset.CortexM.Board::get_Instance()
Microsoft.DeviceModels.Chipset.CortexM.NVIC::SetPriority(int,uint)
Microsoft.DeviceModels.Chipset.CortexM.NVIC::SetPriorityGrouping(uint)
Microsoft.DeviceModels.Chipset.CortexM.NVIC::CMSIS_STUB_NVIC_SetPriorityGrouping(uint)
Microsoft.DeviceModels.Chipset.CortexM.NVIC::CMSIS_STUB_NVIC_SetPriority(int,uint)
Microsoft.DeviceModels.Chipset.CortexM.SysTick::set_Match(uint)
Microsoft.DeviceModels.Chipset.CortexM.SysTick::set_Counter(uint)
Microsoft.DeviceModels.Chipset.CortexM.SysTick::ResetAndClear()
Microsoft.DeviceModels.Chipset.CortexM.SysTick::set_Enabled(bool)
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_TenMillisecondsCalibrationValue()
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_HasRef()
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_IsPrecise()
Microsoft.DeviceModels.Chipset.CortexM.SysTick::get_Instance()
Microsoft.DeviceModels.Chipset.CortexM.SysTick::CMSIS_STUB_SysTick_GetCTRL()
Microsoft.DeviceModels.Chipset.CortexM.SysTick::CMSIS_STUB_SysTick_GetCALIB()
Microsoft.DeviceModels.Chipset.CortexM.SysTick::CMSIS_STUB_SysTick_SetCTRL(uint)
Microsoft.DeviceModels.Chipset.CortexM.SysTick::CMSIS_STUB_SysTick_SetLOAD(uint)
Microsoft.DeviceModels.Chipset.CortexM.SysTick::CMSIS_STUB_SysTick_SetVAL(uint)
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeBeforeStaticConstructors()
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::InitializeAfterStaticConstructors(uint[])
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::Activate()
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::CancelQuantumTimer()
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::SetNextQuantumTimer()
Microsoft.DeviceModels.Chipset.CortexM.Runtime.ThreadManager::TimeQuantumExpired()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Initialize()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::Activate()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ProcessInterrupt()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ProcessFastInterrupt()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ProcessInterrupt(bool)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::GetNextActiveInterupt()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::ClearInterrupt(int)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::PostInterrupt(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::DispatchInterrupts()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::get_Instance()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController::.cctor()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::get_Instance()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Initialize()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Cancel()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::Reset()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::GetTicksForQuantumValue(uint)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::SetMatchAndStart(uint)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::GetTimerClockMhz()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::GetFactoryCalibrationValue()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::IsPrecise()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::HasRef()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.ContextSwitchTimer::ContextSwitchTimer_Handler_Zelig()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback::.ctor(object,System.IntPtr)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback::Invoke(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData::Equals(object)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::.ctor(int,Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptPriority,Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptSettings,Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Create(int,Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptPriority,Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptSettings,Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Callback)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::Invoke(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData)
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::get_Index()
Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler::get_IsFastHandler()
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::Failed(uint)
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::ThrowOnError(uint,bool)
Microsoft.Zelig.LlilumOSAbstraction.LlilumErrors::LLOS_Die()
Microsoft.Zelig.LlilumOSAbstraction.API.RuntimeMemory::LLOS_MEMORY_GetMaxHeapSize(uint&)
Microsoft.Zelig.LlilumOSAbstraction.API.RuntimeMemory::LLOS_MEMORY_GetDefaultManagedStackSize()
Microsoft.Zelig.LlilumOSAbstraction.API.RuntimeMemory::LLOS_MEMORY_Allocate(uint,byte,void*&)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.LLOS_GPIO_InterruptCallback::.ctor(object,System.IntPtr)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_AllocatePin(int,Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext**)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_EnablePin(Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext*,Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinEdge,Microsoft.Zelig.LlilumOSAbstraction.API.IO.LLOS_GPIO_InterruptCallback,System.UIntPtr)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_EnablePin(Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext*,Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinEdge,System.UIntPtr,System.UIntPtr)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_DisablePin(Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext*)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_SetMode(Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext*,Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinResistor)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_SetDirection(Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext*,Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioPinDirection)
Microsoft.Zelig.LlilumOSAbstraction.API.IO.Gpio::LLOS_GPIO_Write(Microsoft.Zelig.LlilumOSAbstraction.API.IO.GpioContext*,int)
Microsoft.Zelig.LlilumOSAbstraction.HAL.Clock::LLOS_CLOCK_GetPerformanceCounter()
Microsoft.Zelig.LlilumOSAbstraction.HAL.Clock::LLOS_CLOCK_GetPerformanceCounterFrequency()
Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerCallback::.ctor(object,System.IntPtr)
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_AllocateTimer(Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerCallback,ulong,Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerContext**)
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_GetTicks(Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerContext*)
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_GetTimerFrequency(Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerContext*)
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_AllocateTimer(System.UIntPtr,System.UIntPtr,ulong,Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerContext**)
Microsoft.Zelig.LlilumOSAbstraction.HAL.Timer::LLOS_SYSTEM_TIMER_ScheduleTimer(Microsoft.Zelig.LlilumOSAbstraction.HAL.TimerContext*,ulong)
Microsoft.Zelig.Support.mbed.Utilities::DebugLog0(char*,uint)
Microsoft.Zelig.Support.mbed.Utilities::DebugLog1(char*,uint,int)
Microsoft.Zelig.Support.mbed.Utilities::DebugLog2(char*,uint,int,int)
Microsoft.CortexM4OnCMSISCore.Processor::InitializeProcessor()
Microsoft.CortexM4OnCMSISCore.Processor.Context::.ctor(System.Threading.Thread)
Microsoft.DeviceModels.Chipset.CortexM4.Processor::InitializeProcessor()
Microsoft.Llilum.STM32F401.Board::get_NCPin()
Microsoft.Llilum.STM32F401.Board::PinToIndex(int)
Microsoft.Llilum.STM32F401.Board::GetSystemTimerIRQNumber()
Microsoft.Llilum.STM32F401.Device::get_BootstrapStack()
Microsoft.Llilum.STM32F401.Device::.cctor()
Microsoft.Llilum.STM32F401.Processor::InitializeProcessor()
Microsoft.Llilum.STM32F401.Processor::AllocateProcessorContext(System.Threading.Thread)
Microsoft.Llilum.STM32F401.Processor::DisableMPU()
Microsoft.Llilum.STM32F401.Processor::CUSTOM_STUB_STM32F4xx_DisableMPU()
Microsoft.Llilum.STM32F401.ThreadManager::get_DefaultStackSize()
Microsoft.Llilum.STM32F401.HardwareModel.HardwareProviders.GpioProvider::GetGpioPinIRQNumber(int)
Microsoft.Llilum.STM32F401.Drivers.ContextSwitchTimer::GetTicksForQuantumValue(uint)
Microsoft.Llilum.STM32F401.Processor.Context::.ctor(System.Threading.Thread)
Microsoft.Llilum.STM32F401.Processor.Context::SwitchTo()
System.IFormatProvider::GetFormat(System.Type)
System.IFormattable::ToString(string,System.IFormatProvider)
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::.ctor()
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::InsertAtTail(Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>)
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::FirstTarget()
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::LastTarget()
Microsoft.Zelig.Runtime.KernelList`1<System.Threading.Thread>::get_StartOfForwardWalk()
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::.ctor(System.Threading.Thread)
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::InsertBefore(Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>)
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::RemoveFromList()
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::RemoveFromList_NoClear()
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::ConnectToNext(Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>)
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::VerifyUnlinked()
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::get_IsValidForForwardMove()
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::get_Next()
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::set_Next(Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>)
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::get_Previous()
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::set_Previous(Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>)
Microsoft.Zelig.Runtime.KernelNode`1<System.Threading.Thread>::get_Target()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::.ctor()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertAtTail(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>)
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::FirstTarget()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::.ctor()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertAtTail(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::FirstTarget()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::ExtractFirstNode()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_StartOfForwardWalk()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::.ctor(Microsoft.Zelig.Runtime.Synchronization.WaitingRecord)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::InsertBefore(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::RemoveFromList()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::RemoveFromList_NoClear()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::ConnectToNext(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_IsLinked()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_IsValidForForwardMove()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_Next()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::set_Next(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::set_Previous(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitingRecord>::get_Target()
Microsoft.Zelig.Runtime.MarkAndSweepCollector.MarkAndSweepStackWalker::Process(Microsoft.Zelig.Runtime.Processor.Context)
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::.ctor()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertAtTail(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>)
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_StartOfForwardWalk()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::.ctor(Microsoft.Zelig.Runtime.Synchronization.WaitableObject)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::InsertBefore(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::RemoveFromList()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::RemoveFromList_NoClear()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::ConnectToNext(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::get_Next()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::set_Next(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::set_Previous(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Synchronization.WaitableObject>::get_Target()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::.ctor(Microsoft.Zelig.Runtime.Finalizer.Tracker)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::InsertBefore(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::RemoveFromList()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::RemoveFromList_NoClear()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::ConnectToNext(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_IsValidForForwardMove()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_Next()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::set_Next(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::set_Previous(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.Zelig.Runtime.Finalizer.Tracker>::get_Target()
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::Contains(Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation)
Microsoft.Zelig.GrowOnlySet`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::FindEntry(Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation)
Windows.Devices.Gpio.Provider.IGpioPinProvider::Write(Windows.Devices.Gpio.GpioPinValue)
Windows.Devices.Gpio.Provider.IGpioPinProvider::SetPinDriveMode(Windows.Devices.Gpio.Provider.GpioDriveMode)
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::.ctor()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::FirstTarget()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_StartOfForwardWalk()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::.ctor(Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::InsertBefore(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::RemoveFromList()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::RemoveFromList_NoClear()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::ConnectToNext(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_IsLinked()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_IsValidForForwardMove()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_Next()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::set_Next(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::set_Previous(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.CortexM0OnMBED.Drivers.SystemTimer.Timer>::get_Target()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::.ctor()
Microsoft.Zelig.Runtime.KernelList`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::get_StartOfForwardWalk()
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::.ctor(int)
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::EnqueueNonblocking(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData)
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueNonblocking(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData&)
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::DequeueBlocking()
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::NextPosition(int)
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::get_IsEmpty()
Microsoft.Zelig.Runtime.KernelCircularBuffer`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.InterruptData>::get_IsFull()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::.ctor(Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::get_IsValidForForwardMove()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::get_Next()
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::set_Next(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::set_Previous(Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>)
Microsoft.Zelig.Runtime.KernelNode`1<Microsoft.DeviceModels.Chipset.CortexM.Drivers.InterruptController.Handler>::get_Target()
System.Collections.Generic.IEqualityComparer`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::Equals(Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation,Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation)
System.Collections.Generic.IEqualityComparer`1<Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation>::GetHashCode(Microsoft.Zelig.Runtime.TypeSystem.BaseRepresentation)
System.ICustomFormatter::Format(string,object,System.IFormatProvider)
